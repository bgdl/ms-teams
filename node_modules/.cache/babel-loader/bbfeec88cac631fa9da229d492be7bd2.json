{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { pxToRem } from '../../../../utils';\nimport CarouselNavigationItem from '../../../../components/Carousel/CarouselNavigationItem';\nimport { getColorScheme } from '../../colors';\nimport getIconFillOrOutlineStyles from '../../getIconFillOrOutlineStyles';\nvar carouselNavigationItemStyles = {\n  root: function root(_ref) {\n    var p = _ref.props,\n        v = _ref.variables;\n    var active = p.active,\n        iconOnly = p.iconOnly,\n        primary = p.primary,\n        vertical = p.vertical;\n    var colors = getColorScheme(v.colorScheme, null, primary);\n    return Object.assign({\n      color: 'inherit',\n      display: 'block',\n      cursor: 'pointer',\n      whiteSpace: 'nowrap'\n    }, iconOnly && {\n      border: \"\".concat(pxToRem(2), \" solid transparent\")\n    }, {}, vertical ? {\n      padding: v.verticalItemPadding\n    } : {\n      padding: v.horizontalPadding\n    }, {}, iconOnly && {\n      margin: pxToRem(1),\n      padding: pxToRem(5),\n      // padding works this way to get the border to only be 30x30px on focus which is the current design\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }, {}, active && iconOnly && Object.assign({\n      color: v.iconOnlyColorActive\n    }, getIconFillOrOutlineStyles({\n      outline: false\n    })), {\n      // focus styles\n      ':focus-visible': Object.assign({}, iconOnly && Object.assign({\n        borderRadius: '50%',\n        borderColor: v.iconOnlyColorActive\n      }, getIconFillOrOutlineStyles({\n        outline: false\n      })))\n    }, iconOnly && primary && {\n      color: 'inherit',\n      borderColor: v.borderColorActive || colors.borderActive\n    }, {\n      ':focus': {\n        outline: 0\n      },\n      // hover styles\n      ':hover': Object.assign(_defineProperty({\n        color: 'inherit'\n      }, \"& .\".concat(CarouselNavigationItem.slotClassNames.indicator), {\n        background: v.indicatorBackgroundColor\n      }), iconOnly && getIconFillOrOutlineStyles({\n        outline: false\n      }), {}, primary && iconOnly && {\n        color: 'inherit'\n      })\n    });\n  },\n  content: function content(_ref2) {\n    var p = _ref2.props;\n    var widthAdjust = p.indicator ? 26 : 0;\n    return Object.assign({\n      whiteSpace: 'normal',\n      lineHeight: 1.5,\n      marginTop: pxToRem(-4),\n      marginBottom: pxToRem(-4),\n      display: 'inline-block'\n    }, p.vertical && {\n      width: 'max-content',\n      minWidth: pxToRem(46 - widthAdjust),\n      maxWidth: pxToRem(262 - widthAdjust),\n      marginRight: pxToRem(16)\n    });\n  },\n  indicator: function indicator(_ref3) {\n    var p = _ref3.props,\n        v = _ref3.variables;\n    return Object.assign({\n      borderRadius: '50%',\n      width: pxToRem(7),\n      height: pxToRem(7),\n      background: v.indicatorBackgroundColor\n    }, p.active && {\n      background: v.indicatorActiveBackgroundColor\n    }, {}, p.content && {\n      marginRight: pxToRem(10)\n    }, {}, !p.iconOnly && {\n      // reduce margins so text has the dominant influence on the vertical height\n      marginTop: 0,\n      marginBottom: pxToRem(-8),\n      verticalAlign: 'top'\n    });\n  }\n};\nexport default carouselNavigationItemStyles;","map":{"version":3,"sources":["themes/teams/components/Carousel/carouselNavigationItemStyles.ts"],"names":["carouselNavigationItemStyles","root","props","p","variables","v","active","iconOnly","primary","vertical","colors","getColorScheme","color","display","cursor","whiteSpace","border","pxToRem","padding","verticalItemPadding","horizontalPadding","margin","alignItems","justifyContent","iconOnlyColorActive","getIconFillOrOutlineStyles","outline","borderRadius","borderColor","borderActive","CarouselNavigationItem","background","indicatorBackgroundColor","content","widthAdjust","lineHeight","marginTop","marginBottom","width","minWidth","maxWidth","marginRight","indicator","height","indicatorActiveBackgroundColor","verticalAlign"],"mappings":"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","sourcesContent":["import { pxToRem } from '../../../../utils';\nimport CarouselNavigationItem, {\n  CarouselNavigationItemProps,\n} from '../../../../components/Carousel/CarouselNavigationItem';\nimport { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { CarouselNavigationVariables } from './carouselNavigationVariables';\nimport { getColorScheme } from '../../colors';\nimport getIconFillOrOutlineStyles from '../../getIconFillOrOutlineStyles';\n\nconst carouselNavigationItemStyles: ComponentSlotStylesPrepared<\n  CarouselNavigationItemProps,\n  CarouselNavigationVariables\n> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => {\n    const { active, iconOnly, primary, vertical } = p;\n\n    const colors = getColorScheme(v.colorScheme, null, primary);\n\n    return {\n      color: 'inherit',\n      display: 'block',\n      cursor: 'pointer',\n      whiteSpace: 'nowrap',\n\n      ...(iconOnly && {\n        border: `${pxToRem(2)} solid transparent`,\n      }),\n\n      ...(vertical\n        ? { padding: v.verticalItemPadding }\n        : {\n            padding: v.horizontalPadding,\n          }),\n\n      ...(iconOnly && {\n        margin: pxToRem(1),\n        padding: pxToRem(5), // padding works this way to get the border to only be 30x30px on focus which is the current design\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }),\n\n      // active styles\n      ...(active &&\n        iconOnly && {\n          color: v.iconOnlyColorActive,\n          ...getIconFillOrOutlineStyles({ outline: false }),\n        }),\n\n      // focus styles\n      ':focus-visible': {\n        ...(iconOnly && {\n          borderRadius: '50%',\n          borderColor: v.iconOnlyColorActive,\n          ...getIconFillOrOutlineStyles({ outline: false }),\n        }),\n      },\n\n      ...(iconOnly &&\n        primary && {\n          color: 'inherit',\n          borderColor: v.borderColorActive || colors.borderActive,\n        }),\n\n      ':focus': {\n        outline: 0,\n      },\n\n      // hover styles\n      ':hover': {\n        color: 'inherit',\n\n        [`& .${CarouselNavigationItem.slotClassNames.indicator}`]: {\n          background: v.indicatorBackgroundColor,\n        },\n\n        ...(iconOnly && getIconFillOrOutlineStyles({ outline: false })),\n\n        ...(primary && iconOnly && { color: 'inherit' }),\n      },\n    };\n  },\n\n  content: ({ props: p }): ICSSInJSStyle => {\n    const widthAdjust = p.indicator ? 26 : 0;\n\n    return {\n      whiteSpace: 'normal',\n      lineHeight: 1.5,\n      marginTop: pxToRem(-4),\n      marginBottom: pxToRem(-4),\n      display: 'inline-block',\n      ...(p.vertical && {\n        width: 'max-content',\n        minWidth: pxToRem(46 - widthAdjust),\n        maxWidth: pxToRem(262 - widthAdjust),\n        marginRight: pxToRem(16),\n      }),\n    };\n  },\n\n  indicator: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    borderRadius: '50%',\n    width: pxToRem(7),\n    height: pxToRem(7),\n    background: v.indicatorBackgroundColor,\n\n    ...(p.active && {\n      background: v.indicatorActiveBackgroundColor,\n    }),\n\n    ...(p.content && {\n      marginRight: pxToRem(10),\n    }),\n\n    ...(!p.iconOnly && {\n      // reduce margins so text has the dominant influence on the vertical height\n      marginTop: 0,\n      marginBottom: pxToRem(-8),\n      verticalAlign: 'top',\n    }),\n  }),\n};\n\nexport default carouselNavigationItemStyles;\n"]},"metadata":{},"sourceType":"module"}