{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport { tabListBehavior } from '@fluentui/accessibility';\nimport { mergeComponentVariables } from '@fluentui/styles';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { childrenExist, createShorthandFactory, commonPropTypes, rtlTextContainer, UIComponent } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nimport CarouselNavigationItem from './CarouselNavigationItem';\n\nvar CarouselNavigation = /*#__PURE__*/function (_UIComponent) {\n  _inherits(CarouselNavigation, _UIComponent);\n\n  function CarouselNavigation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CarouselNavigation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CarouselNavigation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleItemOverrides\", function (variables) {\n      return function (predefinedProps) {\n        return {\n          onClick: function onClick(e, itemProps) {\n            _invoke(_this.props, 'onItemClick', e, itemProps);\n\n            _invoke(predefinedProps, 'onClick', e, itemProps);\n          },\n          variables: mergeComponentVariables(variables, predefinedProps.variables)\n        };\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderItems\", function (variables, accessibility) {\n      var _this$props = _this.props,\n          activeIndex = _this$props.activeIndex,\n          iconOnly = _this$props.iconOnly,\n          items = _this$props.items,\n          primary = _this$props.primary,\n          secondary = _this$props.secondary,\n          vertical = _this$props.vertical;\n      return _map(items, function (item, index) {\n        return CarouselNavigationItem.create(item, {\n          defaultProps: function defaultProps() {\n            return {\n              active: index === activeIndex,\n              iconOnly: iconOnly,\n              index: index,\n              primary: primary,\n              secondary: secondary,\n              vertical: vertical,\n              accessibility: accessibility.childBehaviors ? accessibility.childBehaviors.item : undefined\n            };\n          },\n          overrideProps: _this.handleItemOverrides(variables)\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CarouselNavigation, [{\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var ElementType = _ref.ElementType,\n          classes = _ref.classes,\n          accessibility = _ref.accessibility,\n          styles = _ref.styles,\n          variables = _ref.variables,\n          unhandledProps = _ref.unhandledProps;\n      var children = this.props.children;\n      return React.createElement(ElementType, _extends({\n        className: classes.root\n      }, accessibility.attributes.root, rtlTextContainer.getAttributes({\n        forElements: [children]\n      }), unhandledProps), childrenExist(children) ? children : this.renderItems(variables, accessibility));\n    }\n  }]);\n\n  return CarouselNavigation;\n}(UIComponent);\n\n_defineProperty(CarouselNavigation, \"displayName\", 'CarouselNavigation');\n\n_defineProperty(CarouselNavigation, \"className\", 'ui-carousel__navigation');\n\n_defineProperty(CarouselNavigation, \"create\", void 0);\n\n_defineProperty(CarouselNavigation, \"propTypes\", Object.assign({}, commonPropTypes.createCommon({\n  content: false\n}), {\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  iconOnly: PropTypes.bool,\n  items: customPropTypes.collectionShorthand,\n  onItemClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  vertical: PropTypes.bool\n}));\n\n_defineProperty(CarouselNavigation, \"defaultProps\", {\n  accessibility: tabListBehavior,\n  as: 'ul'\n});\n\nCarouselNavigation.create = createShorthandFactory({\n  Component: CarouselNavigation,\n  mappedArrayProp: 'items'\n});\n/**\n * A Carousel navigation helps switching between Carousel items.\n */\n\nexport default withSafeTypeForAs(CarouselNavigation);","map":{"version":3,"sources":["components/Carousel/CarouselNavigation.tsx"],"names":["CarouselNavigation","UIComponent","content","activeIndex","PropTypes","iconOnly","bool","items","customPropTypes","collectionShorthand","onItemClick","func","primary","secondary","vertical","accessibility","as","onClick","variables","mergeComponentVariables","predefinedProps","defaultProps","active","index","undefined","overrideProps","ElementType","classes","styles","unhandledProps","children","root","forElements","childrenExist","createShorthandFactory","Component","mappedArrayProp","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import { tabListBehavior } from '@fluentui/accessibility';\nimport { ReactAccessibilityBehavior } from '@fluentui/react-bindings';\nimport { ComponentVariablesObject, mergeComponentVariables } from '@fluentui/styles';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ShorthandFactory,\n  UIComponent,\n} from '../../utils';\nimport { withSafeTypeForAs, WithAsProp, ShorthandCollection, ComponentEventHandler } from '../../types';\nimport CarouselNavigationItem, { CarouselNavigationItemProps } from './CarouselNavigationItem';\n\nexport interface CarouselNavigationProps extends UIComponentProps, ChildrenComponentProps {\n  /** Index of the currently active item. */\n  activeIndex?: number | string;\n\n  /** A navigation may have just icons. */\n  iconOnly?: boolean;\n\n  /** Shorthand array of props for Navigation. */\n  items?: ShorthandCollection<CarouselNavigationItemProps>;\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<CarouselNavigationItemProps>;\n\n  /** The carousel navigation can have primary type. */\n  primary?: boolean;\n\n  /** The carousel navigation can have secondary type. */\n  secondary?: boolean;\n\n  /** A vertical carousel navigation displays elements vertically. */\n  vertical?: boolean;\n}\n\nclass CarouselNavigation extends UIComponent<WithAsProp<CarouselNavigationProps>> {\n  static displayName = 'CarouselNavigation';\n\n  static className = 'ui-carousel__navigation';\n\n  static create: ShorthandFactory<CarouselNavigationProps>;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      content: false,\n    }),\n    activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    iconOnly: PropTypes.bool,\n    items: customPropTypes.collectionShorthand,\n    onItemClick: PropTypes.func,\n    primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n    secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n    vertical: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    accessibility: tabListBehavior,\n    as: 'ul',\n  };\n\n  handleItemOverrides = variables => predefinedProps => ({\n    onClick: (e, itemProps) => {\n      _.invoke(this.props, 'onItemClick', e, itemProps);\n      _.invoke(predefinedProps, 'onClick', e, itemProps);\n    },\n    variables: mergeComponentVariables(variables, predefinedProps.variables),\n  });\n\n  renderItems = (variables: ComponentVariablesObject, accessibility: ReactAccessibilityBehavior) => {\n    const { activeIndex, iconOnly, items, primary, secondary, vertical } = this.props;\n\n    return _.map(items, (item, index) =>\n      CarouselNavigationItem.create(item, {\n        defaultProps: () => ({\n          active: index === activeIndex,\n          iconOnly,\n          index,\n          primary,\n          secondary,\n          vertical,\n          accessibility: accessibility.childBehaviors ? accessibility.childBehaviors.item : undefined,\n        }),\n        overrideProps: this.handleItemOverrides(variables),\n      }),\n    );\n  };\n\n  renderComponent({ ElementType, classes, accessibility, styles, variables, unhandledProps }) {\n    const { children } = this.props;\n    return (\n      <ElementType\n        className={classes.root}\n        {...accessibility.attributes.root}\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...unhandledProps}\n      >\n        {childrenExist(children) ? children : this.renderItems(variables, accessibility)}\n      </ElementType>\n    );\n  }\n}\n\nCarouselNavigation.create = createShorthandFactory({\n  Component: CarouselNavigation,\n  mappedArrayProp: 'items',\n});\n\n/**\n * A Carousel navigation helps switching between Carousel items.\n */\nexport default withSafeTypeForAs<typeof CarouselNavigation, CarouselNavigationProps, 'ul'>(CarouselNavigation);\n"]},"metadata":{},"sourceType":"module"}