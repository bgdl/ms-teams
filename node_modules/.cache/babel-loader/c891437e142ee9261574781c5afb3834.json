{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { tabBehavior } from '@fluentui/accessibility';\nimport { childrenExist, createShorthandFactory, commonPropTypes, rtlTextContainer, applyAccessibilityKeyHandlers, UIComponent } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nimport Box from '../Box/Box';\n\nvar CarouselNavigationItem = /*#__PURE__*/function (_UIComponent) {\n  _inherits(CarouselNavigationItem, _UIComponent);\n\n  function CarouselNavigationItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CarouselNavigationItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CarouselNavigationItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBlur\", function (e) {\n      _invoke(_this.props, 'onBlur', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFocus\", function (e) {\n      _invoke(_this.props, 'onFocus', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"actionHandlers\", {\n      performClick: function performClick(event) {\n        return !event.defaultPrevented && _this.handleClick(event);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CarouselNavigationItem, [{\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var ElementType = _ref.ElementType,\n          classes = _ref.classes,\n          accessibility = _ref.accessibility,\n          styles = _ref.styles,\n          variables = _ref.variables,\n          unhandledProps = _ref.unhandledProps;\n      var _this$props = this.props,\n          children = _this$props.children,\n          content = _this$props.content,\n          indicator = _this$props.indicator;\n      return childrenExist(children) ? children : React.createElement(ElementType, _extends({\n        className: classes.root,\n        onBlur: this.handleBlur,\n        onFocus: this.handleFocus,\n        onClick: this.handleClick\n      }, accessibility.attributes.root, rtlTextContainer.getAttributes({\n        forElements: [children]\n      }), applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps), unhandledProps), Box.create(indicator, {\n        defaultProps: function defaultProps() {\n          return {\n            className: CarouselNavigationItem.slotClassNames.indicator,\n            styles: styles.indicator\n          };\n        }\n      }), Box.create(content, {\n        defaultProps: function defaultProps() {\n          return {\n            as: 'span',\n            styles: styles.content\n          };\n        }\n      }));\n    }\n  }]);\n\n  return CarouselNavigationItem;\n}(UIComponent);\n\n_defineProperty(CarouselNavigationItem, \"displayName\", 'CarouselNavigationItem');\n\n_defineProperty(CarouselNavigationItem, \"className\", 'ui-carousel__navigationitem');\n\n_defineProperty(CarouselNavigationItem, \"slotClassNames\", {\n  indicator: \"\".concat(CarouselNavigationItem.className, \"__indicator\")\n});\n\n_defineProperty(CarouselNavigationItem, \"create\", void 0);\n\n_defineProperty(CarouselNavigationItem, \"propTypes\", Object.assign({}, commonPropTypes.createCommon(), {\n  active: PropTypes.bool,\n  indicator: customPropTypes.shorthandAllowingChildren,\n  iconOnly: PropTypes.bool,\n  index: PropTypes.number,\n  onClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  vertical: PropTypes.bool\n}));\n\n_defineProperty(CarouselNavigationItem, \"defaultProps\", {\n  accessibility: tabBehavior,\n  as: 'li',\n  indicator: {}\n});\n\nCarouselNavigationItem.create = createShorthandFactory({\n  Component: CarouselNavigationItem,\n  mappedArrayProp: 'content'\n});\n/**\n * A CarouselItem is an actionable item within a Carousel.\n */\n\nexport default withSafeTypeForAs(CarouselNavigationItem);","map":{"version":3,"sources":["components/Carousel/CarouselNavigationItem.tsx"],"names":["CarouselNavigationItem","UIComponent","indicator","commonPropTypes","active","PropTypes","bool","customPropTypes","shorthandAllowingChildren","iconOnly","index","number","onClick","func","primary","secondary","vertical","accessibility","as","ElementType","classes","styles","variables","unhandledProps","children","content","childrenExist","handleClick","forElements","applyAccessibilityKeyHandlers","defaultProps","className","performClick","event","createShorthandFactory","Component","mappedArrayProp","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport { Accessibility, tabBehavior } from '@fluentui/accessibility';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ShorthandFactory,\n  ContentComponentProps,\n  applyAccessibilityKeyHandlers,\n  UIComponent,\n} from '../../utils';\nimport { withSafeTypeForAs, WithAsProp, ShorthandValue, ComponentEventHandler } from '../../types';\nimport Box, { BoxProps } from '../Box/Box';\n\nexport interface CarouselNavigationItemSlotClassNames {\n  indicator: string;\n}\n\nexport interface CarouselNavigationItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** A menu item can be active. */\n  active?: boolean;\n\n  /** Indicator for the Carousel Navigation Item. */\n  indicator?: ShorthandValue<BoxProps>;\n\n  /** A Carousel Navigation may have just icons. */\n  iconOnly?: boolean;\n\n  /** CarouselNavigationIntem index inside CarouselNavigation. */\n  index?: number;\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick?: ComponentEventHandler<CarouselNavigationItemProps>;\n\n  /** The carousel navigation item can have primary type. */\n  primary?: boolean;\n\n  /** The carousel navigation item can have secondary type. */\n  secondary?: boolean;\n\n  /** A vertical carousel navigation displays elements vertically. */\n  vertical?: boolean;\n}\n\nclass CarouselNavigationItem extends UIComponent<WithAsProp<CarouselNavigationItemProps>> {\n  static displayName = 'CarouselNavigationItem';\n\n  static className = 'ui-carousel__navigationitem';\n\n  static slotClassNames: CarouselNavigationItemSlotClassNames = {\n    indicator: `${CarouselNavigationItem.className}__indicator`,\n  };\n\n  static create: ShorthandFactory<CarouselNavigationItemProps>;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon(),\n    active: PropTypes.bool,\n    indicator: customPropTypes.shorthandAllowingChildren,\n    iconOnly: PropTypes.bool,\n    index: PropTypes.number,\n    onClick: PropTypes.func,\n    primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n    secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n    vertical: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    accessibility: tabBehavior as Accessibility,\n    as: 'li',\n    indicator: {},\n  };\n\n  renderComponent({ ElementType, classes, accessibility, styles, variables, unhandledProps }) {\n    const { children, content, indicator } = this.props;\n\n    return childrenExist(children) ? (\n      children\n    ) : (\n      <ElementType\n        className={classes.root}\n        onBlur={this.handleBlur}\n        onFocus={this.handleFocus}\n        onClick={this.handleClick}\n        {...accessibility.attributes.root}\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)}\n        {...unhandledProps}\n      >\n        {Box.create(indicator, {\n          defaultProps: () => ({\n            className: CarouselNavigationItem.slotClassNames.indicator,\n            styles: styles.indicator,\n          }),\n        })}\n        {Box.create(content, {\n          defaultProps: () => ({ as: 'span', styles: styles.content }),\n        })}\n      </ElementType>\n    );\n  }\n\n  handleClick = (e: Event | React.SyntheticEvent) => {\n    _.invoke(this.props, 'onClick', e, this.props);\n  };\n\n  handleBlur = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onBlur', e, this.props);\n  };\n\n  handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onFocus', e, this.props);\n  };\n\n  actionHandlers = {\n    performClick: event => !event.defaultPrevented && this.handleClick(event),\n  };\n}\n\nCarouselNavigationItem.create = createShorthandFactory({\n  Component: CarouselNavigationItem,\n  mappedArrayProp: 'content',\n});\n\n/**\n * A CarouselItem is an actionable item within a Carousel.\n */\nexport default withSafeTypeForAs<typeof CarouselNavigationItem, CarouselNavigationItemProps, 'li'>(\n  CarouselNavigationItem,\n);\n"]},"metadata":{},"sourceType":"module"}