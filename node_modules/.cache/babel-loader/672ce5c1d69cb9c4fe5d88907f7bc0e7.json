{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { UIComponent, createShorthandFactory, commonPropTypes } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nimport Input from '../Input/Input';\n\nvar DropdownSearchInput = /*#__PURE__*/function (_UIComponent) {\n  _inherits(DropdownSearchInput, _UIComponent);\n\n  function DropdownSearchInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DropdownSearchInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DropdownSearchInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFocus\", function (e) {\n      _invoke(_this.props, 'onFocus', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputKeyDown\", function (e) {\n      _invoke(_this.props, 'onInputKeyDown', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputBlur\", function (e) {\n      _invoke(_this.props, 'onInputBlur', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyUp\", function (e) {\n      _invoke(_this.props, 'onKeyUp', e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(DropdownSearchInput, [{\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var unhandledProps = _ref.unhandledProps,\n          styles = _ref.styles;\n      var _this$props = this.props,\n          accessibilityComboboxProps = _this$props.accessibilityComboboxProps,\n          accessibilityInputProps = _this$props.accessibilityInputProps,\n          inputRef = _this$props.inputRef,\n          placeholder = _this$props.placeholder,\n          disabled = _this$props.disabled;\n      return React.createElement(Input, _extends({\n        disabled: disabled,\n        inputRef: inputRef,\n        onFocus: this.handleFocus,\n        onKeyUp: this.handleKeyUp\n      }, unhandledProps, {\n        wrapper: Object.assign({\n          className: DropdownSearchInput.slotClassNames.wrapper,\n          styles: styles.root\n        }, accessibilityComboboxProps, {}, unhandledProps.wrapper),\n        input: Object.assign({\n          type: 'text',\n          className: DropdownSearchInput.slotClassNames.input,\n          styles: styles.input,\n          placeholder: placeholder,\n          onBlur: this.handleInputBlur,\n          onKeyDown: this.handleInputKeyDown\n        }, accessibilityInputProps, {}, unhandledProps.input)\n      }));\n    }\n  }]);\n\n  return DropdownSearchInput;\n}(UIComponent);\n\n_defineProperty(DropdownSearchInput, \"displayName\", 'DropdownSearchInput');\n\n_defineProperty(DropdownSearchInput, \"create\", void 0);\n\n_defineProperty(DropdownSearchInput, \"slotClassNames\", void 0);\n\n_defineProperty(DropdownSearchInput, \"className\", 'ui-dropdown__searchinput');\n\n_defineProperty(DropdownSearchInput, \"propTypes\", Object.assign({}, commonPropTypes.createCommon({\n  accessibility: false,\n  children: false,\n  content: false\n}), {\n  accessibilityInputProps: PropTypes.object,\n  accessibilityComboboxProps: PropTypes.object,\n  disabled: PropTypes.bool,\n  inline: PropTypes.bool,\n  inputRef: customPropTypes.ref,\n  onFocus: PropTypes.func,\n  onInputBlur: PropTypes.func,\n  onInputKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  placeholder: PropTypes.string\n}));\n\nDropdownSearchInput.slotClassNames = {\n  input: \"\".concat(DropdownSearchInput.className, \"__input\"),\n  wrapper: \"\".concat(DropdownSearchInput.className, \"__wrapper\")\n};\nDropdownSearchInput.create = createShorthandFactory({\n  Component: DropdownSearchInput\n});\n/**\n * A DropdownSearchInput represents item of 'search' Dropdown.\n * Used to display the search input field.\n */\n\nexport default withSafeTypeForAs(DropdownSearchInput);","map":{"version":3,"sources":["components/Dropdown/DropdownSearchInput.tsx"],"names":["DropdownSearchInput","UIComponent","accessibility","children","content","accessibilityInputProps","PropTypes","object","accessibilityComboboxProps","disabled","bool","inline","inputRef","customPropTypes","ref","onFocus","func","onInputBlur","onInputKeyDown","onKeyUp","placeholder","string","unhandledProps","styles","handleKeyUp","className","root","type","onBlur","onKeyDown","handleInputKeyDown","input","wrapper","createShorthandFactory","Component","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n\nimport {\n  UIComponent,\n  RenderResultConfig,\n  createShorthandFactory,\n  commonPropTypes,\n  ShorthandFactory,\n} from '../../utils';\nimport { ComponentEventHandler, WithAsProp, withSafeTypeForAs } from '../../types';\nimport { UIComponentProps } from '../../utils/commonPropInterfaces';\nimport Input from '../Input/Input';\n\nexport interface DropdownSearchInputSlotClassNames {\n  input: string;\n  wrapper: string;\n}\n\nexport interface DropdownSearchInputProps extends UIComponentProps<DropdownSearchInputProps> {\n  /** Accessibility props for combobox slot. */\n  accessibilityComboboxProps?: any;\n\n  /** Accessibility props for input slot. */\n  accessibilityInputProps?: any;\n\n  /** A dropdown search input can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A dropdown search input can be formatted to appear inline in the context of a Dropdown. */\n  inline?: boolean;\n\n  /** Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLElement>;\n\n  /**\n   * Called on input element focus.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onFocus?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input element blur.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onInputBlur?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input key down event.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onInputKeyDown?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input key up event.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyUp?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /** A placeholder message. */\n  placeholder?: string;\n}\n\nclass DropdownSearchInput extends UIComponent<WithAsProp<DropdownSearchInputProps>, any> {\n  static displayName = 'DropdownSearchInput';\n  static create: ShorthandFactory<DropdownSearchInputProps>;\n  static slotClassNames: DropdownSearchInputSlotClassNames;\n  static className = 'ui-dropdown__searchinput';\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      accessibility: false,\n      children: false,\n      content: false,\n    }),\n    accessibilityInputProps: PropTypes.object,\n    accessibilityComboboxProps: PropTypes.object,\n    disabled: PropTypes.bool,\n    inline: PropTypes.bool,\n    inputRef: customPropTypes.ref,\n    onFocus: PropTypes.func,\n    onInputBlur: PropTypes.func,\n    onInputKeyDown: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    placeholder: PropTypes.string,\n  };\n\n  handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onFocus', e, this.props);\n  };\n\n  handleInputKeyDown = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onInputKeyDown', e, this.props);\n  };\n\n  handleInputBlur = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onInputBlur', e, this.props);\n  };\n\n  handleKeyUp = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onKeyUp', e, this.props);\n  };\n\n  renderComponent({ unhandledProps, styles }: RenderResultConfig<DropdownSearchInputProps>) {\n    const { accessibilityComboboxProps, accessibilityInputProps, inputRef, placeholder, disabled } = this.props;\n    return (\n      <Input\n        disabled={disabled}\n        inputRef={inputRef}\n        onFocus={this.handleFocus}\n        onKeyUp={this.handleKeyUp}\n        {...unhandledProps}\n        wrapper={{\n          className: DropdownSearchInput.slotClassNames.wrapper,\n          styles: styles.root,\n          ...accessibilityComboboxProps,\n          ...unhandledProps.wrapper,\n        }}\n        input={{\n          type: 'text',\n          className: DropdownSearchInput.slotClassNames.input,\n          styles: styles.input,\n          placeholder,\n          onBlur: this.handleInputBlur,\n          onKeyDown: this.handleInputKeyDown,\n          ...accessibilityInputProps,\n          ...unhandledProps.input,\n        }}\n      />\n    );\n  }\n}\n\nDropdownSearchInput.slotClassNames = {\n  input: `${DropdownSearchInput.className}__input`,\n  wrapper: `${DropdownSearchInput.className}__wrapper`,\n};\n\nDropdownSearchInput.create = createShorthandFactory({ Component: DropdownSearchInput });\n\n/**\n * A DropdownSearchInput represents item of 'search' Dropdown.\n * Used to display the search input field.\n */\nexport default withSafeTypeForAs<typeof DropdownSearchInput, DropdownSearchInputProps>(DropdownSearchInput);\n"]},"metadata":{},"sourceType":"module"}