{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _uniqueId from \"lodash/uniqueId\";\nimport { alertBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { AutoControlledComponent, commonPropTypes, childrenExist, rtlTextContainer } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nimport Box from '../Box/Box';\nimport Text from '../Text/Text';\nimport ButtonGroup from '../Button/ButtonGroup';\nimport AlertDismissAction from './AlertDismissAction';\n\nvar Alert = /*#__PURE__*/function (_AutoControlledCompon) {\n  _inherits(Alert, _AutoControlledCompon);\n\n  function Alert() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Alert);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Alert)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDismissOverrides\", function (predefinedProps) {\n      return {\n        onClick: function onClick(e, buttonProps) {\n          _invoke(predefinedProps, 'onClick', e, buttonProps);\n\n          _invoke(_this.props, 'onVisibleChange', e, Object.assign({}, _this.props, {\n            visible: false\n          }));\n\n          _this.setState({\n            visible: false\n          });\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFocus\", function (e) {\n      _invoke(_this.props, 'onFocus', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderContent\", function (_ref) {\n      var styles = _ref.styles,\n          accessibility = _ref.accessibility;\n      var _this$props = _this.props,\n          actions = _this$props.actions,\n          dismissible = _this$props.dismissible,\n          dismissAction = _this$props.dismissAction,\n          content = _this$props.content,\n          icon = _this$props.icon,\n          header = _this$props.header,\n          body = _this$props.body,\n          danger = _this$props.danger,\n          warning = _this$props.warning,\n          info = _this$props.info,\n          success = _this$props.success,\n          variables = _this$props.variables;\n      var bodyContent = React.createElement(React.Fragment, null, Text.create(header, {\n        defaultProps: function defaultProps() {\n          return Object.assign({\n            className: Alert.slotClassNames.header,\n            styles: styles.header\n          }, accessibility.attributes.header);\n        }\n      }), Box.create(content, {\n        defaultProps: function defaultProps() {\n          return Object.assign({\n            className: Alert.slotClassNames.content,\n            styles: styles.content\n          }, accessibility.attributes.content);\n        }\n      }));\n      return React.createElement(React.Fragment, null, Box.create(icon, {\n        defaultProps: function defaultProps() {\n          return {\n            className: Alert.slotClassNames.icon,\n            styles: styles.icon\n          };\n        }\n      }), Box.create(body, {\n        defaultProps: function defaultProps() {\n          return Object.assign({\n            id: _this.state.bodyId,\n            className: Alert.slotClassNames.body\n          }, accessibility.attributes.body, {\n            styles: styles.body\n          });\n        },\n        overrideProps: {\n          children: bodyContent\n        }\n      }), ButtonGroup.create(actions, {\n        defaultProps: function defaultProps() {\n          return {\n            className: Alert.slotClassNames.actions,\n            styles: styles.actions\n          };\n        }\n      }), dismissible && AlertDismissAction.create(dismissAction, {\n        defaultProps: function defaultProps() {\n          return Object.assign({\n            danger: danger,\n            warning: warning,\n            info: info,\n            success: success,\n            variables: variables\n          }, accessibility.attributes.dismissAction);\n        },\n        overrideProps: _this.handleDismissOverrides\n      }));\n    });\n\n    return _this;\n  }\n\n  _createClass(Alert, [{\n    key: \"getInitialAutoControlledState\",\n    value: function getInitialAutoControlledState() {\n      return {\n        visible: true,\n        bodyId: _uniqueId('alert-body-')\n      };\n    }\n  }, {\n    key: \"renderComponent\",\n    value: function renderComponent(config) {\n      var accessibility = config.accessibility,\n          classes = config.classes,\n          ElementType = config.ElementType,\n          unhandledProps = config.unhandledProps;\n      var children = this.props.children;\n      return React.createElement(ElementType, _extends({\n        className: classes.root,\n        onFocus: this.handleFocus\n      }, accessibility.attributes.root, rtlTextContainer.getAttributes({\n        forElements: [children]\n      }), unhandledProps), childrenExist(children) ? children : this.renderContent(config));\n    }\n  }]);\n\n  return Alert;\n}(AutoControlledComponent);\n/**\n * An Alert displays a brief, important message to attract a user's attention without interrupting their current task.\n *\n * @accessibility\n * Implements [ARIA Alert](https://www.w3.org/TR/wai-aria-practices-1.1/#alert) design pattern.\n */\n\n\n_defineProperty(Alert, \"displayName\", 'Alert');\n\n_defineProperty(Alert, \"className\", 'ui-alert');\n\n_defineProperty(Alert, \"slotClassNames\", {\n  content: \"\".concat(Alert.className, \"__content\"),\n  actions: \"\".concat(Alert.className, \"__actions\"),\n  icon: \"\".concat(Alert.className, \"__icon\"),\n  header: \"\".concat(Alert.className, \"__header\"),\n  body: \"\".concat(Alert.className, \"__body\")\n});\n\n_defineProperty(Alert, \"propTypes\", Object.assign({}, commonPropTypes.createCommon({\n  content: 'shorthand'\n}), {\n  actions: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  icon: customPropTypes.shorthandAllowingChildren,\n  header: customPropTypes.itemShorthand,\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n  fitted: PropTypes.bool,\n  danger: PropTypes.bool,\n  defaultVisible: PropTypes.bool,\n  dismissible: PropTypes.bool,\n  dismissAction: customPropTypes.itemShorthand,\n  info: PropTypes.bool,\n  onVisibleChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  success: PropTypes.bool,\n  visible: PropTypes.bool,\n  warning: PropTypes.bool,\n  body: customPropTypes.itemShorthand\n}));\n\n_defineProperty(Alert, \"defaultProps\", {\n  accessibility: alertBehavior,\n  dismissAction: {},\n  body: {}\n});\n\n_defineProperty(Alert, \"DismissAction\", AlertDismissAction);\n\n_defineProperty(Alert, \"autoControlledProps\", ['visible']);\n\nexport default withSafeTypeForAs(Alert);","map":{"version":3,"sources":["components/Alert/Alert.tsx"],"names":["Alert","AutoControlledComponent","content","actions","icon","header","body","PropTypes","customPropTypes","shorthandAllowingChildren","itemShorthand","attached","fitted","bool","danger","defaultVisible","dismissible","dismissAction","info","onVisibleChange","func","onFocus","success","visible","warning","accessibility","AlertDismissAction","bodyId","onClick","styles","variables","bodyContent","defaultProps","className","id","overrideProps","children","handleDismissOverrides","config","classes","ElementType","unhandledProps","handleFocus","forElements","childrenExist","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import { Accessibility, alertBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  AutoControlledComponent,\n  UIComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  childrenExist,\n  rtlTextContainer,\n} from '../../utils';\nimport { RenderResultConfig } from '../../utils/renderComponent';\nimport { ComponentEventHandler, WithAsProp, ShorthandValue, withSafeTypeForAs, ShorthandCollection } from '../../types';\nimport Box, { BoxProps } from '../Box/Box';\nimport { ButtonProps } from '../Button/Button';\nimport Text, { TextProps } from '../Text/Text';\n\nimport ButtonGroup, { ButtonGroupProps } from '../Button/ButtonGroup';\nimport AlertDismissAction, { AlertDismissActionProps } from './AlertDismissAction';\n\nexport interface AlertSlotClassNames {\n  content: string;\n  actions: string;\n  icon: string;\n  header: string;\n  body: string;\n}\n\nexport interface AlertProps extends UIComponentProps, ContentComponentProps<ShorthandValue<BoxProps>> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available alertWarningBehavior\n   */\n  accessibility?: Accessibility;\n\n  /** An alert can contain action buttons. */\n  actions?: ShorthandValue<ButtonGroupProps> | ShorthandCollection<ButtonProps>;\n\n  /** An alert may contain an icon. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** An alert may contain a header. */\n  header?: ShorthandValue<TextProps>;\n\n  /** An alert's position relative to neighboring items. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** An alert can only take up the width of its content. */\n  fitted?: boolean;\n\n  /** An alert may be formatted to display a danger message. */\n  danger?: boolean;\n\n  /** A default value for the `visible` prop. */\n  defaultVisible?: boolean;\n\n  /** An alert can be dismissible. */\n  dismissible?: boolean;\n\n  /**\n   * A button shorthand for the dismiss action slot. To use this slot the alert should be\n   * dismissible.\n   */\n  dismissAction?: ShorthandValue<AlertDismissActionProps>;\n\n  /** An alert may be formatted to display information. */\n  info?: boolean;\n\n  /**\n   * Called after user will dismiss the alert.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onVisibleChange?: ComponentEventHandler<AlertProps>;\n\n  /**\n   * Called after the alert is focused.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<AlertProps>;\n\n  /** An alert can be formatted to display a successful message. */\n  success?: boolean;\n\n  /** An alert can be set to visible to force itself to be shown. */\n  visible?: boolean;\n\n  /** An alert can be formatted to display a warning message. */\n  warning?: boolean;\n\n  /** An alert can have a body that contains header and content elements. */\n  body?: ShorthandValue<BoxProps>;\n}\n\nexport interface AlertState {\n  visible: boolean;\n  bodyId: string;\n}\n\nclass Alert extends AutoControlledComponent<WithAsProp<AlertProps>, AlertState> {\n  static displayName = 'Alert';\n  static className = 'ui-alert';\n\n  static slotClassNames: AlertSlotClassNames = {\n    content: `${Alert.className}__content`,\n    actions: `${Alert.className}__actions`,\n    icon: `${Alert.className}__icon`,\n    header: `${Alert.className}__header`,\n    body: `${Alert.className}__body`,\n  };\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({ content: 'shorthand' }),\n    actions: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n    icon: customPropTypes.shorthandAllowingChildren,\n    header: customPropTypes.itemShorthand,\n    attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n    fitted: PropTypes.bool,\n    danger: PropTypes.bool,\n    defaultVisible: PropTypes.bool,\n    dismissible: PropTypes.bool,\n    dismissAction: customPropTypes.itemShorthand,\n    info: PropTypes.bool,\n    onVisibleChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    success: PropTypes.bool,\n    visible: PropTypes.bool,\n    warning: PropTypes.bool,\n    body: customPropTypes.itemShorthand,\n  };\n\n  static defaultProps = {\n    accessibility: alertBehavior,\n    dismissAction: {},\n    body: {},\n  };\n\n  static DismissAction = AlertDismissAction;\n\n  static autoControlledProps = ['visible'];\n\n  getInitialAutoControlledState(): AlertState {\n    return {\n      visible: true,\n      bodyId: _.uniqueId('alert-body-'),\n    };\n  }\n\n  handleDismissOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n\n      _.invoke(this.props, 'onVisibleChange', e, { ...this.props, visible: false });\n      this.setState({ visible: false });\n    },\n  });\n\n  handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onFocus', e, this.props);\n  };\n\n  renderContent = ({ styles, accessibility }: RenderResultConfig<AlertProps>) => {\n    const {\n      actions,\n      dismissible,\n      dismissAction,\n      content,\n      icon,\n      header,\n      body,\n      danger,\n      warning,\n      info,\n      success,\n      variables,\n    } = this.props;\n\n    const bodyContent = (\n      <>\n        {Text.create(header, {\n          defaultProps: () => ({\n            className: Alert.slotClassNames.header,\n            styles: styles.header,\n            ...accessibility.attributes.header,\n          }),\n        })}\n        {Box.create(content, {\n          defaultProps: () => ({\n            className: Alert.slotClassNames.content,\n            styles: styles.content,\n            ...accessibility.attributes.content,\n          }),\n        })}\n      </>\n    );\n\n    return (\n      <>\n        {Box.create(icon, {\n          defaultProps: () => ({\n            className: Alert.slotClassNames.icon,\n            styles: styles.icon,\n          }),\n        })}\n        {Box.create(body, {\n          defaultProps: () => ({\n            id: this.state.bodyId,\n            className: Alert.slotClassNames.body,\n            ...accessibility.attributes.body,\n            styles: styles.body,\n          }),\n          overrideProps: {\n            children: bodyContent,\n          },\n        })}\n\n        {ButtonGroup.create(actions, {\n          defaultProps: () => ({\n            className: Alert.slotClassNames.actions,\n            styles: styles.actions,\n          }),\n        })}\n        {dismissible &&\n          AlertDismissAction.create(dismissAction, {\n            defaultProps: () => ({\n              danger,\n              warning,\n              info,\n              success,\n              variables,\n              ...accessibility.attributes.dismissAction,\n            }),\n            overrideProps: this.handleDismissOverrides,\n          })}\n      </>\n    );\n  };\n\n  renderComponent(config: RenderResultConfig<AlertProps>) {\n    const { accessibility, classes, ElementType, unhandledProps } = config;\n    const { children } = this.props;\n\n    return (\n      <ElementType\n        className={classes.root}\n        onFocus={this.handleFocus}\n        {...accessibility.attributes.root}\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...unhandledProps}\n      >\n        {childrenExist(children) ? children : this.renderContent(config)}\n      </ElementType>\n    );\n  }\n}\n\n/**\n * An Alert displays a brief, important message to attract a user's attention without interrupting their current task.\n *\n * @accessibility\n * Implements [ARIA Alert](https://www.w3.org/TR/wai-aria-practices-1.1/#alert) design pattern.\n */\nexport default withSafeTypeForAs<typeof Alert, AlertProps>(Alert);\n"]},"metadata":{},"sourceType":"module"}