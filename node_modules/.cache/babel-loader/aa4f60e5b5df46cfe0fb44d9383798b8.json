{"ast":null,"code":"var _jsxFileName = \"/Users/bogdanluca/moqups/ms-teams/src/components/shared/vertical-menu.tsx\";\nimport React from 'react';\nimport { Segment, Menu } from '@fluentui/react-northstar';\n\n/**\n * Default number of columns in a flex box to divide content between\n */\nconst pageWidth = 12;\n/**\n * The vertical menu component. This renders a list of items to choose between on\n * the left of the screen and the content of that item on the right hand side.\n */\n\nexport default class VerticalMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.menuWidth = void 0;\n    this.menuWidth = props.menuWidth;\n    this.state = {\n      menuItems: props.menuItems,\n      currentKey: props.menuItems.length > 0 ? props.menuItems[0].key : ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      content: this.renderMenu(),\n      styles: {\n        gridColumn: `span ${this.menuWidth}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Segment, {\n      content: this.renderContent(),\n      styles: {\n        gridColumn: `span ${pageWidth - this.menuWidth}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderMenu() {\n    return /*#__PURE__*/React.createElement(Menu, {\n      defaultActiveIndex: 0,\n      items: this.formatMenuItems(this.state.menuItems),\n      vertical: true,\n      pointing: true,\n      styles: {\n        width: 'auto'\n      },\n      onActiveIndexChange: this.menuItemChanged.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderContent() {\n    let currentContent = this.state.menuItems.filter(mi => mi.key === this.state.currentKey);\n\n    if (currentContent.length !== 1) {\n      console.error(`A single item was not found for content with key: ${this.state.currentKey}`);\n    }\n\n    return currentContent[0].pageContent;\n  }\n\n  formatMenuItems(items) {\n    let result = [];\n\n    for (let item of items) {\n      result.push({\n        key: item.key,\n        content: item.label,\n        icon: item.icon\n      });\n    }\n\n    return result;\n  }\n\n  menuItemChanged(event, menu) {\n    let currentIndex = menu.activeIndex;\n\n    if (menu.items && menu.items[currentIndex]) {\n      this.setState({\n        currentKey: menu.items[currentIndex].key\n      });\n    }\n  }\n\n}\n/**\n * Vertical menu props type\n */","map":{"version":3,"sources":["/Users/bogdanluca/moqups/ms-teams/src/components/shared/vertical-menu.tsx"],"names":["React","Segment","Menu","pageWidth","VerticalMenu","Component","constructor","props","menuWidth","state","menuItems","currentKey","length","key","render","renderMenu","gridColumn","renderContent","formatMenuItems","width","menuItemChanged","bind","currentContent","filter","mi","console","error","pageContent","items","result","item","push","content","label","icon","event","menu","currentIndex","activeIndex","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAAsF,2BAAtF;;AAGA;AACA;AACA;AACA,MAAMC,SAAS,GAAG,EAAlB;AAEA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAAiF;AAG5FC,EAAAA,WAAW,CAACC,KAAD,EAA2B;AAClC,UAAMA,KAAN;AADkC,SAF9BC,SAE8B;AAGlC,SAAKA,SAAL,GAAiBD,KAAK,CAACC,SAAvB;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAEH,KAAK,CAACG,SADR;AAETC,MAAAA,UAAU,EAAEJ,KAAK,CAACG,SAAN,CAAgBE,MAAhB,GAAyB,CAAzB,GAA6BL,KAAK,CAACG,SAAN,CAAgB,CAAhB,EAAmBG,GAAhD,GAAsD;AAFzD,KAAb;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AACI,MAAA,OAAO,EAAE,KAAKC,UAAL,EADb;AAEI,MAAA,MAAM,EAAE;AAAEC,QAAAA,UAAU,EAAG,QAAO,KAAKR,SAAU;AAArC,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAKI,oBAAC,OAAD;AACI,MAAA,OAAO,EAAE,KAAKS,aAAL,EADb;AAEI,MAAA,MAAM,EAAE;AAAED,QAAAA,UAAU,EAAG,QAAOb,SAAS,GAAG,KAAKK,SAAU;AAAjD,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AAYH;;AAEOO,EAAAA,UAAU,GAAG;AACjB,wBACI,oBAAC,IAAD;AACI,MAAA,kBAAkB,EAAE,CADxB;AAEI,MAAA,KAAK,EAAE,KAAKG,eAAL,CAAqB,KAAKT,KAAL,CAAWC,SAAhC,CAFX;AAGI,MAAA,QAAQ,MAHZ;AAII,MAAA,QAAQ,MAJZ;AAKI,MAAA,MAAM,EAAE;AAAES,QAAAA,KAAK,EAAE;AAAT,OALZ;AAMI,MAAA,mBAAmB,EAAE,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH;;AAEOJ,EAAAA,aAAa,GAAG;AACpB,QAAIK,cAAc,GAAG,KAAKb,KAAL,CAAWC,SAAX,CAAqBa,MAArB,CAA4BC,EAAE,IAAIA,EAAE,CAACX,GAAH,KAAW,KAAKJ,KAAL,CAAWE,UAAxD,CAArB;;AAEA,QAAIW,cAAc,CAACV,MAAf,KAA0B,CAA9B,EAAiC;AAC7Ba,MAAAA,OAAO,CAACC,KAAR,CAAe,qDAAoD,KAAKjB,KAAL,CAAWE,UAAW,EAAzF;AACH;;AAED,WACIW,cAAc,CAAC,CAAD,CAAd,CAAkBK,WADtB;AAGH;;AAEOT,EAAAA,eAAe,CAACU,KAAD,EAA4E;AAC/F,QAAIC,MAA8D,GAAG,EAArE;;AAEA,SAAK,IAAIC,IAAT,IAAiBF,KAAjB,EAAwB;AACpBC,MAAAA,MAAM,CAACE,IAAP,CAAY;AACRlB,QAAAA,GAAG,EAAEiB,IAAI,CAACjB,GADF;AAERmB,QAAAA,OAAO,EAAEF,IAAI,CAACG,KAFN;AAGRC,QAAAA,IAAI,EAAEJ,IAAI,CAACI;AAHH,OAAZ;AAKH;;AAED,WAAOL,MAAP;AACH;;AAEOT,EAAAA,eAAe,CAACe,KAAD,EAA2CC,IAA3C,EAAsD;AACzE,QAAIC,YAAY,GAAGD,IAAI,CAACE,WAAxB;;AAEA,QAAIF,IAAI,CAACR,KAAL,IAAcQ,IAAI,CAACR,KAAL,CAAWS,YAAX,CAAlB,EAA4C;AACxC,WAAKE,QAAL,CAAc;AACV5B,QAAAA,UAAU,EAAEyB,IAAI,CAACR,KAAL,CAAWS,YAAX,EAAyBxB;AAD3B,OAAd;AAGH;AACJ;;AA5E2F;AA+EhG;AACA;AACA","sourcesContent":["import React from 'react';\nimport { Segment, Menu, ShorthandCollection, MenuItemProps, MenuShorthandKinds } from '@fluentui/react-northstar';\nimport { default as MenuItem } from '../../models/menu-item';\n\n/**\n * Default number of columns in a flex box to divide content between\n */\nconst pageWidth = 12;\n\n/**\n * The vertical menu component. This renders a list of items to choose between on\n * the left of the screen and the content of that item on the right hand side.\n */\nexport default class VerticalMenu extends React.Component<VerticalMenuProps, VerticalMenuState> {\n    private menuWidth: number;\n\n    constructor(props: VerticalMenuProps) {\n        super(props);\n\n        this.menuWidth = props.menuWidth;\n\n        this.state = {\n            menuItems: props.menuItems,\n            currentKey: props.menuItems.length > 0 ? props.menuItems[0].key : ''\n        };\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Segment\n                    content={this.renderMenu()}\n                    styles={{ gridColumn: `span ${this.menuWidth}` }}\n                />\n                <Segment\n                    content={this.renderContent()}\n                    styles={{ gridColumn: `span ${pageWidth - this.menuWidth}` }}\n                />\n            </React.Fragment>\n        );\n    }\n\n    private renderMenu() {\n        return (\n            <Menu\n                defaultActiveIndex={0}\n                items={this.formatMenuItems(this.state.menuItems)}\n                vertical\n                pointing\n                styles={{ width: 'auto' }}\n                onActiveIndexChange={this.menuItemChanged.bind(this)}\n            />\n        );\n    }\n\n    private renderContent() {\n        let currentContent = this.state.menuItems.filter(mi => mi.key === this.state.currentKey);\n\n        if (currentContent.length !== 1) {\n            console.error(`A single item was not found for content with key: ${this.state.currentKey}`);\n        }\n\n        return (\n            currentContent[0].pageContent\n        );\n    }\n\n    private formatMenuItems(items: MenuItem[]): ShorthandCollection<MenuItemProps, MenuShorthandKinds> {\n        let result: ShorthandCollection<MenuItemProps, MenuShorthandKinds> = [];\n\n        for (let item of items) {\n            result.push({\n                key: item.key,\n                content: item.label,\n                icon: item.icon\n            });\n        }\n\n        return result;\n    }\n\n    private menuItemChanged(event: React.SyntheticEvent<HTMLElement>, menu: any) {\n        let currentIndex = menu.activeIndex;\n\n        if (menu.items && menu.items[currentIndex]) {\n            this.setState({\n                currentKey: menu.items[currentIndex].key\n            });\n        }\n    }\n}\n\n/**\n * Vertical menu props type\n */\ninterface VerticalMenuProps {\n    /**\n     * The width of the menu bar in css units (container divided by 12)\n     */\n    menuWidth: 1|2|3|4|5|6|7|8|9|10|11|12;\n\n    /**\n     * The menu items to choose between\n     */\n    menuItems: MenuItem[];\n}\n\n/**\n * Vertical menu state type\n */\ninterface VerticalMenuState {\n    /**\n     * THe key of the current component to be shown\n     */\n    currentKey: string;\n\n    /**\n     * The menu items to choose between\n     */\n    menuItems: MenuItem[];\n}"]},"metadata":{},"sourceType":"module"}