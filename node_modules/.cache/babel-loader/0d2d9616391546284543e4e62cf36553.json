{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { pxToRem } from '../../../../utils';\nimport SvgIcon from '../../../../components/SvgIcon/SvgIcon';\nimport getBorderFocusStyles from '../../getBorderFocusStyles';\nimport getIconFillOrOutlineStyles from '../../getIconFillOrOutlineStyles';\nimport Button from '../../../../components/Button/Button';\nvar attachmentStyles = {\n  root: function root(_ref) {\n    var _Object$assign, _hover;\n\n    var p = _ref.props,\n        v = _ref.variables,\n        siteVariables = _ref.theme.siteVariables;\n    var borderFocusStyles = getBorderFocusStyles({\n      variables: siteVariables,\n      borderRadius: v.borderRadius\n    });\n    return Object.assign({\n      position: 'relative',\n      display: 'inline-flex',\n      alignItems: 'center',\n      width: '100%',\n      maxWidth: pxToRem(440),\n      minHeight: pxToRem(48),\n      padding: v.padding,\n      marginBottom: pxToRem(2),\n      marginRight: pxToRem(2),\n      background: v.backgroundColor,\n      color: v.textColor,\n      boxShadow: v.boxShadow,\n      border: \"\".concat(siteVariables.borderWidth, \" solid \").concat(v.borderColor),\n      borderRadius: v.borderRadius\n    }, borderFocusStyles, {}, p.actionable && {\n      cursor: 'pointer',\n      ':focus-visible': Object.assign({}, borderFocusStyles[':focus-visible'], (_Object$assign = {\n        backgroundColor: v.focusBackgroundColor,\n        color: v.focusColor\n      }, _defineProperty(_Object$assign, \"& .\".concat(Button.className), {\n        color: v.siblingsFocusColor\n      }), _defineProperty(_Object$assign, \"& .\".concat(SvgIcon.className), {\n        color: v.siblingsFocusColor\n      }), _Object$assign)),\n      ':hover': (_hover = {\n        background: v.backgroundColorHover,\n        color: v.textColorHover\n      }, _defineProperty(_hover, \"& .\".concat(Button.className), {\n        color: v.siblingsHoverColor\n      }), _defineProperty(_hover, \"& .\".concat(SvgIcon.className), {\n        color: v.siblingsHoverColor\n      }), _hover)\n    });\n  },\n  content: function content() {\n    return {\n      flex: 1\n    };\n  },\n  header: function header(_ref2) {\n    var v = _ref2.variables;\n    return {\n      fontSize: v.headerFontSize,\n      fontWeight: v.headerFontWeight,\n      lineHeight: v.headerLineHeight\n    };\n  },\n  description: function description(_ref3) {\n    var v = _ref3.variables;\n    return {\n      display: 'block',\n      fontSize: v.descriptionFontSize,\n      fontWeight: v.descriptionFontWeight,\n      lineHeight: v.descriptionLineHeight\n    };\n  },\n  icon: function icon(_ref4) {\n    var _ref5;\n\n    var v = _ref4.variables;\n    return _ref5 = {\n      flex: '0 0 auto',\n      height: v.iconSize,\n      width: v.iconSize\n    }, _defineProperty(_ref5, \"& .\".concat(SvgIcon.className), {\n      height: '100%',\n      width: '100%',\n      '& svg': {\n        height: '100%',\n        width: '100%'\n      }\n    }), _defineProperty(_ref5, \"marginRight\", v.iconSpace), _ref5;\n  },\n  action: function action(_ref6) {\n    var p = _ref6.props,\n        v = _ref6.variables,\n        siteVariables = _ref6.theme.siteVariables;\n    var iconFilledStyles = getIconFillOrOutlineStyles({\n      outline: false\n    });\n    var borderFocusStyles = getBorderFocusStyles({\n      variables: siteVariables,\n      borderRadius: v.borderRadius\n    });\n    return Object.assign(_defineProperty({}, \"& .\".concat(SvgIcon.className), {\n      color: v.textColor // this breaks the color change on hover\n\n    }), getIconFillOrOutlineStyles({\n      outline: true\n    }), {\n      ':hover': Object.assign({}, iconFilledStyles, {\n        background: 'transparent'\n      }),\n      ':focus': borderFocusStyles[':focus'],\n      ':focus-visible': Object.assign({}, iconFilledStyles, {}, borderFocusStyles[':focus-visible'])\n    });\n  },\n  progress: function progress(_ref7) {\n    var p = _ref7.props,\n        v = _ref7.variables;\n    return {\n      transition: 'width 0.2s',\n      position: 'absolute',\n      display: 'block',\n      bottom: 0,\n      left: 0,\n      maxWidth: '100%',\n      height: pxToRem(v.progressHeight),\n      background: v.progressColor\n    };\n  }\n};\nexport default attachmentStyles;","map":{"version":3,"sources":["themes/teams/components/Attachment/attachmentStyles.ts"],"names":["attachmentStyles","root","props","p","variables","v","theme","siteVariables","borderFocusStyles","getBorderFocusStyles","borderRadius","position","display","alignItems","width","maxWidth","pxToRem","minHeight","padding","marginBottom","marginRight","background","color","boxShadow","border","cursor","backgroundColor","focusColor","Button","siblingsFocusColor","SvgIcon","textColorHover","siblingsHoverColor","content","flex","header","fontSize","fontWeight","lineHeight","headerLineHeight","description","descriptionLineHeight","icon","height","iconSize","action","iconFilledStyles","getIconFillOrOutlineStyles","outline","progress","transition","bottom","left","progressColor"],"mappings":"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","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\n\nimport { AttachmentStylesProps } from '../../../../components/Attachment/Attachment';\nimport { AttachmentVariables } from './attachmentVariables';\nimport { pxToRem } from '../../../../utils';\nimport SvgIcon from '../../../../components/SvgIcon/SvgIcon';\nimport getBorderFocusStyles from '../../getBorderFocusStyles';\nimport getIconFillOrOutlineStyles from '../../getIconFillOrOutlineStyles';\nimport Button from '../../../../components/Button/Button';\n\nconst attachmentStyles: ComponentSlotStylesPrepared<AttachmentStylesProps, AttachmentVariables> = {\n  root: ({ props: p, variables: v, theme: { siteVariables } }): ICSSInJSStyle => {\n    const borderFocusStyles = getBorderFocusStyles({\n      variables: siteVariables,\n      borderRadius: v.borderRadius,\n    });\n\n    return {\n      position: 'relative',\n      display: 'inline-flex',\n      alignItems: 'center',\n      width: '100%',\n      maxWidth: pxToRem(440),\n      minHeight: pxToRem(48),\n      padding: v.padding,\n      marginBottom: pxToRem(2),\n      marginRight: pxToRem(2),\n      background: v.backgroundColor,\n      color: v.textColor,\n      boxShadow: v.boxShadow,\n      border: `${siteVariables.borderWidth} solid ${v.borderColor}`,\n      borderRadius: v.borderRadius,\n\n      ...borderFocusStyles,\n\n      ...(p.actionable && {\n        cursor: 'pointer',\n\n        ':focus-visible': {\n          ...borderFocusStyles[':focus-visible'],\n          backgroundColor: v.focusBackgroundColor,\n          color: v.focusColor,\n\n          [`& .${Button.className}`]: {\n            color: v.siblingsFocusColor,\n          },\n\n          [`& .${SvgIcon.className}`]: {\n            color: v.siblingsFocusColor,\n          },\n        },\n\n        ':hover': {\n          background: v.backgroundColorHover,\n          color: v.textColorHover,\n\n          [`& .${Button.className}`]: {\n            color: v.siblingsHoverColor,\n          },\n\n          [`& .${SvgIcon.className}`]: {\n            color: v.siblingsHoverColor,\n          },\n        },\n      }),\n    };\n  },\n\n  content: (): ICSSInJSStyle => ({\n    flex: 1,\n  }),\n\n  header: ({ variables: v }): ICSSInJSStyle => ({\n    fontSize: v.headerFontSize,\n    fontWeight: v.headerFontWeight,\n    lineHeight: v.headerLineHeight,\n  }),\n\n  description: ({ variables: v }): ICSSInJSStyle => ({\n    display: 'block',\n    fontSize: v.descriptionFontSize,\n    fontWeight: v.descriptionFontWeight,\n    lineHeight: v.descriptionLineHeight,\n  }),\n\n  icon: ({ variables: v }): ICSSInJSStyle => ({\n    flex: '0 0 auto',\n    height: v.iconSize,\n    width: v.iconSize,\n    [`& .${SvgIcon.className}`]: {\n      height: '100%',\n      width: '100%',\n      '& svg': {\n        height: '100%',\n        width: '100%',\n      },\n    },\n    marginRight: v.iconSpace,\n  }),\n\n  action: ({ props: p, variables: v, theme: { siteVariables } }): ICSSInJSStyle => {\n    const iconFilledStyles = getIconFillOrOutlineStyles({ outline: false });\n    const borderFocusStyles = getBorderFocusStyles({\n      variables: siteVariables,\n      borderRadius: v.borderRadius,\n    });\n\n    return {\n      [`& .${SvgIcon.className}`]: {\n        color: v.textColor, // this breaks the color change on hover\n      },\n\n      ...getIconFillOrOutlineStyles({ outline: true }),\n\n      ':hover': {\n        ...iconFilledStyles,\n        background: 'transparent',\n      },\n\n      ':focus': borderFocusStyles[':focus'],\n      ':focus-visible': {\n        ...iconFilledStyles,\n        ...borderFocusStyles[':focus-visible'],\n      },\n    };\n  },\n\n  progress: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    transition: 'width 0.2s',\n    position: 'absolute',\n    display: 'block',\n    bottom: 0,\n    left: 0,\n    maxWidth: '100%',\n    height: pxToRem(v.progressHeight),\n    background: v.progressColor,\n  }),\n};\n\nexport default attachmentStyles;\n"]},"metadata":{},"sourceType":"module"}