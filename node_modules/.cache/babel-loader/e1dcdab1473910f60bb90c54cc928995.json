{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _invoke from \"lodash/invoke\";\nimport { buttonBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { childrenExist, createShorthandFactory, commonPropTypes, rtlTextContainer } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nimport { getElementType, useAccessibility, useStyles, useTelemetry, useUnhandledProps } from '@fluentui/react-bindings';\nimport Box from '../Box/Box'; // @ts-ignore\n\nimport { ThemeContext } from 'react-fela';\n\nvar CarouselPaddle = function CarouselPaddle(props) {\n  var context = React.useContext(ThemeContext);\n\n  var _useTelemetry = useTelemetry(CarouselPaddle.displayName, context.telemetry),\n      setStart = _useTelemetry.setStart,\n      setEnd = _useTelemetry.setEnd;\n\n  setStart();\n  var accessibility = props.accessibility,\n      as = props.as,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      design = props.design,\n      hidden = props.hidden,\n      next = props.next,\n      previous = props.previous,\n      styles = props.styles,\n      variables = props.variables;\n  var hasChildren = childrenExist(children);\n  var getA11Props = useAccessibility(accessibility, {\n    debugName: CarouselPaddle.displayName,\n    mapPropsToBehavior: function mapPropsToBehavior() {\n      return {\n        as: as,\n        disabled: disabled\n      };\n    },\n    actionHandlers: {\n      performClick: function performClick(event) {\n        event.preventDefault();\n        handleClick(event);\n      }\n    },\n    rtl: context.rtl\n  });\n\n  var _useStyles = useStyles(CarouselPaddle.displayName, {\n    className: CarouselPaddle.className,\n    mapPropsToStyles: function mapPropsToStyles() {\n      return {\n        disabled: disabled,\n        hidden: hidden,\n        next: next,\n        previous: previous\n      };\n    },\n    mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n      return {\n        className: className,\n        design: design,\n        styles: styles,\n        variables: variables\n      };\n    },\n    rtl: context.rtl\n  }),\n      classes = _useStyles.classes,\n      resolvedStyles = _useStyles.styles;\n\n  var unhandledProps = useUnhandledProps(CarouselPaddle.handledProps, props);\n  var ElementType = getElementType(props);\n\n  var handleClick = function handleClick(e) {\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    _invoke(props, 'onClick', e, props);\n  };\n\n  var result = React.createElement(ElementType, _extends({}, rtlTextContainer.getAttributes({\n    forElements: [children]\n  }), getA11Props('root', Object.assign({\n    onClick: handleClick,\n    disabled: disabled,\n    className: classes.root\n  }, unhandledProps))), hasChildren ? children : Box.create(content, {\n    defaultProps: function defaultProps() {\n      return getA11Props('content', {\n        as: 'span',\n        className: CarouselPaddle.slotClassNames.content,\n        styles: resolvedStyles.content\n      });\n    }\n  }));\n  setEnd();\n  return result;\n};\n\nCarouselPaddle.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n  content: {}\n};\nCarouselPaddle.displayName = 'CarouselPaddle';\nCarouselPaddle.className = 'ui-carousel__paddle';\nCarouselPaddle.propTypes = Object.assign({}, commonPropTypes.createCommon({\n  content: 'shorthand'\n}), {\n  disabled: PropTypes.bool,\n  hidden: PropTypes.bool,\n  onClick: PropTypes.func,\n  next: customPropTypes.every([customPropTypes.disallow(['previous']), PropTypes.bool]),\n  previous: customPropTypes.every([customPropTypes.disallow(['next']), PropTypes.bool])\n});\nCarouselPaddle.handledProps = Object.keys(CarouselPaddle.propTypes);\nCarouselPaddle.create = createShorthandFactory({\n  Component: CarouselPaddle,\n  mappedProp: 'content'\n});\nCarouselPaddle.slotClassNames = {\n  content: \"\".concat(CarouselPaddle.className, \"__content\")\n};\n/**\n * A CarouselPaddle allows users to customize the paddles inside the Carousel component.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\n\nexport default withSafeTypeForAs(CarouselPaddle);","map":{"version":3,"sources":["components/Carousel/CarouselPaddle.tsx"],"names":["CarouselPaddle","context","React","setStart","setEnd","useTelemetry","accessibility","as","children","className","content","disabled","design","hidden","next","previous","styles","variables","props","hasChildren","childrenExist","getA11Props","useAccessibility","debugName","mapPropsToBehavior","actionHandlers","performClick","event","handleClick","rtl","classes","resolvedStyles","useStyles","mapPropsToStyles","mapPropsToInlineStyles","unhandledProps","useUnhandledProps","ElementType","getElementType","e","result","forElements","onClick","root","defaultProps","PropTypes","customPropTypes","Object","createShorthandFactory","Component","mappedProp","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import { Accessibility, buttonBehavior, ButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ContentComponentProps,\n} from '../../utils';\n\nimport {\n  ComponentEventHandler,\n  WithAsProp,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n  ShorthandValue,\n} from '../../types';\nimport { getElementType, useAccessibility, useStyles, useTelemetry, useUnhandledProps } from '@fluentui/react-bindings';\nimport Box, { BoxProps } from '../Box/Box';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nexport interface CarouselPaddleProps\n  extends UIComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>>,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ButtonBehaviorProps>;\n\n  /** A paddle can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** Indicates whether the paddle should be hidden. */\n  hidden?: boolean;\n\n  /**\n   * Called after a user clicks the paddle.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<CarouselPaddleProps>;\n\n  /** A paddle can indicate that it slides to the next item. */\n  next?: boolean;\n\n  /** A paddle can indicate that it slides to the previous item. */\n  previous?: boolean;\n}\n\nexport type CarouselPaddleSlotClassNames = {\n  content: string;\n};\n\nexport type CarouselPaddleStylesProps = Pick<CarouselPaddleProps, 'disabled' | 'next' | 'previous' | 'hidden'>;\n\nconst CarouselPaddle: React.FC<WithAsProp<CarouselPaddleProps>> &\n  FluentComponentStaticProps<CarouselPaddleProps> & { slotClassNames: CarouselPaddleSlotClassNames } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(CarouselPaddle.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    as,\n    children,\n    className,\n    content,\n    disabled,\n    design,\n    hidden,\n    next,\n    previous,\n    styles,\n    variables,\n  } = props;\n\n  const hasChildren = childrenExist(children);\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: CarouselPaddle.displayName,\n    mapPropsToBehavior: () => ({\n      as,\n      disabled,\n    }),\n    actionHandlers: {\n      performClick: event => {\n        event.preventDefault();\n        handleClick(event);\n      },\n    },\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<CarouselPaddleStylesProps>(CarouselPaddle.displayName, {\n    className: CarouselPaddle.className,\n    mapPropsToStyles: () => ({\n      disabled,\n      hidden,\n      next,\n      previous,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const unhandledProps = useUnhandledProps(CarouselPaddle.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const result = (\n    <ElementType\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n      {...getA11Props('root', {\n        onClick: handleClick,\n        disabled,\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {hasChildren\n        ? children\n        : Box.create(content, {\n            defaultProps: () =>\n              getA11Props('content', {\n                as: 'span',\n                className: CarouselPaddle.slotClassNames.content,\n                styles: resolvedStyles.content,\n              }),\n          })}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return result;\n};\n\nCarouselPaddle.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n  content: {},\n};\n\nCarouselPaddle.displayName = 'CarouselPaddle';\nCarouselPaddle.className = 'ui-carousel__paddle';\n\nCarouselPaddle.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n  }),\n  disabled: PropTypes.bool,\n  hidden: PropTypes.bool,\n  onClick: PropTypes.func,\n  next: customPropTypes.every([customPropTypes.disallow(['previous']), PropTypes.bool]),\n  previous: customPropTypes.every([customPropTypes.disallow(['next']), PropTypes.bool]),\n};\n\nCarouselPaddle.handledProps = Object.keys(CarouselPaddle.propTypes) as any;\n\nCarouselPaddle.create = createShorthandFactory({ Component: CarouselPaddle, mappedProp: 'content' });\n\nCarouselPaddle.slotClassNames = {\n  content: `${CarouselPaddle.className}__content`,\n};\n\n/**\n * A CarouselPaddle allows users to customize the paddles inside the Carousel component.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\nexport default withSafeTypeForAs<typeof CarouselPaddle, CarouselPaddleProps, 'button'>(CarouselPaddle);\n"]},"metadata":{},"sourceType":"module"}