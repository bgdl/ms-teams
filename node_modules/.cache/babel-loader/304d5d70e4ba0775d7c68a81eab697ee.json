{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { carouselItemBehavior } from '@fluentui/accessibility';\nimport { UIComponent, commonPropTypes, applyAccessibilityKeyHandlers, childrenExist, createShorthandFactory } from '../../utils';\nimport { screenReaderContainerStyles } from '../../utils/accessibility/Styles/accessibilityStyles';\nimport { withSafeTypeForAs } from '../../types';\n\nvar CarouselItem = /*#__PURE__*/function (_UIComponent) {\n  _inherits(CarouselItem, _UIComponent);\n\n  function CarouselItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CarouselItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CarouselItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"actionHandlers\", {\n      arrowKeysNavigationStopPropagation: function arrowKeysNavigationStopPropagation(e) {\n        // let event propagate, when it was invoke on the element where arrow keys should rotate carousel\n        if (e.currentTarget !== e.target) {\n          e.stopPropagation();\n        }\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CarouselItem, [{\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var ElementType = _ref.ElementType,\n          classes = _ref.classes,\n          styles = _ref.styles,\n          accessibility = _ref.accessibility,\n          unhandledProps = _ref.unhandledProps;\n      var _this$props = this.props,\n          children = _this$props.children,\n          content = _this$props.content,\n          itemPositionText = _this$props.itemPositionText;\n      return React.createElement(ElementType, _extends({\n        className: classes.root\n      }, accessibility.attributes.root, unhandledProps, applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)), childrenExist(children) ? children : content, React.createElement(\"div\", {\n        className: CarouselItem.slotClassNames.itemPositionText,\n        style: screenReaderContainerStyles\n      }, itemPositionText));\n    }\n  }]);\n\n  return CarouselItem;\n}(UIComponent);\n\n_defineProperty(CarouselItem, \"create\", void 0);\n\n_defineProperty(CarouselItem, \"displayName\", 'CarouselItem');\n\n_defineProperty(CarouselItem, \"className\", 'ui-carousel__item');\n\n_defineProperty(CarouselItem, \"propTypes\", Object.assign({}, commonPropTypes.createCommon(), {\n  active: PropTypes.bool,\n  navigation: PropTypes.bool,\n  itemPositionText: PropTypes.string\n}));\n\n_defineProperty(CarouselItem, \"defaultProps\", {\n  accessibility: carouselItemBehavior\n});\n\n_defineProperty(CarouselItem, \"slotClassNames\", {\n  itemPositionText: \"\".concat(CarouselItem.className, \"__itemPositionText\")\n});\n\nCarouselItem.create = createShorthandFactory({\n  Component: CarouselItem,\n  mappedProp: 'content'\n});\n/**\n * A Carousel displays data organised as a gallery.\n *\n * @accessibility\n * Implements [ARIA Carousel](https://www.w3.org/WAI/tutorials/carousels/structure/) design pattern.\n */\n\nexport default withSafeTypeForAs(CarouselItem);","map":{"version":3,"sources":["components/Carousel/CarouselItem.tsx"],"names":["CarouselItem","UIComponent","commonPropTypes","active","PropTypes","bool","navigation","itemPositionText","string","accessibility","carouselItemBehavior","arrowKeysNavigationStopPropagation","e","ElementType","classes","styles","unhandledProps","children","content","root","applyAccessibilityKeyHandlers","childrenExist","screenReaderContainerStyles","createShorthandFactory","Component","mappedProp","withSafeTypeForAs"],"mappings":";;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAO,KAAP,SAAA,MAAA,YAAA;AACA,SAAA,oBAAA,QAAA,yBAAA;AAEA,SAAA,WAAA,EAAA,eAAA,EAAA,6BAAA,EAAA,aAAA,EAAA,sBAAA,QAAA,aAAA;AAWA,SAAA,2BAAA,QAAA,sDAAA;AACA,SAAA,iBAAA,QAAA,aAAA;;IAoBMA,Y;;;;;;;;;;;;;;;;qEAsBa;AACfW,MAAAA,kCAAkC,EAAE,SAAA,kCAAA,CAAA,CAAA,EAAK;AACvC;AACA,YAAIC,CAAC,CAADA,aAAAA,KAAoBA,CAAC,CAAzB,MAAA,EAAkC;AAChCA,UAAAA,CAAC,CAADA,eAAAA;AACD;AACF;AANc,K;;;;;;;0CASgE;AAAA,UAA/DC,WAA+D,GAAA,IAAA,CAA/DA,WAA+D;AAAA,UAAlDC,OAAkD,GAAA,IAAA,CAAlDA,OAAkD;AAAA,UAAzCC,MAAyC,GAAA,IAAA,CAAzCA,MAAyC;AAAA,UAAjCN,aAAiC,GAAA,IAAA,CAAjCA,aAAiC;AAAA,UAAlBO,cAAkB,GAAA,IAAA,CAAlBA,cAAkB;AAAA,UAAA,WAAA,GAC/B,KAD+B,KAAA;AAAA,UACvEC,QADuE,GAAA,WAAA,CAAA,QAAA;AAAA,UAC7DC,OAD6D,GAAA,WAAA,CAAA,OAAA;AAAA,UACpDX,gBADoD,GAAA,WAAA,CAAA,gBAAA;AAE/E,aACE,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,QAAA,CAAA;AACE,QAAA,SAAS,EAAEO,OAAO,CAACK;AADrB,OAAA,EAEMV,aAAa,CAAbA,UAAAA,CAFN,IAAA,EAAA,cAAA,EAIMW,6BAA6B,CAACX,aAAa,CAAbA,WAAAA,CAAD,IAAA,EAJnC,cAImC,CAJnC,CAAA,EAMGY,aAAa,CAAbA,QAAa,CAAbA,GAAAA,QAAAA,GANH,OAAA,EAOE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAErB,YAAY,CAAZA,cAAAA,CAAhB,gBAAA;AAA8D,QAAA,KAAK,EAAEsB;AAArE,OAAA,EARJ,gBAQI,CAPF,CADF;AAaD;;;;EA9CwBrB,W;;gBAArBD,Y;;gBAAAA,Y,iBAGiB,c;;gBAHjBA,Y,eAKe,mB;;gBALfA,Y,iCAQCE,eAAe,CAAfA,YAAAA,E;AACHC,EAAAA,MAAM,EAAEC,SAAS,CAACC,I;AAClBC,EAAAA,UAAU,EAAEF,SAAS,CAACC,I;AACtBE,EAAAA,gBAAgB,EAAEH,SAAS,CAACI;;;gBAX1BR,Y,kBAckB;AACpBS,EAAAA,aAAa,EAAEC;AADK,C;;gBAdlBV,Y,oBAkBgD;AAClDO,EAAAA,gBAAgB,EAAA,GAAA,MAAA,CAAKP,YAAY,CAAjB,SAAA,EAAA,oBAAA;AADkC,C;;AA+BtDA,YAAY,CAAZA,MAAAA,GAAsBuB,sBAAsB,CAAC;AAAEC,EAAAA,SAAS,EAAX,YAAA;AAA2BC,EAAAA,UAAU,EAAE;AAAvC,CAAD,CAA5CzB;AAEA;;;;;;;AAMA,eAAe0B,iBAAiB,CAAhC,YAAgC,CAAhC","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { carouselItemBehavior } from '@fluentui/accessibility';\n\nimport {\n  UIComponent,\n  commonPropTypes,\n  UIComponentProps,\n  ShorthandFactory,\n  applyAccessibilityKeyHandlers,\n  childrenExist,\n  createShorthandFactory,\n  ContentComponentProps,\n  ChildrenComponentProps,\n} from '../../utils';\nimport { screenReaderContainerStyles } from '../../utils/accessibility/Styles/accessibilityStyles';\nimport { WithAsProp, withSafeTypeForAs } from '../../types';\n\nexport interface CarouselItemSlotClassNames {\n  itemPositionText: string;\n}\n\nexport interface CarouselItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Whether or not the item is in view or not. */\n  active?: boolean;\n\n  /**\n   * Text to be added in the DOM that will specify item position. To be picked\n   * up by screen readers.\n   */\n  itemPositionText?: string;\n\n  /** Whether or not navigation exists in carousel. */\n  navigation?: boolean;\n}\n\nclass CarouselItem extends UIComponent<WithAsProp<CarouselItemProps>> {\n  static create: ShorthandFactory<CarouselItemProps>;\n\n  static displayName = 'CarouselItem';\n\n  static className = 'ui-carousel__item';\n\n  static propTypes = {\n    ...commonPropTypes.createCommon(),\n    active: PropTypes.bool,\n    navigation: PropTypes.bool,\n    itemPositionText: PropTypes.string,\n  };\n\n  static defaultProps = {\n    accessibility: carouselItemBehavior,\n  };\n\n  static slotClassNames: CarouselItemSlotClassNames = {\n    itemPositionText: `${CarouselItem.className}__itemPositionText`,\n  };\n\n  actionHandlers = {\n    arrowKeysNavigationStopPropagation: e => {\n      // let event propagate, when it was invoke on the element where arrow keys should rotate carousel\n      if (e.currentTarget !== e.target) {\n        e.stopPropagation();\n      }\n    },\n  };\n\n  renderComponent({ ElementType, classes, styles, accessibility, unhandledProps }) {\n    const { children, content, itemPositionText } = this.props;\n    return (\n      <ElementType\n        className={classes.root}\n        {...accessibility.attributes.root}\n        {...unhandledProps}\n        {...applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)}\n      >\n        {childrenExist(children) ? children : content}\n        <div className={CarouselItem.slotClassNames.itemPositionText} style={screenReaderContainerStyles}>\n          {itemPositionText}\n        </div>\n      </ElementType>\n    );\n  }\n}\n\nCarouselItem.create = createShorthandFactory({ Component: CarouselItem, mappedProp: 'content' });\n\n/**\n * A Carousel displays data organised as a gallery.\n *\n * @accessibility\n * Implements [ARIA Carousel](https://www.w3.org/WAI/tutorials/carousels/structure/) design pattern.\n */\nexport default withSafeTypeForAs<typeof CarouselItem, CarouselItemProps, 'div'>(CarouselItem);\n"]},"metadata":{},"sourceType":"module"}