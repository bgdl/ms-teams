{"ast":null,"code":"var _jsxFileName = \"/Users/bogdanluca/moqups/ms-teams/src/helpers/router-helper.tsx\";\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { routes as routeDefinitions } from '../config';\nimport { Login } from '../pages/auth';\nexport default class RouterHelper {\n  static AuthenticatedRoutes() {\n    return RouterHelper.RenderRoutes(routeDefinitions);\n  }\n\n  static UnauthenticatedRoutes() {\n    let copyOfRoutes = routeDefinitions;\n\n    for (let route of copyOfRoutes) {\n      if (route.authenticated) {\n        route.component = /*#__PURE__*/React.createElement(Login, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 27\n          }\n        });\n      }\n    }\n\n    return RouterHelper.RenderRoutes(copyOfRoutes);\n  }\n\n  static RenderRoutes(routes) {\n    console.log('RenderRoutes', routes);\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, routes.map(route => /*#__PURE__*/React.createElement(Route, {\n      path: route.route,\n      exact: route.route === '/',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, route.component))));\n  }\n\n}","map":{"version":3,"sources":["/Users/bogdanluca/moqups/ms-teams/src/helpers/router-helper.tsx"],"names":["React","BrowserRouter","Router","Switch","Route","routes","routeDefinitions","Login","RouterHelper","AuthenticatedRoutes","RenderRoutes","UnauthenticatedRoutes","copyOfRoutes","route","authenticated","component","console","log","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,MAAM,IAAIC,gBAAnB,QAA2C,WAA3C;AAEA,SAASC,KAAT,QAAsB,eAAtB;AAEA,eAAe,MAAMC,YAAN,CAAmB;AACC,SAAnBC,mBAAmB,GAAgB;AAC/C,WAAOD,YAAY,CAACE,YAAb,CAA0BJ,gBAA1B,CAAP;AACD;;AAEkC,SAArBK,qBAAqB,GAAgB;AACjD,QAAIC,YAAY,GAAGN,gBAAnB;;AAEA,SAAK,IAAIO,KAAT,IAAkBD,YAAlB,EAAgC;AAC9B,UAAIC,KAAK,CAACC,aAAV,EAAyB;AACvBD,QAAAA,KAAK,CAACE,SAAN,gBAAkB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB;AACD;AACF;;AAED,WAAOP,YAAY,CAACE,YAAb,CAA0BE,YAA1B,CAAP;AACD;;AAE0B,SAAZF,YAAY,CAACL,MAAD,EAAyC;AAClEW,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BZ,MAA5B;AACA,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,MAAM,CAACa,GAAP,CAAWL,KAAK,iBACf,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEA,KAAK,CAACA,KAAnB;AAA0B,MAAA,KAAK,EAAEA,KAAK,CAACA,KAAN,KAAgB,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KAAK,CAACE,SADT,CADD,CADH,CADF,CADF;AAWD;;AA9B+B","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { routes as routeDefinitions } from '../config';\nimport { RouteDefinition } from '../models/route-definition';\nimport { Login } from '../pages/auth';\n\nexport default class RouterHelper {\n  public static AuthenticatedRoutes(): JSX.Element {\n    return RouterHelper.RenderRoutes(routeDefinitions);\n  }\n\n  public static UnauthenticatedRoutes(): JSX.Element {\n    let copyOfRoutes = routeDefinitions;\n\n    for (let route of copyOfRoutes) {\n      if (route.authenticated) {\n        route.component = <Login />\n      }\n    }\n\n    return RouterHelper.RenderRoutes(copyOfRoutes);\n  }\n\n  private static RenderRoutes(routes: RouteDefinition[]): JSX.Element {\n    console.log('RenderRoutes', routes)\n    return (\n      <Router>\n        <Switch>\n          {routes.map(route =>\n            <Route path={route.route} exact={route.route === '/'}>\n              {route.component}\n            </Route>\n          )}\n        </Switch>\n      </Router>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}