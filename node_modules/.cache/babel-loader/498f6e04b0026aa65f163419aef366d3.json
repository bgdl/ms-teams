{"ast":null,"code":"import { useIsomorphicLayoutEffect } from '@fluentui/react-bindings';\nimport * as React from 'react';\nimport isBrowser from '../../utils/isBrowser';\nexport var PortalBoxContext = React.createContext(null);\n\nvar usePortalBox = function usePortalBox(options) {\n  var className = options.className,\n      rtl = options.rtl,\n      target = options.target;\n  var element = React.useMemo(function () {\n    return isBrowser() ? target.createElement('div') : null;\n  }, [target]);\n  useIsomorphicLayoutEffect(function () {\n    if (element) {\n      target.body.appendChild(element);\n    }\n\n    return function () {\n      if (element) {\n        target.body.removeChild(element);\n      }\n    };\n  }, []);\n  useIsomorphicLayoutEffect(function () {\n    if (element) {\n      element.setAttribute('class', className);\n\n      if (rtl) {\n        element.setAttribute('dir', 'rtl');\n      } else {\n        element.removeAttribute('dir');\n      }\n    }\n  }, [className, rtl]);\n  return element;\n};\n\nexport default usePortalBox;","map":{"version":3,"sources":["components/Provider/usePortalBox.ts"],"names":["PortalBoxContext","React","usePortalBox","className","rtl","target","options","element","isBrowser","useIsomorphicLayoutEffect"],"mappings":"AAAA,SAAA,yBAAA,QAAA,0BAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,OAAA,SAAA,MAAA,uBAAA;AAQA,OAAO,IAAMA,gBAAgB,GAAGC,KAAK,CAALA,aAAAA,CAAzB,IAAyBA,CAAzB;;AAEP,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAA,OAAA,EAAkD;AAAA,MAC7DC,SAD6D,GAClCG,OADkC,CAAA,SAAA;AAAA,MAClDF,GADkD,GAClCE,OADkC,CAAA,GAAA;AAAA,MAC7CD,MAD6C,GAClCC,OADkC,CAAA,MAAA;AAGrE,MAAMC,OAA8B,GAAG,KAAK,CAAL,OAAA,CAAc,YAAA;AAAA,WAAOC,SAAS,KAAKH,MAAM,CAANA,aAAAA,CAAL,KAAKA,CAAL,GAAhB,IAAA;AAAd,GAAA,EAAwE,CAA/G,MAA+G,CAAxE,CAAvC;AAIAI,EAAAA,yBAAyB,CAAC,YAAM;AAC9B,QAAA,OAAA,EAAa;AACXJ,MAAAA,MAAM,CAANA,IAAAA,CAAAA,WAAAA,CAAAA,OAAAA;AACD;;AAED,WAAO,YAAM;AACX,UAAA,OAAA,EAAa;AACXA,QAAAA,MAAM,CAANA,IAAAA,CAAAA,WAAAA,CAAAA,OAAAA;AACD;AAHH,KAAA;AALuB,GAAA,EAAzBI,EAAyB,CAAzBA;AAWAA,EAAAA,yBAAyB,CAAC,YAAM;AAC9B,QAAA,OAAA,EAAa;AACXF,MAAAA,OAAO,CAAPA,YAAAA,CAAAA,OAAAA,EAAAA,SAAAA;;AAEA,UAAA,GAAA,EAAS;AACPA,QAAAA,OAAO,CAAPA,YAAAA,CAAAA,KAAAA,EAAAA,KAAAA;AADF,OAAA,MAEO;AACLA,QAAAA,OAAO,CAAPA,eAAAA,CAAAA,KAAAA;AACD;AACF;AATsB,GAAA,EAUtB,CAAA,SAAA,EAVHE,GAUG,CAVsB,CAAzBA;AAYA,SAAA,OAAA;AA9BF,CAAA;;AAiCA,eAAA,YAAA","sourcesContent":["import { useIsomorphicLayoutEffect } from '@fluentui/react-bindings';\nimport * as React from 'react';\n\nimport isBrowser from '../../utils/isBrowser';\n\ntype UsePortalBoxOptions = {\n  className: string;\n  rtl: boolean;\n  target: Document;\n};\n\nexport const PortalBoxContext = React.createContext<HTMLDivElement>(null);\n\nconst usePortalBox = (options: UsePortalBoxOptions): HTMLDivElement => {\n  const { className, rtl, target } = options;\n\n  const element: HTMLDivElement | null = React.useMemo(() => (isBrowser() ? target.createElement('div') : null), [\n    target,\n  ]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (element) {\n      target.body.appendChild(element);\n    }\n\n    return () => {\n      if (element) {\n        target.body.removeChild(element);\n      }\n    };\n  }, []);\n  useIsomorphicLayoutEffect(() => {\n    if (element) {\n      element.setAttribute('class', className);\n\n      if (rtl) {\n        element.setAttribute('dir', 'rtl');\n      } else {\n        element.removeAttribute('dir');\n      }\n    }\n  }, [className, rtl]);\n\n  return element;\n};\n\nexport default usePortalBox;\n"]},"metadata":{},"sourceType":"module"}