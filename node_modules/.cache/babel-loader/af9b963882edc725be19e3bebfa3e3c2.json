{"ast":null,"code":"import _classCallCheck from\"/Users/bogdanluca/moqups/ms-teams/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bogdanluca/moqups/ms-teams/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/bogdanluca/moqups/ms-teams/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/bogdanluca/moqups/ms-teams/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bogdanluca/moqups/ms-teams/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{RouterHelper,TeamsThemeHelper,AuthHelper}from'./helpers';import{Provider}from'@fluentui/react-northstar';import*as msTeams from'@microsoft/teams-js';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={theme:TeamsThemeHelper.getTheme('default'),loggedIn:AuthHelper.IsUserLoggedIn()};msTeams.initialize();msTeams.registerOnThemeChangeHandler(_this.updateTheme.bind(_assertThisInitialized(_this)));msTeams.getContext(function(context){_this.updateTheme(context.theme);});return _this;}_createClass(App,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Provider,{theme:this.state.theme},this.state.loggedIn?/*#__PURE__*/React.createElement(RouterHelper.AuthenticatedRoutes,null):/*#__PURE__*/React.createElement(RouterHelper.UnauthenticatedRoutes,null));}},{key:\"updateTheme\",value:function updateTheme(themeString){this.setState({theme:TeamsThemeHelper.getTheme(themeString)});}}]);return App;}(React.Component);export{App as default};","map":{"version":3,"sources":["/Users/bogdanluca/moqups/ms-teams/src/App.tsx"],"names":["React","RouterHelper","TeamsThemeHelper","AuthHelper","Provider","msTeams","App","props","state","theme","getTheme","loggedIn","IsUserLoggedIn","initialize","registerOnThemeChangeHandler","updateTheme","bind","getContext","context","themeString","setState","Component"],"mappings":"wvBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,CAAuBC,gBAAvB,CAAyCC,UAAzC,KAA2D,WAA3D,CACA,OAASC,QAAT,KAAwC,2BAAxC,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,qBAAzB,C,GAEqBC,CAAAA,G,sGACnB,aAAYC,KAAZ,CAA8B,qCAC5B,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACXC,KAAK,CAAEP,gBAAgB,CAACQ,QAAjB,CAA0B,SAA1B,CADI,CAEXC,QAAQ,CAAER,UAAU,CAACS,cAAX,EAFC,CAAb,CAKAP,OAAO,CAACQ,UAAR,GACAR,OAAO,CAACS,4BAAR,CAAqC,MAAKC,WAAL,CAAiBC,IAAjB,+BAArC,EACAX,OAAO,CAACY,UAAR,CAAmB,SAAAC,OAAO,CAAI,CAAE,MAAKH,WAAL,CAAiBG,OAAO,CAACT,KAAzB,EAAiC,CAAjE,EAV4B,aAW7B,C,sCAED,iBAAS,CACP,mBACE,oBAAC,QAAD,EAAU,KAAK,CAAE,KAAKD,KAAL,CAAWC,KAA5B,EACI,KAAKD,KAAL,CAAWG,QAAX,cAAsB,oBAAC,YAAD,CAAc,mBAAd,MAAtB,cAA6D,oBAAC,YAAD,CAAc,qBAAd,MADjE,CADF,CAKD,C,2BAED,qBAAoBQ,WAApB,CAA2D,CACzD,KAAKC,QAAL,CAAc,CACZX,KAAK,CAAEP,gBAAgB,CAACQ,QAAjB,CAA0BS,WAA1B,CADK,CAAd,EAGD,C,iBA1B8BnB,KAAK,CAACqB,S,SAAlBf,G","sourcesContent":["import React from 'react';\nimport { RouterHelper, TeamsThemeHelper, AuthHelper } from './helpers';\nimport { Provider, ThemePrepared } from '@fluentui/react-northstar';\nimport * as msTeams from '@microsoft/teams-js';\n\nexport default class App extends React.Component<IAppProps, IAppState> {  \n  constructor(props: IAppProps) {\n    super(props);\n\n    this.state = {\n      theme: TeamsThemeHelper.getTheme('default'),\n      loggedIn: AuthHelper.IsUserLoggedIn()\n    };\n\n    msTeams.initialize();\n    msTeams.registerOnThemeChangeHandler(this.updateTheme.bind(this));\n    msTeams.getContext(context => { this.updateTheme(context.theme) });\n  }\n  \n  render() {\n    return (\n      <Provider theme={this.state.theme}>\n        { this.state.loggedIn ? <RouterHelper.AuthenticatedRoutes /> : <RouterHelper.UnauthenticatedRoutes />}\n      </Provider>\n    )\n  }\n\n  private updateTheme(themeString: string | undefined): void {\n    this.setState({\n      theme: TeamsThemeHelper.getTheme(themeString)\n    });\n  }\n}\n\ninterface IAppProps { }\n\ninterface IAppState {\n  theme: ThemePrepared;\n  loggedIn: boolean;\n}"]},"metadata":{},"sourceType":"module"}