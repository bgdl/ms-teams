{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _invoke from \"lodash/invoke\";\nimport { buttonBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { childrenExist, createShorthandFactory, commonPropTypes, rtlTextContainer } from '../../utils';\nimport Box from '../Box/Box';\nimport Loader from '../Loader/Loader';\nimport { withSafeTypeForAs } from '../../types';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonContent from './ButtonContent';\nimport { getElementType, useAccessibility, useStyles, useTelemetry, useUnhandledProps } from '@fluentui/react-bindings'; // @ts-ignore\n\nimport { ThemeContext } from 'react-fela';\n\nvar Button = function Button(props) {\n  var context = React.useContext(ThemeContext);\n\n  var _useTelemetry = useTelemetry(Button.displayName, context.telemetry),\n      setStart = _useTelemetry.setStart,\n      setEnd = _useTelemetry.setEnd;\n\n  setStart();\n  var accessibility = props.accessibility,\n      active = props.active,\n      as = props.as,\n      children = props.children,\n      content = props.content,\n      icon = props.icon,\n      loader = props.loader,\n      disabled = props.disabled,\n      iconPosition = props.iconPosition,\n      loading = props.loading,\n      text = props.text,\n      primary = props.primary,\n      inverted = props.inverted,\n      size = props.size,\n      iconOnly = props.iconOnly,\n      fluid = props.fluid,\n      circular = props.circular,\n      className = props.className,\n      styles = props.styles,\n      variables = props.variables,\n      design = props.design;\n  var hasChildren = childrenExist(children);\n  var getA11Props = useAccessibility(accessibility, {\n    debugName: Button.displayName,\n    mapPropsToBehavior: function mapPropsToBehavior() {\n      return {\n        as: as,\n        active: active,\n        disabled: disabled,\n        loading: loading\n      };\n    },\n    actionHandlers: {\n      performClick: function performClick(event) {\n        event.preventDefault();\n        handleClick(event);\n      }\n    },\n    rtl: context.rtl\n  });\n\n  var _useStyles = useStyles(Button.displayName, {\n    className: Button.className,\n    mapPropsToStyles: function mapPropsToStyles() {\n      return {\n        text: text,\n        primary: primary,\n        disabled: disabled,\n        circular: circular,\n        size: size,\n        loading: loading,\n        inverted: inverted,\n        iconOnly: iconOnly,\n        iconPosition: iconPosition,\n        fluid: fluid,\n        hasContent: !!content\n      };\n    },\n    mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n      return {\n        className: className,\n        design: design,\n        styles: styles,\n        variables: variables\n      };\n    },\n    rtl: context.rtl\n  }),\n      classes = _useStyles.classes,\n      resolvedStyles = _useStyles.styles;\n\n  var unhandledProps = useUnhandledProps(Button.handledProps, props);\n  var ElementType = getElementType(props);\n\n  var renderIcon = function renderIcon() {\n    return Box.create(icon, {\n      defaultProps: function defaultProps() {\n        return getA11Props('icon', {\n          styles: resolvedStyles.icon\n        });\n      }\n    });\n  };\n\n  var renderLoader = function renderLoader() {\n    return Loader.create(loader || {}, {\n      defaultProps: function defaultProps() {\n        return getA11Props('loader', {\n          role: undefined,\n          styles: resolvedStyles.loader\n        });\n      }\n    });\n  };\n\n  var handleClick = function handleClick(e) {\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    _invoke(props, 'onClick', e, props);\n  };\n\n  var handleFocus = function handleFocus(e) {\n    _invoke(props, 'onFocus', e, props);\n  };\n\n  var result = React.createElement(ElementType, _extends({}, rtlTextContainer.getAttributes({\n    forElements: [children]\n  }), getA11Props('root', Object.assign({\n    onClick: handleClick,\n    disabled: disabled,\n    className: classes.root,\n    onFocus: handleFocus\n  }, unhandledProps))), hasChildren ? children : React.createElement(React.Fragment, null, loading && renderLoader(), iconPosition !== 'after' && renderIcon(), ButtonContent.create(content, {\n    defaultProps: function defaultProps() {\n      return getA11Props('content', {\n        as: 'span',\n        size: size,\n        styles: resolvedStyles.content\n      });\n    }\n  }), iconPosition === 'after' && renderIcon()));\n  setEnd();\n  return result;\n};\n\nButton.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n  size: 'medium'\n};\nButton.displayName = 'Button';\nButton.className = 'ui-button';\nButton.propTypes = Object.assign({}, commonPropTypes.createCommon({\n  content: 'shorthand'\n}), {\n  circular: PropTypes.bool,\n  disabled: PropTypes.bool,\n  fluid: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  iconOnly: PropTypes.bool,\n  iconPosition: PropTypes.oneOf(['before', 'after']),\n  inverted: PropTypes.bool,\n  loader: customPropTypes.itemShorthandWithoutJSX,\n  loading: PropTypes.bool,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  text: PropTypes.bool,\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  size: customPropTypes.size\n});\nButton.handledProps = Object.keys(Button.propTypes);\nButton.Group = ButtonGroup;\nButton.Content = ButtonContent;\nButton.create = createShorthandFactory({\n  Component: Button,\n  mappedProp: 'content'\n});\n/**\n * A Button enables users to take an action, such as submitting a form, opening a dialog, etc.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\n\nexport default withSafeTypeForAs(Button);","map":{"version":3,"sources":["components/Button/Button.tsx"],"names":["Button","context","React","setStart","setEnd","useTelemetry","accessibility","active","as","children","content","icon","loader","disabled","iconPosition","loading","text","primary","inverted","size","iconOnly","fluid","circular","className","styles","variables","design","props","hasChildren","childrenExist","getA11Props","useAccessibility","debugName","mapPropsToBehavior","actionHandlers","performClick","event","handleClick","rtl","classes","resolvedStyles","useStyles","mapPropsToStyles","hasContent","mapPropsToInlineStyles","unhandledProps","useUnhandledProps","ElementType","getElementType","renderIcon","defaultProps","renderLoader","role","e","handleFocus","result","forElements","onClick","onFocus","PropTypes","customPropTypes","secondary","Object","createShorthandFactory","Component","mappedProp","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import { Accessibility, buttonBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  SizeValue,\n} from '../../utils';\nimport Box, { BoxProps } from '../Box/Box';\nimport Loader, { LoaderProps } from '../Loader/Loader';\nimport {\n  ComponentEventHandler,\n  WithAsProp,\n  ShorthandValue,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonContent, { ButtonContentProps } from './ButtonContent';\nimport { getElementType, useAccessibility, useStyles, useTelemetry, useUnhandledProps } from '@fluentui/react-bindings';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nexport interface ButtonProps\n  extends UIComponentProps,\n    ContentComponentProps<ShorthandValue<ButtonContentProps>>,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility;\n\n  /** A button can appear circular. */\n  circular?: boolean;\n\n  /** A button can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A button can fill the width of its container. */\n  fluid?: boolean;\n\n  /** A button can have an icon. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** A button can contain only an icon. */\n  iconOnly?: boolean;\n\n  /** An icon button can format its Icon to appear before or after its content */\n  iconPosition?: 'before' | 'after';\n\n  /** A button that inherits its background and has a subtle appearance */\n  inverted?: boolean;\n\n  /** Shorthand to customize a button's loader. */\n  loader?: ShorthandValue<LoaderProps>;\n\n  /** A button can show a loading indicator. */\n  loading?: boolean;\n\n  /**\n   * Called after a user clicks the button.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<ButtonProps>;\n\n  /**\n   * Called after a user focuses the button.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ButtonProps>;\n\n  /** A button can emphasize that it represents the primary action. */\n  primary?: boolean;\n\n  /** A button can be formatted to show only text in order to indicate a less-pronounced action. */\n  text?: boolean;\n\n  /** A button can emphasize that it represents an alternative action. */\n  secondary?: boolean;\n\n  /** A button can be sized. */\n  size?: SizeValue;\n}\n\nexport type ButtonStylesProps = Pick<\n  ButtonProps,\n  'text' | 'primary' | 'disabled' | 'circular' | 'size' | 'loading' | 'inverted' | 'iconOnly' | 'fluid' | 'iconPosition'\n> & {\n  hasContent?: boolean;\n};\n\nconst Button: React.FC<WithAsProp<ButtonProps>> &\n  FluentComponentStaticProps<ButtonProps> & { Group: typeof ButtonGroup; Content: typeof ButtonContent } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Button.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    // @ts-ignore\n    active,\n    as,\n    children,\n    content,\n    icon,\n    loader,\n    disabled,\n    iconPosition,\n    loading,\n    text,\n    primary,\n    inverted,\n    size,\n    iconOnly,\n    fluid,\n    circular,\n    className,\n    styles,\n    variables,\n    design,\n  } = props;\n\n  const hasChildren = childrenExist(children);\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Button.displayName,\n    mapPropsToBehavior: () => ({\n      as,\n      active,\n      disabled,\n      loading,\n    }),\n    actionHandlers: {\n      performClick: event => {\n        event.preventDefault();\n        handleClick(event);\n      },\n    },\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ButtonStylesProps>(Button.displayName, {\n    className: Button.className,\n    mapPropsToStyles: () => ({\n      text,\n      primary,\n      disabled,\n      circular,\n      size,\n      loading,\n      inverted,\n      iconOnly,\n      iconPosition,\n      fluid,\n      hasContent: !!content,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const unhandledProps = useUnhandledProps(Button.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const renderIcon = () => {\n    return Box.create(icon, {\n      defaultProps: () =>\n        getA11Props('icon', {\n          styles: resolvedStyles.icon,\n        }),\n    });\n  };\n\n  const renderLoader = () => {\n    return Loader.create(loader || {}, {\n      defaultProps: () =>\n        getA11Props('loader', {\n          role: undefined,\n          styles: resolvedStyles.loader,\n        }),\n    });\n  };\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const result = (\n    <ElementType\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n      {...getA11Props('root', {\n        onClick: handleClick,\n        disabled,\n        className: classes.root,\n        onFocus: handleFocus,\n        ...unhandledProps,\n      })}\n    >\n      {hasChildren ? (\n        children\n      ) : (\n        <>\n          {loading && renderLoader()}\n          {iconPosition !== 'after' && renderIcon()}\n          {ButtonContent.create(content, {\n            defaultProps: () => getA11Props('content', { as: 'span', size, styles: resolvedStyles.content }),\n          })}\n          {iconPosition === 'after' && renderIcon()}\n        </>\n      )}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return result;\n};\n\nButton.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n  size: 'medium',\n};\n\nButton.displayName = 'Button';\nButton.className = 'ui-button';\n\nButton.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n  }),\n  circular: PropTypes.bool,\n  disabled: PropTypes.bool,\n  fluid: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  iconOnly: PropTypes.bool,\n  iconPosition: PropTypes.oneOf(['before', 'after']),\n  inverted: PropTypes.bool,\n  loader: customPropTypes.itemShorthandWithoutJSX,\n  loading: PropTypes.bool,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  text: PropTypes.bool,\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  size: customPropTypes.size,\n};\n\nButton.handledProps = Object.keys(Button.propTypes) as any;\n\nButton.Group = ButtonGroup;\nButton.Content = ButtonContent;\n\nButton.create = createShorthandFactory({ Component: Button, mappedProp: 'content' });\n\n/**\n * A Button enables users to take an action, such as submitting a form, opening a dialog, etc.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\nexport default withSafeTypeForAs<typeof Button, ButtonProps, 'button'>(Button);\n"]},"metadata":{},"sourceType":"module"}