{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Checkbox from '../../../../components/Checkbox/Checkbox';\nimport getBorderFocusStyles from '../../getBorderFocusStyles';\nimport checkboxIndicatorUrl from './checkboxIndicatorUrl';\nimport { pxToRem } from '../../../../utils';\n\nvar commonToggleBeforeStyles = function commonToggleBeforeStyles(v) {\n  return {\n    content: \"' '\",\n    display: 'block',\n    borderRadius: '50%',\n    width: v.toggleIndicatorSize,\n    height: v.toggleIndicatorSize,\n    transition: 'margin .3s ease'\n  };\n};\n\nvar checkboxStyles = {\n  root: function root(_ref) {\n    var p = _ref.props,\n        v = _ref.variables,\n        t = _ref.theme;\n    return Object.assign({\n      position: 'relative',\n      display: 'inline-grid',\n      // IE11: Gap is done via virtual column as in autoprefixer\n      gridTemplateColumns: p.labelPosition === 'start' ? \"1fr \".concat(v.gap, \" auto\") : \"auto \".concat(v.gap, \" 1fr\"),\n      cursor: 'pointer',\n      outline: 0,\n      color: v.textColor,\n      padding: v.rootPadding,\n      verticalAlign: 'middle',\n      alignItems: 'start'\n    }, getBorderFocusStyles({\n      variables: t.siteVariables,\n      borderRadius: '3px'\n    }), {\n      ':hover': _defineProperty({\n        color: v.textColorHover\n      }, \"& .\".concat(Checkbox.slotClassNames.indicator), Object.assign({}, !p.toggle && Object.assign({}, p.checked && {\n        borderColor: v.checkedBackgroundHover,\n        backgroundImage: checkboxIndicatorUrl(v.checkedIndicatorColor, v.checkedBackgroundHover)\n      }, {}, !p.checked && {\n        borderColor: v.borderColorHover\n      }), {}, p.toggle && !p.disabled && Object.assign({\n        borderColor: v.borderColorHover,\n        ':before': Object.assign({}, commonToggleBeforeStyles(v), {\n          borderColor: v.borderColorHover,\n          borderStyle: v.borderStyle,\n          borderWidth: v.borderWidth,\n          margin: v.togglePadding,\n          background: 'transparent'\n        })\n      }, p.checked && {\n        borderColor: v.checkedBorderColor,\n        background: v.checkedBackgroundHover,\n        ':before': Object.assign({}, commonToggleBeforeStyles(v), {\n          margin: v.toggleCheckedPadding,\n          background: v.checkedIndicatorColor\n        })\n      })))\n    }, p.checked && {\n      color: v.checkedTextColor\n    }, {}, p.disabled && {\n      cursor: 'default',\n      pointerEvents: 'none',\n      color: v.disabledColor\n    });\n  },\n  checkbox: function checkbox(_ref2) {\n    var p = _ref2.props,\n        v = _ref2.variables;\n    return Object.assign({\n      gridColumn: p.labelPosition === 'start' ? 3 : 1,\n      '-ms-grid-row-align': 'center',\n      boxShadow: 'unset',\n      width: pxToRem(16),\n      height: pxToRem(16),\n      borderColor: v.borderColor,\n      borderStyle: v.borderStyle,\n      borderRadius: v.borderRadius,\n      borderWidth: v.borderWidth,\n      color: v.indicatorColor,\n      margin: v.margin,\n      padding: v.padding,\n      userSelect: 'none',\n      backgroundImage: checkboxIndicatorUrl(v.indicatorColor, v.background),\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat'\n    }, p.checked && {\n      borderColor: v.checkedBorderColor,\n      backgroundImage: checkboxIndicatorUrl(v.checkedIndicatorColor, v.checkedBackground)\n    }, {}, p.disabled && {\n      background: v.disabledBackground,\n      borderColor: v.disabledBorderColor\n    }, {}, p.disabled && p.checked && {\n      color: v.disabledCheckedIndicatorColor,\n      borderColor: v.disabledBackgroundChecked,\n      backgroundImage: checkboxIndicatorUrl(v.disabledCheckedIndicatorColor, v.disabledBackgroundChecked)\n    });\n  },\n  toggle: function toggle(_ref3) {\n    var p = _ref3.props,\n        v = _ref3.variables;\n    return Object.assign({\n      '-ms-grid-row-align': 'center',\n      gridColumn: p.labelPosition === 'start' ? 3 : 1,\n      boxShadow: 'unset',\n      boxSizing: 'border-box',\n      background: v.background,\n      borderColor: v.borderColor,\n      borderStyle: v.borderStyle,\n      borderRadius: v.toggleBorderRadius,\n      borderWidth: v.borderWidth,\n      margin: v.toggleMargin,\n      userSelect: 'none',\n      width: v.toggleWidth,\n      height: v.toggleHeight,\n      ':before': Object.assign({}, commonToggleBeforeStyles(v), {\n        borderColor: p.disabled ? v.disabledToggleIndicatorColor : v.borderColor,\n        borderStyle: v.borderStyle,\n        borderWidth: v.borderWidth,\n        margin: v.togglePadding\n      })\n    }, p.checked && {\n      borderColor: v.checkedBorderColor,\n      background: v.checkedBackground,\n      ':before': Object.assign({}, commonToggleBeforeStyles(v), {\n        margin: v.toggleCheckedPadding,\n        background: v.checkedIndicatorColor\n      })\n    }, {}, p.disabled && Object.assign({\n      background: v.disabledBackground,\n      borderColor: v.disabledBorderColor\n    }, p.checked && {\n      background: v.disabledBackgroundChecked,\n      borderColor: 'transparent',\n      ':before': Object.assign({}, commonToggleBeforeStyles(v), {\n        margin: v.toggleCheckedPadding,\n        background: v.disabledCheckedIndicatorColor\n      })\n    }));\n  },\n  label: function label(_ref4) {\n    var p = _ref4.props;\n    return {\n      display: 'block',\n      // IE11: should be forced to be block, as inline-block is not supported\n      gridColumn: p.labelPosition === 'start' ? 1 : 3\n    };\n  }\n};\nexport default checkboxStyles;","map":{"version":3,"sources":["themes/teams/components/Checkbox/checkboxStyles.ts"],"names":["commonToggleBeforeStyles","content","display","borderRadius","width","v","height","transition","checkboxStyles","root","p","t","position","gridTemplateColumns","cursor","outline","color","padding","verticalAlign","alignItems","getBorderFocusStyles","variables","textColorHover","Checkbox","borderColor","backgroundImage","checkboxIndicatorUrl","borderColorHover","borderStyle","borderWidth","margin","background","checkedIndicatorColor","checkedTextColor","pointerEvents","disabledColor","checkbox","gridColumn","boxShadow","pxToRem","userSelect","backgroundPosition","backgroundRepeat","disabledBorderColor","toggle","boxSizing","togglePadding","disabledCheckedIndicatorColor","label"],"mappings":"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","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport Checkbox, { CheckboxStylesProps } from '../../../../components/Checkbox/Checkbox';\nimport { CheckboxVariables } from './checkboxVariables';\nimport getBorderFocusStyles from '../../getBorderFocusStyles';\nimport checkboxIndicatorUrl from './checkboxIndicatorUrl';\nimport { pxToRem } from '../../../../utils';\n\nconst commonToggleBeforeStyles = v => ({\n  content: \"' '\",\n  display: 'block',\n  borderRadius: '50%',\n  width: v.toggleIndicatorSize,\n  height: v.toggleIndicatorSize,\n  transition: 'margin .3s ease',\n});\n\nconst checkboxStyles: ComponentSlotStylesPrepared<CheckboxStylesProps, CheckboxVariables> = {\n  root: ({ props: p, variables: v, theme: t }): ICSSInJSStyle => ({\n    position: 'relative',\n\n    display: 'inline-grid',\n    // IE11: Gap is done via virtual column as in autoprefixer\n    gridTemplateColumns: p.labelPosition === 'start' ? `1fr ${v.gap} auto` : `auto ${v.gap} 1fr`,\n    cursor: 'pointer',\n    outline: 0,\n\n    color: v.textColor,\n    padding: v.rootPadding,\n    verticalAlign: 'middle',\n    alignItems: 'start',\n\n    ...getBorderFocusStyles({ variables: t.siteVariables, borderRadius: '3px' }),\n\n    ':hover': {\n      color: v.textColorHover,\n\n      [`& .${Checkbox.slotClassNames.indicator}`]: {\n        ...(!p.toggle && {\n          ...(p.checked && {\n            borderColor: v.checkedBackgroundHover,\n            backgroundImage: checkboxIndicatorUrl(v.checkedIndicatorColor, v.checkedBackgroundHover),\n          }),\n          ...(!p.checked && {\n            borderColor: v.borderColorHover,\n          }),\n        }),\n        ...(p.toggle &&\n          !p.disabled && {\n            borderColor: v.borderColorHover,\n\n            ':before': {\n              ...commonToggleBeforeStyles(v),\n              borderColor: v.borderColorHover,\n              borderStyle: v.borderStyle,\n              borderWidth: v.borderWidth,\n              margin: v.togglePadding,\n              background: 'transparent',\n            },\n\n            ...(p.checked && {\n              borderColor: v.checkedBorderColor,\n              background: v.checkedBackgroundHover,\n              ':before': {\n                ...commonToggleBeforeStyles(v),\n                margin: v.toggleCheckedPadding,\n                background: v.checkedIndicatorColor,\n              },\n            }),\n          }),\n      },\n    },\n\n    ...(p.checked && {\n      color: v.checkedTextColor,\n    }),\n\n    ...(p.disabled && {\n      cursor: 'default',\n      pointerEvents: 'none',\n      color: v.disabledColor,\n    }),\n  }),\n\n  checkbox: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    gridColumn: p.labelPosition === 'start' ? 3 : 1,\n    '-ms-grid-row-align': 'center',\n    boxShadow: 'unset',\n    width: pxToRem(16),\n    height: pxToRem(16),\n\n    borderColor: v.borderColor,\n    borderStyle: v.borderStyle,\n    borderRadius: v.borderRadius,\n    borderWidth: v.borderWidth,\n    color: v.indicatorColor,\n    margin: v.margin,\n    padding: v.padding,\n    userSelect: 'none',\n\n    backgroundImage: checkboxIndicatorUrl(v.indicatorColor, v.background),\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n\n    ...(p.checked && {\n      borderColor: v.checkedBorderColor,\n      backgroundImage: checkboxIndicatorUrl(v.checkedIndicatorColor, v.checkedBackground),\n    }),\n\n    ...(p.disabled && {\n      background: v.disabledBackground,\n      borderColor: v.disabledBorderColor,\n    }),\n\n    ...(p.disabled &&\n      p.checked && {\n        color: v.disabledCheckedIndicatorColor,\n        borderColor: v.disabledBackgroundChecked,\n        backgroundImage: checkboxIndicatorUrl(v.disabledCheckedIndicatorColor, v.disabledBackgroundChecked),\n      }),\n  }),\n\n  toggle: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    '-ms-grid-row-align': 'center',\n    gridColumn: p.labelPosition === 'start' ? 3 : 1,\n    boxShadow: 'unset',\n    boxSizing: 'border-box',\n\n    background: v.background,\n    borderColor: v.borderColor,\n    borderStyle: v.borderStyle,\n    borderRadius: v.toggleBorderRadius,\n    borderWidth: v.borderWidth,\n    margin: v.toggleMargin,\n    userSelect: 'none',\n    width: v.toggleWidth,\n    height: v.toggleHeight,\n\n    ':before': {\n      ...commonToggleBeforeStyles(v),\n      borderColor: p.disabled ? v.disabledToggleIndicatorColor : v.borderColor,\n      borderStyle: v.borderStyle,\n      borderWidth: v.borderWidth,\n      margin: v.togglePadding,\n    },\n\n    ...(p.checked && {\n      borderColor: v.checkedBorderColor,\n      background: v.checkedBackground,\n      ':before': {\n        ...commonToggleBeforeStyles(v),\n        margin: v.toggleCheckedPadding,\n        background: v.checkedIndicatorColor,\n      },\n    }),\n\n    ...(p.disabled && {\n      background: v.disabledBackground,\n      borderColor: v.disabledBorderColor,\n      ...(p.checked && {\n        background: v.disabledBackgroundChecked,\n        borderColor: 'transparent',\n        ':before': {\n          ...commonToggleBeforeStyles(v),\n          margin: v.toggleCheckedPadding,\n          background: v.disabledCheckedIndicatorColor,\n        },\n      }),\n    }),\n  }),\n\n  label: ({ props: p }): ICSSInJSStyle => ({\n    display: 'block', // IE11: should be forced to be block, as inline-block is not supported\n    gridColumn: p.labelPosition === 'start' ? 1 : 3,\n  }),\n};\n\nexport default checkboxStyles;\n"]},"metadata":{},"sourceType":"module"}