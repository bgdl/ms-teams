{"ast":null,"code":"import _invoke from \"lodash/invoke\";\nimport { listItemBehavior } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport { useContextSelectors } from '@fluentui/react-context-selector';\nimport cx from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react'; // @ts-ignore\n\nimport { ThemeContext } from 'react-fela';\nimport Box from '../Box/Box';\nimport { withSafeTypeForAs } from '../../types';\nimport { createShorthandFactory, commonPropTypes } from '../../utils';\nimport { ListContext } from './listContext';\n\nvar ListItem = function ListItem(props) {\n  var context = React.useContext(ThemeContext);\n\n  var _useTelemetry = useTelemetry(ListItem.displayName, context.telemetry),\n      setStart = _useTelemetry.setStart,\n      setEnd = _useTelemetry.setEnd;\n\n  setStart();\n  var accessibility = props.accessibility,\n      className = props.className,\n      content = props.content,\n      contentMedia = props.contentMedia,\n      design = props.design,\n      endMedia = props.endMedia,\n      header = props.header,\n      important = props.important,\n      headerMedia = props.headerMedia,\n      media = props.media,\n      styles = props.styles;\n  var parentProps = useContextSelectors(ListContext, {\n    debug: function debug(v) {\n      return v.debug;\n    },\n    navigable: function navigable(v) {\n      return v.navigable;\n    },\n    selectable: function selectable(v) {\n      return v.selectable;\n    },\n    truncateContent: function truncateContent(v) {\n      return v.truncateContent;\n    },\n    truncateHeader: function truncateHeader(v) {\n      return v.truncateHeader;\n    },\n    variables: function variables(v) {\n      return v.variables;\n    },\n    onItemClick: function onItemClick(v) {\n      return v.onItemClick;\n    },\n    selected: function selected(v) {\n      return v.selectedIndex === props.index;\n    }\n  });\n  var _props$debug = props.debug,\n      debug = _props$debug === void 0 ? parentProps.debug : _props$debug,\n      _props$navigable = props.navigable,\n      navigable = _props$navigable === void 0 ? parentProps.navigable : _props$navigable,\n      _props$selectable = props.selectable,\n      selectable = _props$selectable === void 0 ? parentProps.selectable : _props$selectable,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? parentProps.selected : _props$selected,\n      _props$truncateConten = props.truncateContent,\n      truncateContent = _props$truncateConten === void 0 ? parentProps.truncateContent : _props$truncateConten,\n      _props$truncateHeader = props.truncateHeader,\n      truncateHeader = _props$truncateHeader === void 0 ? parentProps.truncateHeader : _props$truncateHeader,\n      _props$variables = props.variables,\n      variables = _props$variables === void 0 ? parentProps.variables : _props$variables;\n  var getA11Props = useAccessibility(accessibility, {\n    debugName: ListItem.displayName,\n    actionHandlers: {\n      performClick: function performClick(e) {\n        e.preventDefault();\n        handleClick(e);\n      }\n    },\n    mapPropsToBehavior: function mapPropsToBehavior() {\n      return {\n        navigable: navigable,\n        selectable: selectable,\n        selected: selected\n      };\n    },\n    rtl: context.rtl\n  });\n\n  var _useStyles = useStyles(ListItem.displayName, {\n    className: ListItem.className,\n    mapPropsToStyles: function mapPropsToStyles() {\n      return {\n        debug: debug,\n        navigable: navigable,\n        important: important,\n        selectable: selectable,\n        selected: selected,\n        truncateContent: truncateContent,\n        truncateHeader: truncateHeader,\n        hasContent: !!content,\n        hasContentMedia: !!contentMedia,\n        hasHeader: !!header,\n        hasHeaderMedia: !!headerMedia\n      };\n    },\n    mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n      return {\n        className: className,\n        design: design,\n        styles: styles,\n        variables: variables\n      };\n    },\n    rtl: context.rtl\n  }),\n      classes = _useStyles.classes,\n      resolvedStyles = _useStyles.styles;\n\n  var ElementType = getElementType(props);\n  var unhandledProps = useUnhandledProps(ListItem.handledProps, props);\n\n  var handleClick = function handleClick(e) {\n    _invoke(props, 'onClick', e, props);\n\n    parentProps.onItemClick(e, props.index);\n  };\n\n  var contentElement = Box.create(content, {\n    defaultProps: function defaultProps() {\n      return {\n        className: ListItem.slotClassNames.content,\n        styles: resolvedStyles.content\n      };\n    }\n  });\n  var contentMediaElement = Box.create(contentMedia, {\n    defaultProps: function defaultProps() {\n      return {\n        className: ListItem.slotClassNames.contentMedia,\n        styles: resolvedStyles.contentMedia\n      };\n    }\n  });\n  var headerElement = Box.create(header, {\n    defaultProps: function defaultProps() {\n      return {\n        className: ListItem.slotClassNames.header,\n        styles: resolvedStyles.header\n      };\n    }\n  });\n  var headerMediaElement = Box.create(headerMedia, {\n    defaultProps: function defaultProps() {\n      return {\n        className: ListItem.slotClassNames.headerMedia,\n        styles: resolvedStyles.headerMedia\n      };\n    }\n  });\n  var endMediaElement = Box.create(endMedia, {\n    defaultProps: function defaultProps() {\n      return {\n        className: ListItem.slotClassNames.endMedia,\n        styles: resolvedStyles.endMedia\n      };\n    }\n  });\n  var mediaElement = Box.create(media, {\n    defaultProps: function defaultProps() {\n      return {\n        className: ListItem.slotClassNames.media,\n        styles: resolvedStyles.media\n      };\n    }\n  });\n  var element = React.createElement(ElementType, getA11Props('root', Object.assign({\n    className: classes.root,\n    onClick: handleClick\n  }, unhandledProps)), mediaElement, React.createElement(\"div\", {\n    className: cx(ListItem.slotClassNames.main, classes.main)\n  }, (headerElement || headerMediaElement) && React.createElement(\"div\", {\n    className: cx(ListItem.slotClassNames.headerWrapper, classes.headerWrapper)\n  }, headerElement, headerMediaElement), (contentElement || contentMediaElement) && React.createElement(\"div\", {\n    className: cx(ListItem.slotClassNames.contentWrapper, classes.contentWrapper)\n  }, contentElement, contentMediaElement)), endMediaElement);\n  setEnd();\n  return element;\n};\n\nListItem.className = 'ui-list__item';\nListItem.displayName = 'ListItem';\nListItem.defaultProps = {\n  as: 'li',\n  accessibility: listItemBehavior\n};\nListItem.propTypes = Object.assign({}, commonPropTypes.createCommon({\n  content: false\n}), {\n  contentMedia: PropTypes.any,\n  content: PropTypes.any,\n  debug: PropTypes.bool,\n  header: PropTypes.any,\n  endMedia: PropTypes.any,\n  headerMedia: PropTypes.any,\n  important: PropTypes.bool,\n  media: PropTypes.any,\n  selectable: PropTypes.bool,\n  navigable: PropTypes.bool,\n  index: PropTypes.number,\n  selected: PropTypes.bool,\n  truncateContent: PropTypes.bool,\n  truncateHeader: PropTypes.bool,\n  onClick: PropTypes.func\n});\nListItem.handledProps = Object.keys(ListItem.propTypes);\nListItem.slotClassNames = {\n  header: \"\".concat(ListItem.className, \"__header\"),\n  headerMedia: \"\".concat(ListItem.className, \"__headerMedia\"),\n  headerWrapper: \"\".concat(ListItem.className, \"__headerWrapper\"),\n  main: \"\".concat(ListItem.className, \"__main\"),\n  content: \"\".concat(ListItem.className, \"__content\"),\n  contentMedia: \"\".concat(ListItem.className, \"__contentMedia\"),\n  contentWrapper: \"\".concat(ListItem.className, \"__contentWrapper\"),\n  media: \"\".concat(ListItem.className, \"__media\"),\n  endMedia: \"\".concat(ListItem.className, \"__endMedia\")\n};\nListItem.create = createShorthandFactory({\n  Component: ListItem,\n  mappedProp: 'content'\n});\n/**\n * A ListItem contains a single piece of content within a List.\n */\n\nexport default withSafeTypeForAs(ListItem);","map":{"version":3,"sources":["components/List/ListItem.tsx"],"names":["ListItem","context","React","setStart","setEnd","useTelemetry","accessibility","className","content","contentMedia","design","endMedia","header","important","headerMedia","media","styles","props","parentProps","useContextSelectors","debug","v","navigable","selectable","truncateContent","truncateHeader","variables","onItemClick","selected","getA11Props","useAccessibility","debugName","actionHandlers","performClick","e","handleClick","mapPropsToBehavior","rtl","classes","resolvedStyles","useStyles","mapPropsToStyles","hasContent","hasContentMedia","hasHeader","hasHeaderMedia","mapPropsToInlineStyles","ElementType","getElementType","unhandledProps","useUnhandledProps","contentElement","defaultProps","contentMediaElement","headerElement","headerMediaElement","endMediaElement","mediaElement","element","onClick","cx","as","listItemBehavior","PropTypes","index","func","Object","headerWrapper","main","contentWrapper","createShorthandFactory","Component","mappedProp","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import { Accessibility, listItemBehavior, ListItemBehaviorProps } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport { useContextSelectors } from '@fluentui/react-context-selector';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport Box, { BoxProps } from '../Box/Box';\nimport {\n  ShorthandValue,\n  WithAsProp,\n  ComponentEventHandler,\n  withSafeTypeForAs,\n  ProviderContextPrepared,\n  FluentComponentStaticProps,\n} from '../../types';\nimport { createShorthandFactory, UIComponentProps, commonPropTypes, ContentComponentProps } from '../../utils';\nimport { ListContext, ListContextSubscribedValue } from './listContext';\n\nexport interface ListItemSlotClassNames {\n  header: string;\n  headerMedia: string;\n  headerWrapper: string;\n  content: string;\n  contentMedia: string;\n  contentWrapper: string;\n  main: string;\n  media: string;\n  endMedia: string;\n}\n\nexport interface ListItemProps extends UIComponentProps, ContentComponentProps<ShorthandValue<BoxProps>> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ListItemBehaviorProps>;\n  contentMedia?: ShorthandValue<BoxProps>;\n  /** Toggle debug mode. */\n  debug?: boolean;\n  header?: ShorthandValue<BoxProps>;\n  endMedia?: ShorthandValue<BoxProps>;\n  headerMedia?: ShorthandValue<BoxProps>;\n\n  /** A list item can appear more important and draw the user's attention. */\n  important?: boolean;\n  media?: ShorthandValue<BoxProps>;\n\n  index?: number;\n  /** A list item can indicate that it can be selected. */\n  selectable?: boolean;\n\n  /** A list item can indicate that it can be navigable. */\n  navigable?: boolean;\n\n  /** Indicates if the current list item is selected. */\n  selected?: boolean;\n  truncateContent?: boolean;\n  truncateHeader?: boolean;\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<ListItemProps>;\n}\n\nexport type ListItemStylesProps = Pick<\n  ListItemProps,\n  'debug' | 'important' | 'navigable' | 'selectable' | 'selected' | 'truncateContent' | 'truncateHeader'\n> & {\n  hasContent?: boolean;\n  hasContentMedia?: boolean;\n  hasHeader?: boolean;\n  hasHeaderMedia?: boolean;\n};\n\nconst ListItem: React.FC<WithAsProp<ListItemProps> & { index: number }> &\n  FluentComponentStaticProps<ListItemProps> & {\n    slotClassNames: ListItemSlotClassNames;\n  } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(ListItem.displayName, context.telemetry);\n\n  setStart();\n\n  const {\n    accessibility,\n    className,\n    content,\n    contentMedia,\n    design,\n    endMedia,\n    header,\n    important,\n    headerMedia,\n    media,\n    styles,\n  } = props;\n\n  const parentProps: ListContextSubscribedValue = useContextSelectors(ListContext, {\n    debug: v => v.debug,\n    navigable: v => v.navigable,\n    selectable: v => v.selectable,\n    truncateContent: v => v.truncateContent,\n    truncateHeader: v => v.truncateHeader,\n    variables: v => v.variables,\n    onItemClick: v => v.onItemClick,\n    selected: v => v.selectedIndex === props.index,\n  });\n  const {\n    debug = parentProps.debug,\n    navigable = parentProps.navigable,\n    selectable = parentProps.selectable,\n    selected = parentProps.selected,\n    truncateContent = parentProps.truncateContent,\n    truncateHeader = parentProps.truncateHeader,\n    variables = parentProps.variables,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: ListItem.displayName,\n    actionHandlers: {\n      performClick: e => {\n        e.preventDefault();\n        handleClick(e);\n      },\n    },\n    mapPropsToBehavior: () => ({\n      navigable,\n      selectable,\n      selected,\n    }),\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ListItemStylesProps>(ListItem.displayName, {\n    className: ListItem.className,\n    mapPropsToStyles: () => ({\n      debug,\n      navigable,\n      important,\n      selectable,\n      selected,\n      truncateContent,\n      truncateHeader,\n\n      hasContent: !!content,\n      hasContentMedia: !!contentMedia,\n      hasHeader: !!header,\n      hasHeaderMedia: !!headerMedia,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ListItem.handledProps, props);\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    _.invoke(props, 'onClick', e, props);\n    parentProps.onItemClick(e, props.index);\n  };\n\n  const contentElement = Box.create(content, {\n    defaultProps: () => ({\n      className: ListItem.slotClassNames.content,\n      styles: resolvedStyles.content,\n    }),\n  });\n  const contentMediaElement = Box.create(contentMedia, {\n    defaultProps: () => ({\n      className: ListItem.slotClassNames.contentMedia,\n      styles: resolvedStyles.contentMedia,\n    }),\n  });\n  const headerElement = Box.create(header, {\n    defaultProps: () => ({\n      className: ListItem.slotClassNames.header,\n      styles: resolvedStyles.header,\n    }),\n  });\n  const headerMediaElement = Box.create(headerMedia, {\n    defaultProps: () => ({\n      className: ListItem.slotClassNames.headerMedia,\n      styles: resolvedStyles.headerMedia,\n    }),\n  });\n  const endMediaElement = Box.create(endMedia, {\n    defaultProps: () => ({\n      className: ListItem.slotClassNames.endMedia,\n      styles: resolvedStyles.endMedia,\n    }),\n  });\n  const mediaElement = Box.create(media, {\n    defaultProps: () => ({\n      className: ListItem.slotClassNames.media,\n      styles: resolvedStyles.media,\n    }),\n  });\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        onClick: handleClick,\n        ...unhandledProps,\n      })}\n    >\n      {mediaElement}\n\n      <div className={cx(ListItem.slotClassNames.main, classes.main)}>\n        {(headerElement || headerMediaElement) && (\n          <div className={cx(ListItem.slotClassNames.headerWrapper, classes.headerWrapper)}>\n            {headerElement}\n            {headerMediaElement}\n          </div>\n        )}\n        {(contentElement || contentMediaElement) && (\n          <div className={cx(ListItem.slotClassNames.contentWrapper, classes.contentWrapper)}>\n            {contentElement}\n            {contentMediaElement}\n          </div>\n        )}\n      </div>\n\n      {endMediaElement}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nListItem.className = 'ui-list__item';\nListItem.displayName = 'ListItem';\n\nListItem.defaultProps = {\n  as: 'li',\n  accessibility: listItemBehavior,\n};\n\nListItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  contentMedia: PropTypes.any,\n  content: PropTypes.any,\n\n  debug: PropTypes.bool,\n\n  header: PropTypes.any,\n  endMedia: PropTypes.any,\n  headerMedia: PropTypes.any,\n\n  important: PropTypes.bool,\n  media: PropTypes.any,\n\n  selectable: PropTypes.bool,\n  navigable: PropTypes.bool,\n  index: PropTypes.number,\n  selected: PropTypes.bool,\n\n  truncateContent: PropTypes.bool,\n  truncateHeader: PropTypes.bool,\n\n  onClick: PropTypes.func,\n};\nListItem.handledProps = Object.keys(ListItem.propTypes) as any;\n\nListItem.slotClassNames = {\n  header: `${ListItem.className}__header`,\n  headerMedia: `${ListItem.className}__headerMedia`,\n  headerWrapper: `${ListItem.className}__headerWrapper`,\n  main: `${ListItem.className}__main`,\n  content: `${ListItem.className}__content`,\n  contentMedia: `${ListItem.className}__contentMedia`,\n  contentWrapper: `${ListItem.className}__contentWrapper`,\n  media: `${ListItem.className}__media`,\n  endMedia: `${ListItem.className}__endMedia`,\n};\n\nListItem.create = createShorthandFactory({ Component: ListItem, mappedProp: 'content' });\n\n/**\n * A ListItem contains a single piece of content within a List.\n */\nexport default withSafeTypeForAs<typeof ListItem, ListItemProps, 'li'>(ListItem);\n"]},"metadata":{},"sourceType":"module"}