{"ast":null,"code":"import { getContainerStyles, getPointerStyles } from '../../getPointerStyles';\nimport pointerSvg from '../../pointerSvgUrl';\nvar tooltipContentStyles = {\n  root: function root(_ref) {\n    var p = _ref.props,\n        v = _ref.variables;\n    return Object.assign({\n      display: 'block',\n      position: 'absolute',\n      maxWidth: v.maxWidth,\n      zIndex: v.zIndex\n    }, p.pointing && getContainerStyles({\n      placement: p.basePlacement,\n      margin: v.pointerMargin\n    }), {}, !p.open && {\n      opacity: 0\n    });\n  },\n  pointer: function pointer(_ref2) {\n    var p = _ref2.props,\n        v = _ref2.variables,\n        rtl = _ref2.rtl;\n    return Object.assign({\n      display: 'block',\n      position: 'absolute',\n      width: v.pointerWidth,\n      height: v.pointerHeight\n    }, getPointerStyles({\n      backgroundColor: v.backgroundColor,\n      borderSize: v.borderSize,\n      borderColor: 'transparent',\n      gap: v.pointerGap,\n      height: v.pointerHeight,\n      width: v.pointerWidth,\n      placement: p.basePlacement,\n      rtl: rtl,\n      svg: pointerSvg(v.backgroundColor)\n    }));\n  },\n  content: function content(_ref3) {\n    var v = _ref3.variables;\n    return {\n      display: 'block',\n      padding: v.padding,\n      textAlign: 'left',\n      color: v.color,\n      background: v.backgroundColor,\n      borderRadius: v.borderRadius,\n      boxShadow: v.boxShadow\n    };\n  }\n};\nexport default tooltipContentStyles;","map":{"version":3,"sources":["themes/teams/components/Tooltip/tooltipContentStyles.ts"],"names":["tooltipContentStyles","root","p","v","display","position","maxWidth","zIndex","getContainerStyles","placement","margin","pointerMargin","opacity","pointer","rtl","width","height","pointerHeight","getPointerStyles","backgroundColor","borderSize","borderColor","gap","svg","pointerSvg","content","padding","textAlign","color","background","borderRadius","boxShadow"],"mappings":"AAGA,SAAA,kBAAA,EAAA,gBAAA,QAAA,wBAAA;AACA,OAAA,UAAA,MAAA,qBAAA;AAEA,IAAMA,oBAAqG,GAAG;AAC5GC,EAAAA,IAAI,EAAE,SAAA,IAAA,CAAA,IAAA,EAAA;AAAA,QAAUC,CAAV,GAAA,IAAA,CAAA,KAAA;AAAA,QAAwBC,CAAxB,GAAA,IAAA,CAAA,SAAA;AAAA,WAAA,MAAA,CAAA,MAAA,CAAA;AACJC,MAAAA,OAAO,EADH,OAAA;AAEJC,MAAAA,QAAQ,EAFJ,UAAA;AAIJC,MAAAA,QAAQ,EAAEH,CAAC,CAJP,QAAA;AAKJI,MAAAA,MAAM,EAAEJ,CAAC,CAACI;AALN,KAAA,EAOAL,CAAC,CAADA,QAAAA,IACFM,kBAAkB,CAAC;AACjBC,MAAAA,SAAS,EAAEP,CAAC,CADK,aAAA;AAEjBQ,MAAAA,MAAM,EAAEP,CAAC,CAACQ;AAFO,KAAD,CARhB,EAAA,EAAA,EAaA,CAACT,CAAC,CAAF,IAAA,IAAW;AACbU,MAAAA,OAAO,EAAE;AADI,KAbX,CAAA;AADsG,GAAA;AAkB5GC,EAAAA,OAAO,EAAE,SAAA,OAAA,CAAA,KAAA,EAAA;AAAA,QAAUX,CAAV,GAAA,KAAA,CAAA,KAAA;AAAA,QAAwBC,CAAxB,GAAA,KAAA,CAAA,SAAA;AAAA,QAA2BW,GAA3B,GAAA,KAAA,CAAA,GAAA;AAAA,WAAA,MAAA,CAAA,MAAA,CAAA;AACPV,MAAAA,OAAO,EADA,OAAA;AAEPC,MAAAA,QAAQ,EAFD,UAAA;AAGPU,MAAAA,KAAK,EAAEZ,CAAC,CAHD,YAAA;AAIPa,MAAAA,MAAM,EAAEb,CAAC,CAACc;AAJH,KAAA,EAMJC,gBAAgB,CAAC;AAClBC,MAAAA,eAAe,EAAEhB,CAAC,CADA,eAAA;AAElBiB,MAAAA,UAAU,EAAEjB,CAAC,CAFK,UAAA;AAGlBkB,MAAAA,WAAW,EAHO,aAAA;AAIlBC,MAAAA,GAAG,EAAEnB,CAAC,CAJY,UAAA;AAKlBa,MAAAA,MAAM,EAAEb,CAAC,CALS,aAAA;AAMlBY,MAAAA,KAAK,EAAEZ,CAAC,CANU,YAAA;AAQlBM,MAAAA,SAAS,EAAEP,CAAC,CARM,aAAA;AASlBY,MAAAA,GAAG,EATe,GAAA;AAUlBS,MAAAA,GAAG,EAAEC,UAAU,CAACrB,CAAC,CAAF,eAAA;AAVG,KAAD,CANZ,CAAA;AAlBmG,GAAA;AAqC5GsB,EAAAA,OAAO,EAAE,SAAA,OAAA,CAAA,KAAA,EAAA;AAAA,QAActB,CAAd,GAAA,KAAA,CAAA,SAAA;AAAA,WAAsC;AAC7CC,MAAAA,OAAO,EADsC,OAAA;AAE7CsB,MAAAA,OAAO,EAAEvB,CAAC,CAFmC,OAAA;AAG7CwB,MAAAA,SAAS,EAHoC,MAAA;AAK7CC,MAAAA,KAAK,EAAEzB,CAAC,CALqC,KAAA;AAM7C0B,MAAAA,UAAU,EAAE1B,CAAC,CANgC,eAAA;AAO7C2B,MAAAA,YAAY,EAAE3B,CAAC,CAP8B,YAAA;AAQ7C4B,MAAAA,SAAS,EAAE5B,CAAC,CAAC4B;AARgC,KAAtC;AAAA;AArCmG,CAA9G;AAiDA,eAAA,oBAAA","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { TooltipContentStylesProps } from '../../../../components/Tooltip/TooltipContent';\nimport { TooltipContentVariables } from './tooltipContentVariables';\nimport { getContainerStyles, getPointerStyles } from '../../getPointerStyles';\nimport pointerSvg from '../../pointerSvgUrl';\n\nconst tooltipContentStyles: ComponentSlotStylesPrepared<TooltipContentStylesProps, TooltipContentVariables> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    display: 'block',\n    position: 'absolute',\n\n    maxWidth: v.maxWidth,\n    zIndex: v.zIndex,\n\n    ...(p.pointing &&\n      getContainerStyles({\n        placement: p.basePlacement,\n        margin: v.pointerMargin,\n      })),\n\n    ...(!p.open && {\n      opacity: 0,\n    }),\n  }),\n  pointer: ({ props: p, variables: v, rtl }): ICSSInJSStyle => ({\n    display: 'block',\n    position: 'absolute',\n    width: v.pointerWidth,\n    height: v.pointerHeight,\n\n    ...getPointerStyles({\n      backgroundColor: v.backgroundColor,\n      borderSize: v.borderSize,\n      borderColor: 'transparent',\n      gap: v.pointerGap,\n      height: v.pointerHeight,\n      width: v.pointerWidth,\n\n      placement: p.basePlacement,\n      rtl,\n      svg: pointerSvg(v.backgroundColor),\n    }),\n  }),\n  content: ({ variables: v }): ICSSInJSStyle => ({\n    display: 'block',\n    padding: v.padding,\n    textAlign: 'left',\n\n    color: v.color,\n    background: v.backgroundColor,\n    borderRadius: v.borderRadius,\n    boxShadow: v.boxShadow,\n  }),\n};\n\nexport default tooltipContentStyles;\n"]},"metadata":{},"sourceType":"module"}