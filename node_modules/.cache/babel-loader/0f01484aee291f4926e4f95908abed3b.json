{"ast":null,"code":"export default {\n  root: function root(_ref) {\n    var v = _ref.variables;\n    return {\n      background: v.rootBackground,\n      border: v.border,\n      borderRadius: v.rootBorderRadius,\n      outline: 'none',\n      padding: v.rootPadding,\n      position: 'relative',\n      width: v.rootWidth,\n      display: 'grid',\n      gridTemplateColumns: '1fr auto',\n      boxShadow: v.boxShadow,\n      color: v.foregroundColor\n    };\n  },\n  footer: function footer() {\n    return {\n      gridColumn: '1 / -1',\n      gridRow: 3\n    };\n  },\n  actions: function actions() {\n    return {\n      display: 'inline-block'\n    };\n  },\n  content: function content(_ref2) {\n    var v = _ref2.variables;\n    return {\n      margin: v.contentMargin,\n      gridColumn: '1 / span 2',\n      gridRow: 2,\n      justifySelf: 'left',\n      width: '100%'\n    };\n  },\n  header: function header(_ref3) {\n    var v = _ref3.variables;\n    return {\n      margin: v.headerMargin,\n      gridRow: 1,\n      gridColumn: 1,\n      justifySelf: 'left',\n      fontSize: v.headerFontSize,\n      fontWeight: v.headerFontWeight\n    };\n  },\n  headerAction: function headerAction(_ref4) {\n    var v = _ref4.variables;\n    return {\n      gridRow: 1,\n      gridColumn: 2,\n      color: v.foregroundColor,\n      margin: v.headerActionMargin\n    };\n  },\n  overlay: function overlay(_ref5) {\n    var p = _ref5.props,\n        v = _ref5.variables;\n    return Object.assign({\n      alignItems: 'center',\n      background: 'transparent',\n      bottom: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      left: 0,\n      overflow: 'auto',\n      position: 'fixed',\n      right: 0,\n      top: 0,\n      zIndex: v.overlayZIndex\n    }, p.backdrop && {\n      background: v.overlayBackground\n    });\n  }\n};","map":{"version":3,"sources":["themes/teams/components/Dialog/dialogStyles.ts"],"names":["root","v","background","border","borderRadius","outline","padding","position","width","display","gridTemplateColumns","boxShadow","color","foregroundColor","footer","gridColumn","gridRow","actions","content","margin","justifySelf","header","fontSize","fontWeight","headerFontWeight","headerAction","headerActionMargin","overlay","p","alignItems","bottom","flexDirection","justifyContent","left","overflow","right","top","zIndex","overlayZIndex","overlayBackground"],"mappings":"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","sourcesContent":["import { DialogProps } from '../../../../components/Dialog/Dialog';\nimport { ComponentStyleFunctionParam, ICSSInJSStyle } from '@fluentui/styles';\nimport { DialogVariables } from './dialogVariables';\n\ntype DialogStyleParams = ComponentStyleFunctionParam<DialogProps, DialogVariables>;\n\nexport default {\n  root: ({ variables: v }: DialogStyleParams): ICSSInJSStyle => ({\n    background: v.rootBackground,\n    border: v.border,\n    borderRadius: v.rootBorderRadius,\n    outline: 'none',\n    padding: v.rootPadding,\n    position: 'relative',\n    width: v.rootWidth,\n    display: 'grid',\n    gridTemplateColumns: '1fr auto',\n    boxShadow: v.boxShadow,\n    color: v.foregroundColor,\n  }),\n\n  footer: (): ICSSInJSStyle => ({\n    gridColumn: '1 / -1',\n    gridRow: 3,\n  }),\n\n  actions: (): ICSSInJSStyle => ({\n    display: 'inline-block',\n  }),\n\n  content: ({ variables: v }: DialogStyleParams): ICSSInJSStyle => ({\n    margin: v.contentMargin,\n    gridColumn: '1 / span 2',\n    gridRow: 2,\n    justifySelf: 'left',\n    width: '100%',\n  }),\n\n  header: ({ variables: v }: DialogStyleParams): ICSSInJSStyle => ({\n    margin: v.headerMargin,\n    gridRow: 1,\n    gridColumn: 1,\n    justifySelf: 'left',\n    fontSize: v.headerFontSize,\n    fontWeight: v.headerFontWeight,\n  }),\n\n  headerAction: ({ variables: v }: DialogStyleParams) => ({\n    gridRow: 1,\n    gridColumn: 2,\n    color: v.foregroundColor,\n    margin: v.headerActionMargin,\n  }),\n\n  overlay: ({ props: p, variables: v }: DialogStyleParams): ICSSInJSStyle => ({\n    alignItems: 'center',\n    background: 'transparent',\n    bottom: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    left: 0,\n    overflow: 'auto',\n    position: 'fixed',\n    right: 0,\n    top: 0,\n    zIndex: v.overlayZIndex,\n\n    ...(p.backdrop && { background: v.overlayBackground }),\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}