{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _debounce from \"lodash/debounce\";\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { carouselBehavior } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Ref } from '@fluentui/react-component-ref';\nimport Animation from '../Animation/Animation';\nimport { createShorthandFactory, commonPropTypes, applyAccessibilityKeyHandlers, childrenExist, getOrGenerateIdFromShorthand, AutoControlledComponent, isFromKeyboard } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nimport CarouselItem from './CarouselItem';\nimport Text from '../Text/Text';\nimport CarouselNavigation from './CarouselNavigation';\nimport CarouselNavigationItem from './CarouselNavigationItem';\nimport CarouselPaddle from './CarouselPaddle';\n\nvar Carousel = /*#__PURE__*/function (_AutoControlledCompon) {\n  _inherits(Carousel, _AutoControlledCompon);\n\n  function Carousel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Carousel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Carousel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"actionHandlers\", {\n      showNextSlideByKeyboardNavigation: function showNextSlideByKeyboardNavigation(e) {\n        e.preventDefault();\n\n        _this.showNextSlide(e, true);\n      },\n      showPreviousSlideByKeyboardNavigation: function showPreviousSlideByKeyboardNavigation(e) {\n        e.preventDefault();\n\n        _this.showPreviousSlide(e, true);\n      },\n      showNextSlideByPaddlePress: function showNextSlideByPaddlePress(e) {\n        e.preventDefault();\n\n        _this.showNextSlide(e, false);\n\n        _this.handleNextPaddleFocus();\n      },\n      showPreviousSlideByPaddlePress: function showPreviousSlideByPaddlePress(e) {\n        e.preventDefault();\n\n        _this.showPreviousSlide(e, false);\n\n        _this.handlePreviousPaddleFocus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemRefs\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"paddleNextRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"paddlePreviousRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"focusItemAtIndex\", _debounce(function (index) {\n      _this.itemRefs[index].current.focus();\n    }, 400));\n\n    _defineProperty(_assertThisInitialized(_this), \"overrideItemProps\", function (predefinedProps) {\n      return {\n        onFocus: function onFocus(e, itemProps) {\n          _this.setState({\n            shouldFocusContainer: e.currentTarget === e.target,\n            isFromKeyboard: isFromKeyboard()\n          });\n\n          _invoke(predefinedProps, 'onFocus', e, itemProps);\n        },\n        onBlur: function onBlur(e, itemProps) {\n          _this.setState({\n            shouldFocusContainer: e.currentTarget.contains(e.relatedTarget),\n            isFromKeyboard: false\n          });\n\n          _invoke(predefinedProps, 'onBlur', e, itemProps);\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderContent\", function (accessibility, classes, unhandledProps) {\n      var _this$props = _this.props,\n          getItemPositionText = _this$props.getItemPositionText,\n          items = _this$props.items,\n          circular = _this$props.circular;\n      var _this$state = _this.state,\n          activeIndex = _this$state.activeIndex,\n          itemIds = _this$state.itemIds,\n          prevActiveIndex = _this$state.prevActiveIndex;\n      _this.itemRefs = [];\n      return React.createElement(\"div\", _extends({\n        className: classes.itemsContainerWrapper\n      }, accessibility.attributes.itemsContainerWrapper), React.createElement(\"div\", _extends({\n        className: cx(Carousel.slotClassNames.itemsContainer, classes.itemsContainer)\n      }, accessibility.attributes.itemsContainer, applyAccessibilityKeyHandlers(accessibility.keyHandlers.itemsContainer, unhandledProps)), items && items.map(function (item, index) {\n        var itemRef = React.createRef();\n\n        _this.itemRefs.push(itemRef);\n\n        var active = activeIndex === index;\n        var slideToNext = prevActiveIndex < activeIndex;\n        var initialMounting = prevActiveIndex === -1;\n\n        if (circular && prevActiveIndex === items.length - 1 && activeIndex === 0) {\n          slideToNext = true;\n        } else if (circular && prevActiveIndex === 0 && activeIndex === items.length - 1) {\n          slideToNext = false;\n        }\n\n        return React.createElement(Animation, {\n          key: item['key'] || index,\n          mountOnEnter: true,\n          unmountOnExit: true,\n          visible: active,\n          name: initialMounting ? '' : active ? slideToNext ? 'carousel-slide-to-next-enter' : 'carousel-slide-to-previous-enter' : slideToNext ? 'carousel-slide-to-next-exit' : 'carousel-slide-to-previous-exit'\n        }, React.createElement(Ref, {\n          innerRef: itemRef\n        }, CarouselItem.create(item, {\n          defaultProps: function defaultProps() {\n            return Object.assign({\n              active: active,\n              id: itemIds[index],\n              navigation: !!_this.props.navigation\n            }, getItemPositionText && {\n              itemPositionText: getItemPositionText(index, items.length)\n            });\n          },\n          overrideProps: _this.overrideItemProps\n        })));\n      })));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNextPaddleFocus\", function () {\n      // if 'next' paddle will disappear, will focus 'previous' one.\n      if (!_this.props.navigation && _this.state.activeIndex >= _this.props.items.length - 2 && !_this.props.circular) {\n        _this.paddlePreviousRef.current.focus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePreviousPaddleFocus\", function () {\n      // if 'previous' paddle will disappear, will focus 'next' one.\n      if (!_this.props.navigation && _this.state.activeIndex <= 1 && !_this.props.circular) {\n        _this.paddleNextRef.current.focus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showPreviousSlide\", function (e, focusItem) {\n      _this.setActiveIndex(e, _this.state.activeIndex - 1, focusItem);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showNextSlide\", function (e, focusItem) {\n      _this.setActiveIndex(e, _this.state.activeIndex + 1, focusItem);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePaddleOverrides\", function (predefinedProps, paddleName) {\n      return {\n        onClick: function onClick(e, paddleProps) {\n          _invoke(predefinedProps, 'onClick', e, paddleProps);\n\n          if (paddleName === 'paddleNext') {\n            _this.showNextSlide(e, false);\n\n            _this.handleNextPaddleFocus();\n          } else if (paddleName === 'paddlePrevious') {\n            _this.showPreviousSlide(e, false);\n\n            _this.handlePreviousPaddleFocus();\n          }\n        },\n        onBlur: function onBlur(e, paddleProps) {\n          if (e.relatedTarget !== _this.paddleNextRef.current) {\n            _this.setState({\n              ariaLiveOn: false\n            });\n          }\n        },\n        onFocus: function onFocus(e, paddleProps) {\n          _invoke(predefinedProps, 'onFocus', e, paddleProps);\n\n          _this.setState({\n            ariaLiveOn: true\n          });\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPaddles\", function (accessibility) {\n      var _this$props2 = _this.props,\n          paddlePrevious = _this$props2.paddlePrevious,\n          paddleNext = _this$props2.paddleNext,\n          items = _this$props2.items,\n          circular = _this$props2.circular;\n      var activeIndex = _this.state.activeIndex;\n      return React.createElement(React.Fragment, null, React.createElement(Ref, {\n        innerRef: _this.paddlePreviousRef\n      }, CarouselPaddle.create(paddlePrevious, {\n        defaultProps: function defaultProps() {\n          return Object.assign({\n            className: Carousel.slotClassNames.paddlePrevious,\n            previous: true,\n            hidden: items !== undefined && !circular && activeIndex === 0\n          }, accessibility.attributes.paddlePrevious, {}, applyAccessibilityKeyHandlers(accessibility.keyHandlers.paddlePrevious, paddlePrevious));\n        },\n        overrideProps: function overrideProps(predefinedProps) {\n          return _this.handlePaddleOverrides(predefinedProps, 'paddlePrevious');\n        }\n      })), React.createElement(Ref, {\n        innerRef: _this.paddleNextRef\n      }, CarouselPaddle.create(paddleNext, {\n        defaultProps: function defaultProps() {\n          return Object.assign({\n            className: Carousel.slotClassNames.paddleNext,\n            next: true,\n            hidden: items !== undefined && !circular && activeIndex === items.length - 1\n          }, accessibility.attributes.paddleNext, {}, applyAccessibilityKeyHandlers(accessibility.keyHandlers.paddleNext, paddleNext));\n        },\n        overrideProps: function overrideProps(predefinedProps) {\n          return _this.handlePaddleOverrides(predefinedProps, 'paddleNext');\n        }\n      })));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderNavigation\", function () {\n      var _this$props3 = _this.props,\n          getItemPositionText = _this$props3.getItemPositionText,\n          navigation = _this$props3.navigation,\n          items = _this$props3.items;\n\n      if (!items || !items.length) {\n        return null;\n      }\n\n      var activeIndex = _this.state.activeIndex;\n      return navigation ? CarouselNavigation.create(navigation, {\n        defaultProps: function defaultProps() {\n          return {\n            className: Carousel.slotClassNames.navigation,\n            iconOnly: true,\n            activeIndex: activeIndex\n          };\n        },\n        overrideProps: function overrideProps(predefinedProps) {\n          return {\n            onItemClick: function onItemClick(e, itemProps) {\n              var index = itemProps.index;\n\n              _this.setActiveIndex(e, index, true);\n\n              _invoke(predefinedProps, 'onClick', e, itemProps);\n            }\n          };\n        }\n      }) : React.createElement(Text, {\n        \"aria-hidden\": \"true\",\n        className: Carousel.slotClassNames.pagination,\n        content: getItemPositionText(activeIndex, items.length)\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Carousel, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.focusItemAtIndex.cancel();\n    }\n  }, {\n    key: \"getInitialAutoControlledState\",\n    value: function getInitialAutoControlledState() {\n      return {\n        activeIndex: 0,\n        prevActiveIndex: -1,\n        ariaLiveOn: false,\n        itemIds: [],\n        shouldFocusContainer: false,\n        isFromKeyboard: false\n      };\n    }\n  }, {\n    key: \"setActiveIndex\",\n    value: function setActiveIndex(e, index, focusItem) {\n      var _this$props4 = this.props,\n          circular = _this$props4.circular,\n          items = _this$props4.items;\n      var lastItemIndex = items.length - 1;\n      var activeIndex = index;\n\n      if (index < 0) {\n        if (!circular) {\n          return;\n        }\n\n        activeIndex = lastItemIndex;\n      }\n\n      if (index > lastItemIndex) {\n        if (!circular) {\n          return;\n        }\n\n        activeIndex = 0;\n      }\n\n      this.setState({\n        prevActiveIndex: this.state.activeIndex,\n        activeIndex: activeIndex\n      });\n\n      _invoke(this.props, 'onActiveIndexChange', e, this.props);\n\n      if (focusItem) {\n        this.focusItemAtIndex(activeIndex);\n      }\n    }\n  }, {\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var ElementType = _ref.ElementType,\n          classes = _ref.classes,\n          accessibility = _ref.accessibility,\n          unhandledProps = _ref.unhandledProps;\n      var children = this.props.children;\n      return React.createElement(ElementType, _extends({\n        className: classes.root\n      }, accessibility.attributes.root, unhandledProps, applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)), childrenExist(children) ? children : React.createElement(React.Fragment, null, this.renderContent(accessibility, classes, unhandledProps), this.renderPaddles(accessibility), this.renderNavigation()));\n    }\n  }], [{\n    key: \"getAutoControlledStateFromProps\",\n    value: function getAutoControlledStateFromProps(props, state) {\n      var items = props.items;\n      var itemIds = state.itemIds;\n\n      if (!items) {\n        return null;\n      }\n\n      return {\n        itemIds: items.map(function (item, index) {\n          return getOrGenerateIdFromShorthand('carousel-item-', item, itemIds[index]);\n        })\n      };\n    }\n  }]);\n\n  return Carousel;\n}(AutoControlledComponent);\n\n_defineProperty(Carousel, \"create\", void 0);\n\n_defineProperty(Carousel, \"displayName\", 'Carousel');\n\n_defineProperty(Carousel, \"className\", 'ui-carousel');\n\n_defineProperty(Carousel, \"slotClassNames\", {\n  itemsContainer: \"\".concat(Carousel.className, \"__itemscontainer\"),\n  paddleNext: \"\".concat(Carousel.className, \"__paddlenext\"),\n  paddlePrevious: \"\".concat(Carousel.className, \"__paddleprevious\"),\n  pagination: \"\".concat(Carousel.className, \"__pagination\"),\n  navigation: \"\".concat(Carousel.className, \"__navigation\")\n});\n\n_defineProperty(Carousel, \"propTypes\", Object.assign({}, commonPropTypes.createCommon({\n  content: false\n}), {\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  ariaRoleDescription: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  circular: PropTypes.bool,\n  defaultActiveIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  getItemPositionText: PropTypes.func,\n  items: customPropTypes.collectionShorthand,\n  navigation: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n  navigationPosition: PropTypes.string,\n  onActiveIndexChange: PropTypes.func,\n  paddleNext: customPropTypes.itemShorthand,\n  paddlesPosition: PropTypes.string,\n  paddlePrevious: customPropTypes.itemShorthand\n}));\n\n_defineProperty(Carousel, \"autoControlledProps\", ['activeIndex']);\n\n_defineProperty(Carousel, \"defaultProps\", {\n  accessibility: carouselBehavior,\n  paddlePrevious: {},\n  paddleNext: {}\n});\n\n_defineProperty(Carousel, \"Item\", CarouselItem);\n\n_defineProperty(Carousel, \"Navigation\", CarouselNavigation);\n\n_defineProperty(Carousel, \"NavigationItem\", CarouselNavigationItem);\n\n_defineProperty(Carousel, \"Paddle\", CarouselPaddle);\n\nCarousel.create = createShorthandFactory({\n  Component: Carousel,\n  mappedArrayProp: 'items'\n});\n/**\n * A Carousel displays data organised as a gallery.\n *\n * @accessibility\n * Implements [ARIA Carousel](https://www.w3.org/WAI/tutorials/carousels/structure/) design pattern.\n * @accessibilityIssues\n * [VoiceOver doens't narrate label referenced by aria-labelledby attribute, when role is \"tabpanel\"](https://bugs.chromium.org/p/chromium/issues/detail?id=1040924)\n */\n\nexport default withSafeTypeForAs(Carousel);","map":{"version":3,"sources":["components/Carousel/Carousel.tsx"],"names":["Carousel","AutoControlledComponent","itemsContainer","paddleNext","paddlePrevious","pagination","navigation","content","activeIndex","PropTypes","ariaRoleDescription","string","ariaLabel","circular","bool","defaultActiveIndex","getItemPositionText","func","items","customPropTypes","collectionShorthand","navigationPosition","onActiveIndexChange","itemShorthand","paddlesPosition","accessibility","CarouselItem","CarouselNavigation","CarouselNavigationItem","CarouselPaddle","props","state","itemIds","getOrGenerateIdFromShorthand","showNextSlideByKeyboardNavigation","e","showPreviousSlideByKeyboardNavigation","showNextSlideByPaddlePress","showPreviousSlideByPaddlePress","prevActiveIndex","ariaLiveOn","shouldFocusContainer","isFromKeyboard","React","index","focusItem","lastItemIndex","onFocus","onBlur","classes","itemsContainerWrapper","cx","applyAccessibilityKeyHandlers","itemRef","active","slideToNext","initialMounting","item","defaultProps","id","itemPositionText","overrideProps","overrideItemProps","onClick","paddleName","paddlePreviousRef","className","previous","hidden","paddleNextRef","next","iconOnly","onItemClick","itemProps","ElementType","unhandledProps","children","root","childrenExist","createShorthandFactory","Component","mappedArrayProp","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport { Accessibility, carouselBehavior } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Ref } from '@fluentui/react-component-ref';\nimport Animation from '../Animation/Animation';\n\nimport {\n  UIComponentProps,\n  createShorthandFactory,\n  ShorthandFactory,\n  commonPropTypes,\n  applyAccessibilityKeyHandlers,\n  childrenExist,\n  ChildrenComponentProps,\n  getOrGenerateIdFromShorthand,\n  AutoControlledComponent,\n  isFromKeyboard,\n} from '../../utils';\nimport {\n  WithAsProp,\n  withSafeTypeForAs,\n  DebounceResultFn,\n  ShorthandCollection,\n  ShorthandValue,\n  ComponentEventHandler,\n} from '../../types';\nimport CarouselItem, { CarouselItemProps } from './CarouselItem';\nimport Text from '../Text/Text';\nimport CarouselNavigation, { CarouselNavigationProps } from './CarouselNavigation';\nimport CarouselNavigationItem, { CarouselNavigationItemProps } from './CarouselNavigationItem';\nimport CarouselPaddle, { CarouselPaddleProps } from './CarouselPaddle';\n\nexport interface CarouselSlotClassNames {\n  itemsContainer: string;\n  paddleNext: string;\n  paddlePrevious: string;\n  pagination: string;\n  navigation: string;\n}\n\nexport interface CarouselProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available menuAsToolbarBehavior, tabListBehavior, tabBehavior\n   */\n  accessibility?: Accessibility;\n\n  /** Index of the currently active item. */\n  activeIndex?: number | string;\n\n  /**\n   * Sets the aria-roledescription attribute.\n   */\n  ariaRoleDescription?: string;\n\n  /**\n   * Sets the aria-label attribute for carousel.\n   */\n  ariaLabel?: string;\n\n  /** Specifies if the process of switching slides is circular. */\n  circular?: boolean;\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex?: number | string;\n\n  /**\n   * Message generator for item position in the carousel. Used to generate the\n   * text for pagination. Also generates invisible text content for each item\n   * which is added along with the slide content. These are used by the screen\n   * reader to narrate position when active item is changed.\n   */\n  getItemPositionText?: (index: number, size: number) => string;\n\n  /** Shorthand array of props for CarouselItem. */\n  items?: ShorthandCollection<CarouselItemProps>;\n\n  /** Shorthand array of props for the buttons of the CarouselNavigation. */\n  navigation?: ShorthandValue<CarouselNavigationProps> | ShorthandCollection<CarouselNavigationItemProps>;\n\n  /**\n   * A Carousel can position its navigation below the content by default,\n   * above the content, to the start or to the end of the content.\n   */\n  navigationPosition?: 'below' | 'above' | 'start' | 'end';\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All Carousel props.\n   */\n  onActiveIndexChange?: ComponentEventHandler<CarouselProps>;\n\n  /** Shorthand for the paddle that navigates to the next item. */\n  paddleNext?: ShorthandValue<CarouselPaddleProps>;\n\n  /**\n   * A Carousel can position its paddels inside the content, outside or inline\n   * with the navigation component.\n   */\n  paddlesPosition?: 'inside' | 'outside' | 'inline';\n\n  /** Shorthand for the paddle that navigates to the previous item. */\n  paddlePrevious?: ShorthandValue<CarouselPaddleProps>;\n}\n\nexport interface CarouselState {\n  activeIndex: number;\n  prevActiveIndex: number;\n  ariaLiveOn: boolean;\n  itemIds: string[];\n  shouldFocusContainer: boolean;\n  isFromKeyboard: boolean;\n}\n\nclass Carousel extends AutoControlledComponent<WithAsProp<CarouselProps>, CarouselState> {\n  static create: ShorthandFactory<CarouselProps>;\n\n  static displayName = 'Carousel';\n\n  static className = 'ui-carousel';\n\n  static slotClassNames: CarouselSlotClassNames = {\n    itemsContainer: `${Carousel.className}__itemscontainer`,\n    paddleNext: `${Carousel.className}__paddlenext`,\n    paddlePrevious: `${Carousel.className}__paddleprevious`,\n    pagination: `${Carousel.className}__pagination`,\n    navigation: `${Carousel.className}__navigation`,\n  };\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      content: false,\n    }),\n    activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    ariaRoleDescription: PropTypes.string,\n    ariaLabel: PropTypes.string,\n    circular: PropTypes.bool,\n    defaultActiveIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    getItemPositionText: PropTypes.func,\n    items: customPropTypes.collectionShorthand,\n    navigation: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n    navigationPosition: PropTypes.string,\n    onActiveIndexChange: PropTypes.func,\n    paddleNext: customPropTypes.itemShorthand,\n    paddlesPosition: PropTypes.string,\n    paddlePrevious: customPropTypes.itemShorthand,\n  };\n\n  static autoControlledProps = ['activeIndex'];\n\n  static defaultProps = {\n    accessibility: carouselBehavior as Accessibility,\n    paddlePrevious: {},\n    paddleNext: {},\n  };\n\n  static Item = CarouselItem;\n  static Navigation = CarouselNavigation;\n  static NavigationItem = CarouselNavigationItem;\n  static Paddle = CarouselPaddle;\n\n  static getAutoControlledStateFromProps(props: CarouselProps, state: CarouselState) {\n    const { items } = props;\n    const { itemIds } = state;\n\n    if (!items) {\n      return null;\n    }\n\n    return {\n      itemIds: items.map((item, index) => getOrGenerateIdFromShorthand('carousel-item-', item, itemIds[index])),\n    };\n  }\n\n  componentWillUnmount() {\n    this.focusItemAtIndex.cancel();\n  }\n\n  actionHandlers = {\n    showNextSlideByKeyboardNavigation: e => {\n      e.preventDefault();\n      this.showNextSlide(e, true);\n    },\n    showPreviousSlideByKeyboardNavigation: e => {\n      e.preventDefault();\n      this.showPreviousSlide(e, true);\n    },\n    showNextSlideByPaddlePress: e => {\n      e.preventDefault();\n      this.showNextSlide(e, false);\n      this.handleNextPaddleFocus();\n    },\n    showPreviousSlideByPaddlePress: e => {\n      e.preventDefault();\n      this.showPreviousSlide(e, false);\n      this.handlePreviousPaddleFocus();\n    },\n  };\n\n  getInitialAutoControlledState(): CarouselState {\n    return {\n      activeIndex: 0,\n      prevActiveIndex: -1,\n      ariaLiveOn: false,\n      itemIds: [] as string[],\n      shouldFocusContainer: false,\n      isFromKeyboard: false,\n    };\n  }\n\n  itemRefs = [] as React.RefObject<HTMLElement>[];\n  paddleNextRef = React.createRef<HTMLElement>();\n  paddlePreviousRef = React.createRef<HTMLElement>();\n  focusItemAtIndex: DebounceResultFn<(index: number) => void> = _.debounce((index: number) => {\n    this.itemRefs[index].current.focus();\n  }, 400);\n\n  setActiveIndex(e: React.SyntheticEvent, index: number, focusItem: boolean): void {\n    const { circular, items } = this.props;\n    const lastItemIndex = items.length - 1;\n    let activeIndex = index;\n\n    if (index < 0) {\n      if (!circular) {\n        return;\n      }\n      activeIndex = lastItemIndex;\n    }\n\n    if (index > lastItemIndex) {\n      if (!circular) {\n        return;\n      }\n      activeIndex = 0;\n    }\n\n    this.setState({\n      prevActiveIndex: this.state.activeIndex,\n      activeIndex,\n    });\n\n    _.invoke(this.props, 'onActiveIndexChange', e, this.props);\n\n    if (focusItem) {\n      this.focusItemAtIndex(activeIndex);\n    }\n  }\n\n  overrideItemProps = predefinedProps => ({\n    onFocus: (e, itemProps) => {\n      this.setState({\n        shouldFocusContainer: e.currentTarget === e.target,\n        isFromKeyboard: isFromKeyboard(),\n      });\n      _.invoke(predefinedProps, 'onFocus', e, itemProps);\n    },\n    onBlur: (e, itemProps) => {\n      this.setState({\n        shouldFocusContainer: e.currentTarget.contains(e.relatedTarget),\n        isFromKeyboard: false,\n      });\n      _.invoke(predefinedProps, 'onBlur', e, itemProps);\n    },\n  });\n\n  renderContent = (accessibility, classes, unhandledProps) => {\n    const { getItemPositionText, items, circular } = this.props;\n    const { activeIndex, itemIds, prevActiveIndex } = this.state;\n\n    this.itemRefs = [];\n\n    return (\n      <div className={classes.itemsContainerWrapper} {...accessibility.attributes.itemsContainerWrapper}>\n        <div\n          className={cx(Carousel.slotClassNames.itemsContainer, classes.itemsContainer)}\n          {...accessibility.attributes.itemsContainer}\n          {...applyAccessibilityKeyHandlers(accessibility.keyHandlers.itemsContainer, unhandledProps)}\n        >\n          {items &&\n            items.map((item, index) => {\n              const itemRef = React.createRef<HTMLElement>();\n              this.itemRefs.push(itemRef);\n              const active = activeIndex === index;\n              let slideToNext = prevActiveIndex < activeIndex;\n\n              const initialMounting = prevActiveIndex === -1;\n\n              if (circular && prevActiveIndex === items.length - 1 && activeIndex === 0) {\n                slideToNext = true;\n              } else if (circular && prevActiveIndex === 0 && activeIndex === items.length - 1) {\n                slideToNext = false;\n              }\n\n              return (\n                <Animation\n                  key={item['key'] || index}\n                  mountOnEnter\n                  unmountOnExit\n                  visible={active}\n                  name={\n                    initialMounting\n                      ? ''\n                      : active\n                      ? slideToNext\n                        ? 'carousel-slide-to-next-enter'\n                        : 'carousel-slide-to-previous-enter'\n                      : slideToNext\n                      ? 'carousel-slide-to-next-exit'\n                      : 'carousel-slide-to-previous-exit'\n                  }\n                >\n                  <Ref innerRef={itemRef}>\n                    {CarouselItem.create(item, {\n                      defaultProps: () => ({\n                        active,\n                        id: itemIds[index],\n                        navigation: !!this.props.navigation,\n                        ...(getItemPositionText && {\n                          itemPositionText: getItemPositionText(index, items.length),\n                        }),\n                      }),\n                      overrideProps: this.overrideItemProps,\n                    })}\n                  </Ref>\n                </Animation>\n              );\n            })}\n        </div>\n      </div>\n    );\n  };\n\n  handleNextPaddleFocus = () => {\n    // if 'next' paddle will disappear, will focus 'previous' one.\n    if (!this.props.navigation && this.state.activeIndex >= this.props.items.length - 2 && !this.props.circular) {\n      this.paddlePreviousRef.current.focus();\n    }\n  };\n\n  handlePreviousPaddleFocus = () => {\n    // if 'previous' paddle will disappear, will focus 'next' one.\n    if (!this.props.navigation && this.state.activeIndex <= 1 && !this.props.circular) {\n      this.paddleNextRef.current.focus();\n    }\n  };\n\n  showPreviousSlide = (e: React.SyntheticEvent, focusItem: boolean) => {\n    this.setActiveIndex(e, this.state.activeIndex - 1, focusItem);\n  };\n\n  showNextSlide = (e: React.SyntheticEvent, focusItem: boolean) => {\n    this.setActiveIndex(e, this.state.activeIndex + 1, focusItem);\n  };\n\n  handlePaddleOverrides = (predefinedProps: CarouselPaddleProps, paddleName: string) => ({\n    onClick: (e: React.SyntheticEvent, paddleProps: CarouselPaddleProps) => {\n      _.invoke(predefinedProps, 'onClick', e, paddleProps);\n      if (paddleName === 'paddleNext') {\n        this.showNextSlide(e, false);\n        this.handleNextPaddleFocus();\n      } else if (paddleName === 'paddlePrevious') {\n        this.showPreviousSlide(e, false);\n        this.handlePreviousPaddleFocus();\n      }\n    },\n    onBlur: (e: React.FocusEvent, paddleProps: CarouselPaddleProps) => {\n      if (e.relatedTarget !== this.paddleNextRef.current) {\n        this.setState({ ariaLiveOn: false });\n      }\n    },\n    onFocus: (e: React.SyntheticEvent, paddleProps: CarouselPaddleProps) => {\n      _.invoke(predefinedProps, 'onFocus', e, paddleProps);\n      this.setState({\n        ariaLiveOn: true,\n      });\n    },\n  });\n\n  renderPaddles = accessibility => {\n    const { paddlePrevious, paddleNext, items, circular } = this.props;\n    const { activeIndex } = this.state;\n\n    return (\n      <>\n        <Ref innerRef={this.paddlePreviousRef}>\n          {CarouselPaddle.create(paddlePrevious, {\n            defaultProps: () => ({\n              className: Carousel.slotClassNames.paddlePrevious,\n              previous: true,\n              hidden: items !== undefined && !circular && activeIndex === 0,\n              ...accessibility.attributes.paddlePrevious,\n              ...applyAccessibilityKeyHandlers(accessibility.keyHandlers.paddlePrevious, paddlePrevious),\n            }),\n            overrideProps: (predefinedProps: CarouselPaddleProps) =>\n              this.handlePaddleOverrides(predefinedProps, 'paddlePrevious'),\n          })}\n        </Ref>\n        <Ref innerRef={this.paddleNextRef}>\n          {CarouselPaddle.create(paddleNext, {\n            defaultProps: () => ({\n              className: Carousel.slotClassNames.paddleNext,\n              next: true,\n              hidden: items !== undefined && !circular && activeIndex === items.length - 1,\n              ...accessibility.attributes.paddleNext,\n              ...applyAccessibilityKeyHandlers(accessibility.keyHandlers.paddleNext, paddleNext),\n            }),\n            overrideProps: (predefinedProps: CarouselPaddleProps) =>\n              this.handlePaddleOverrides(predefinedProps, 'paddleNext'),\n          })}\n        </Ref>\n      </>\n    );\n  };\n\n  renderNavigation = () => {\n    const { getItemPositionText, navigation, items } = this.props;\n\n    if (!items || !items.length) {\n      return null;\n    }\n\n    const { activeIndex } = this.state;\n\n    return navigation ? (\n      CarouselNavigation.create(navigation, {\n        defaultProps: () => ({\n          className: Carousel.slotClassNames.navigation,\n          iconOnly: true,\n          activeIndex,\n        }),\n        overrideProps: (predefinedProps: CarouselNavigationItemProps) => ({\n          onItemClick: (e: React.SyntheticEvent, itemProps: CarouselNavigationItemProps) => {\n            const { index } = itemProps;\n\n            this.setActiveIndex(e, index, true);\n\n            _.invoke(predefinedProps, 'onClick', e, itemProps);\n          },\n        }),\n      })\n    ) : (\n      <Text\n        aria-hidden=\"true\"\n        className={Carousel.slotClassNames.pagination}\n        content={getItemPositionText(activeIndex, items.length)}\n      />\n    );\n  };\n\n  renderComponent({ ElementType, classes, accessibility, unhandledProps }) {\n    const { children } = this.props;\n    return (\n      <ElementType\n        className={classes.root}\n        {...accessibility.attributes.root}\n        {...unhandledProps}\n        {...applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)}\n      >\n        {childrenExist(children) ? (\n          children\n        ) : (\n          <>\n            {this.renderContent(accessibility, classes, unhandledProps)}\n            {this.renderPaddles(accessibility)}\n            {this.renderNavigation()}\n          </>\n        )}\n      </ElementType>\n    );\n  }\n}\n\nCarousel.create = createShorthandFactory({\n  Component: Carousel,\n  mappedArrayProp: 'items',\n});\n\n/**\n * A Carousel displays data organised as a gallery.\n *\n * @accessibility\n * Implements [ARIA Carousel](https://www.w3.org/WAI/tutorials/carousels/structure/) design pattern.\n * @accessibilityIssues\n * [VoiceOver doens't narrate label referenced by aria-labelledby attribute, when role is \"tabpanel\"](https://bugs.chromium.org/p/chromium/issues/detail?id=1040924)\n */\nexport default withSafeTypeForAs<typeof Carousel, CarouselProps, 'div'>(Carousel);\n"]},"metadata":{},"sourceType":"module"}