{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport TableCell from './TableCell';\nimport { UIComponent, commonPropTypes, createShorthandFactory, applyAccessibilityKeyHandlers, childrenExist } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nimport { tableRowBehavior } from '@fluentui/accessibility';\nimport { mergeComponentVariables } from '@fluentui/styles';\n\nvar handleVariablesOverrides = function handleVariablesOverrides(variables) {\n  return function (predefinedProps) {\n    return {\n      variables: mergeComponentVariables(variables, predefinedProps.variables)\n    };\n  };\n};\n\nvar TableRow = /*#__PURE__*/function (_UIComponent) {\n  _inherits(TableRow, _UIComponent);\n\n  function TableRow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableRow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"rowRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"actionHandlers\", {\n      // https://github.com/microsoft/fluent-ui-react/issues/2150\n      unsetRowTabbable: function unsetRowTabbable(e) {\n        _this.rowRef.current.setAttribute('tabindex', '-1');\n      },\n      performClick: function performClick(e) {\n        _this.handleClick(e);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      if (e.currentTarget === e.target) {\n        _invoke(_this.props, 'onClick', e, _this.props);\n\n        e.preventDefault();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(TableRow, [{\n    key: \"renderCells\",\n    value: function renderCells(accessibility, variables) {\n      var items = this.props.items;\n      var cellAccessibility = accessibility.childBehaviors ? accessibility.childBehaviors.cell : undefined;\n      return _map(items, function (item, index) {\n        var cellProps = {\n          accessibility: cellAccessibility\n        };\n        var overrideProps = handleVariablesOverrides(variables);\n        return TableCell.create(item, {\n          defaultProps: function defaultProps() {\n            return cellProps;\n          },\n          overrideProps: overrideProps\n        });\n      });\n    }\n  }, {\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var accessibility = _ref.accessibility,\n          ElementType = _ref.ElementType,\n          classes = _ref.classes,\n          variables = _ref.variables,\n          unhandledProps = _ref.unhandledProps;\n      var children = this.props.children;\n      var hasChildren = childrenExist(children);\n      return React.createElement(Ref, {\n        innerRef: this.rowRef\n      }, React.createElement(ElementType, _extends({\n        className: classes.root,\n        onClick: this.handleClick\n      }, accessibility.attributes.root, unhandledProps, applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)), hasChildren && children, !hasChildren && this.renderCells(accessibility, variables)));\n    }\n  }]);\n\n  return TableRow;\n}(UIComponent);\n\n_defineProperty(TableRow, \"displayName\", 'TableRow');\n\n_defineProperty(TableRow, \"className\", 'ui-table__row');\n\n_defineProperty(TableRow, \"create\", void 0);\n\n_defineProperty(TableRow, \"propTypes\", Object.assign({}, commonPropTypes.createCommon({\n  content: false\n}), {\n  content: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.oneOfType([PropTypes.arrayOf(customPropTypes.nodeContent), customPropTypes.nodeContent])]),\n  items: customPropTypes.collectionShorthand,\n  header: PropTypes.bool,\n  compact: PropTypes.bool,\n  selected: PropTypes.bool\n}));\n\n_defineProperty(TableRow, \"defaultProps\", {\n  accessibility: tableRowBehavior\n});\n\nTableRow.create = createShorthandFactory({\n  Component: TableRow,\n  mappedArrayProp: 'items'\n});\n/**\n * Component represents a single row in a tabular structure\n */\n\nexport default withSafeTypeForAs(TableRow);","map":{"version":3,"sources":["components/Table/TableRow.tsx"],"names":["handleVariablesOverrides","variables","mergeComponentVariables","predefinedProps","TableRow","UIComponent","content","customPropTypes","PropTypes","items","collectionShorthand","header","bool","compact","selected","accessibility","tableRowBehavior","React","unsetRowTabbable","performClick","e","cellAccessibility","cellProps","overrideProps","defaultProps","ElementType","classes","unhandledProps","children","hasChildren","childrenExist","rowRef","handleClick","applyAccessibilityKeyHandlers","createShorthandFactory","Component","mappedArrayProp","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import { ReactAccessibilityBehavior } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport TableCell, { TableCellProps } from './TableCell';\nimport {\n  UIComponent,\n  RenderResultConfig,\n  UIComponentProps,\n  commonPropTypes,\n  ShorthandFactory,\n  createShorthandFactory,\n  applyAccessibilityKeyHandlers,\n  childrenExist,\n} from '../../utils';\nimport { ShorthandCollection, WithAsProp, withSafeTypeForAs } from '../../types';\nimport { Accessibility, tableRowBehavior } from '@fluentui/accessibility';\nimport { ComponentVariablesObject, mergeComponentVariables } from '@fluentui/styles';\n\nexport interface TableRowProps extends UIComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * */\n  accessibility?: Accessibility;\n\n  /**\n   * Row cells\n   */\n  items?: ShorthandCollection<TableCellProps>;\n\n  /**\n   * Is the row a table header\n   */\n  header?: boolean;\n\n  /**\n   * Render table in compact mode\n   */\n  compact?: boolean;\n\n  /**\n   * Whether a row is currently selected or not.\n   */\n  selected?: boolean;\n}\n\nconst handleVariablesOverrides = variables => predefinedProps => ({\n  variables: mergeComponentVariables(variables, predefinedProps.variables),\n});\n\nclass TableRow extends UIComponent<WithAsProp<TableRowProps>> {\n  static displayName = 'TableRow';\n\n  static className = 'ui-table__row';\n\n  static create: ShorthandFactory<TableRowProps>;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      content: false,\n    }),\n    content: customPropTypes.every([\n      customPropTypes.disallow(['children']),\n      PropTypes.oneOfType([PropTypes.arrayOf(customPropTypes.nodeContent), customPropTypes.nodeContent]),\n    ]),\n    items: customPropTypes.collectionShorthand,\n    header: PropTypes.bool,\n    compact: PropTypes.bool,\n    selected: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    accessibility: tableRowBehavior as Accessibility,\n  };\n\n  rowRef = React.createRef<HTMLElement>();\n\n  actionHandlers = {\n    // https://github.com/microsoft/fluent-ui-react/issues/2150\n    unsetRowTabbable: e => {\n      this.rowRef.current.setAttribute('tabindex', '-1');\n    },\n    performClick: e => {\n      this.handleClick(e);\n    },\n  };\n\n  handleClick = (e: React.SyntheticEvent) => {\n    if (e.currentTarget === e.target) {\n      _.invoke(this.props, 'onClick', e, this.props);\n      e.preventDefault();\n    }\n  };\n\n  renderCells(accessibility: ReactAccessibilityBehavior, variables: ComponentVariablesObject) {\n    const { items } = this.props;\n\n    const cellAccessibility = accessibility.childBehaviors ? accessibility.childBehaviors.cell : undefined;\n\n    return _.map(items, (item: TableCellProps, index: number) => {\n      const cellProps = {\n        accessibility: cellAccessibility as Accessibility,\n      };\n      const overrideProps = handleVariablesOverrides(variables);\n\n      return TableCell.create(item, {\n        defaultProps: () => cellProps,\n        overrideProps,\n      });\n    });\n  }\n\n  renderComponent({\n    accessibility,\n    ElementType,\n    classes,\n    variables,\n    unhandledProps,\n  }: RenderResultConfig<any>): React.ReactNode {\n    const { children } = this.props;\n    const hasChildren = childrenExist(children);\n\n    return (\n      <Ref innerRef={this.rowRef}>\n        <ElementType\n          className={classes.root}\n          onClick={this.handleClick}\n          {...accessibility.attributes.root}\n          {...unhandledProps}\n          {...applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)}\n        >\n          {hasChildren && children}\n          {!hasChildren && this.renderCells(accessibility, variables)}\n        </ElementType>\n      </Ref>\n    );\n  }\n}\n\nTableRow.create = createShorthandFactory({ Component: TableRow, mappedArrayProp: 'items' });\n\n/**\n * Component represents a single row in a tabular structure\n */\nexport default withSafeTypeForAs<typeof TableRow, TableRowProps, 'div'>(TableRow);\n"]},"metadata":{},"sourceType":"module"}