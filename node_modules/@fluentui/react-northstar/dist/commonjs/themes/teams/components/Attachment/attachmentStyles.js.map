{"version":3,"sources":["themes/teams/components/Attachment/attachmentStyles.ts"],"names":["attachmentStyles","root","p","props","v","variables","siteVariables","theme","borderFocusStyles","borderRadius","position","display","alignItems","width","maxWidth","minHeight","padding","marginBottom","marginRight","background","backgroundColor","color","textColor","boxShadow","border","borderWidth","borderColor","actionable","cursor","focusBackgroundColor","focusColor","Button","className","siblingsFocusColor","SvgIcon","backgroundColorHover","textColorHover","siblingsHoverColor","content","flex","header","fontSize","headerFontSize","fontWeight","headerFontWeight","lineHeight","headerLineHeight","description","descriptionFontSize","descriptionFontWeight","descriptionLineHeight","icon","height","iconSize","iconSpace","action","iconFilledStyles","outline","progress","transition","bottom","left","progressHeight","progressColor"],"mappings":";;;;;;;;;;;AAIA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,gBAAyF,GAAG;AAChGC,EAAAA,IAAI,EAAE,oBAAyE;AAAA;;AAAA,QAA/DC,CAA+D,QAAtEC,KAAsE;AAAA,QAAjDC,CAAiD,QAA5DC,SAA4D;AAAA,QAArCC,aAAqC,QAA9CC,KAA8C,CAArCD,aAAqC;AAC7E,QAAME,iBAAiB,GAAG,mCAAqB;AAC7CH,MAAAA,SAAS,EAAEC,aADkC;AAE7CG,MAAAA,YAAY,EAAEL,CAAC,CAACK;AAF6B,KAArB,CAA1B;AAKA;AACEC,MAAAA,QAAQ,EAAE,UADZ;AAEEC,MAAAA,OAAO,EAAE,aAFX;AAGEC,MAAAA,UAAU,EAAE,QAHd;AAIEC,MAAAA,KAAK,EAAE,MAJT;AAKEC,MAAAA,QAAQ,EAAE,oBAAQ,GAAR,CALZ;AAMEC,MAAAA,SAAS,EAAE,oBAAQ,EAAR,CANb;AAOEC,MAAAA,OAAO,EAAEZ,CAAC,CAACY,OAPb;AAQEC,MAAAA,YAAY,EAAE,oBAAQ,CAAR,CARhB;AASEC,MAAAA,WAAW,EAAE,oBAAQ,CAAR,CATf;AAUEC,MAAAA,UAAU,EAAEf,CAAC,CAACgB,eAVhB;AAWEC,MAAAA,KAAK,EAAEjB,CAAC,CAACkB,SAXX;AAYEC,MAAAA,SAAS,EAAEnB,CAAC,CAACmB,SAZf;AAaEC,MAAAA,MAAM,YAAKlB,aAAa,CAACmB,WAAnB,oBAAwCrB,CAAC,CAACsB,WAA1C,CAbR;AAcEjB,MAAAA,YAAY,EAAEL,CAAC,CAACK;AAdlB,OAgBKD,iBAhBL,MAkBMN,CAAC,CAACyB,UAAF,IAAgB;AAClBC,MAAAA,MAAM,EAAE,SADU;AAGlB,0CACKpB,iBAAiB,CAAC,gBAAD,CADtB;AAEEY,QAAAA,eAAe,EAAEhB,CAAC,CAACyB,oBAFrB;AAGER,QAAAA,KAAK,EAAEjB,CAAC,CAAC0B;AAHX,oEAKSC,gBAAOC,SALhB,GAK8B;AAC1BX,QAAAA,KAAK,EAAEjB,CAAC,CAAC6B;AADiB,OAL9B,8DASSC,iBAAQF,SATjB,GAS+B;AAC3BX,QAAAA,KAAK,EAAEjB,CAAC,CAAC6B;AADkB,OAT/B,mBAHkB;AAiBlB;AACEd,QAAAA,UAAU,EAAEf,CAAC,CAAC+B,oBADhB;AAEEd,QAAAA,KAAK,EAAEjB,CAAC,CAACgC;AAFX,4DAISL,gBAAOC,SAJhB,GAI8B;AAC1BX,QAAAA,KAAK,EAAEjB,CAAC,CAACiC;AADiB,OAJ9B,sDAQSH,iBAAQF,SARjB,GAQ+B;AAC3BX,QAAAA,KAAK,EAAEjB,CAAC,CAACiC;AADkB,OAR/B;AAjBkB,KAlBtB;AAiDD,GAxD+F;AA0DhGC,EAAAA,OAAO,EAAE;AAAA,WAAsB;AAC7BC,MAAAA,IAAI,EAAE;AADuB,KAAtB;AAAA,GA1DuF;AA8DhGC,EAAAA,MAAM,EAAE;AAAA,QAAcpC,CAAd,SAAGC,SAAH;AAAA,WAAsC;AAC5CoC,MAAAA,QAAQ,EAAErC,CAAC,CAACsC,cADgC;AAE5CC,MAAAA,UAAU,EAAEvC,CAAC,CAACwC,gBAF8B;AAG5CC,MAAAA,UAAU,EAAEzC,CAAC,CAAC0C;AAH8B,KAAtC;AAAA,GA9DwF;AAoEhGC,EAAAA,WAAW,EAAE;AAAA,QAAc3C,CAAd,SAAGC,SAAH;AAAA,WAAsC;AACjDM,MAAAA,OAAO,EAAE,OADwC;AAEjD8B,MAAAA,QAAQ,EAAErC,CAAC,CAAC4C,mBAFqC;AAGjDL,MAAAA,UAAU,EAAEvC,CAAC,CAAC6C,qBAHmC;AAIjDJ,MAAAA,UAAU,EAAEzC,CAAC,CAAC8C;AAJmC,KAAtC;AAAA,GApEmF;AA2EhGC,EAAAA,IAAI,EAAE;AAAA;;AAAA,QAAc/C,CAAd,SAAGC,SAAH;AAAA;AACJkC,MAAAA,IAAI,EAAE,UADF;AAEJa,MAAAA,MAAM,EAAEhD,CAAC,CAACiD,QAFN;AAGJxC,MAAAA,KAAK,EAAET,CAAC,CAACiD;AAHL,yDAIGnB,iBAAQF,SAJX,GAIyB;AAC3BoB,MAAAA,MAAM,EAAE,MADmB;AAE3BvC,MAAAA,KAAK,EAAE,MAFoB;AAG3B,eAAS;AACPuC,QAAAA,MAAM,EAAE,MADD;AAEPvC,QAAAA,KAAK,EAAE;AAFA;AAHkB,KAJzB,uDAYST,CAAC,CAACkD,SAZX;AAAA,GA3E0F;AA0FhGC,EAAAA,MAAM,EAAE,uBAAyE;AAAA,QAA/DrD,CAA+D,SAAtEC,KAAsE;AAAA,QAAjDC,CAAiD,SAA5DC,SAA4D;AAAA,QAArCC,aAAqC,SAA9CC,KAA8C,CAArCD,aAAqC;AAC/E,QAAMkD,gBAAgB,GAAG,yCAA2B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA3B,CAAzB;AACA,QAAMjD,iBAAiB,GAAG,mCAAqB;AAC7CH,MAAAA,SAAS,EAAEC,aADkC;AAE7CG,MAAAA,YAAY,EAAEL,CAAC,CAACK;AAF6B,KAArB,CAA1B;AAKA,wEACSyB,iBAAQF,SADjB,GAC+B;AAC3BX,MAAAA,KAAK,EAAEjB,CAAC,CAACkB,SADkB,CACP;;AADO,KAD/B,GAKK,yCAA2B;AAAEmC,MAAAA,OAAO,EAAE;AAAX,KAA3B,CALL;AAOE,kCACKD,gBADL;AAEErC,QAAAA,UAAU,EAAE;AAFd,QAPF;AAYE,gBAAUX,iBAAiB,CAAC,QAAD,CAZ7B;AAaE,0CACKgD,gBADL,MAEKhD,iBAAiB,CAAC,gBAAD,CAFtB;AAbF;AAkBD,GAnH+F;AAqHhGkD,EAAAA,QAAQ,EAAE;AAAA,QAAUxD,CAAV,SAAGC,KAAH;AAAA,QAAwBC,CAAxB,SAAaC,SAAb;AAAA,WAAgD;AACxDsD,MAAAA,UAAU,EAAE,YAD4C;AAExDjD,MAAAA,QAAQ,EAAE,UAF8C;AAGxDC,MAAAA,OAAO,EAAE,OAH+C;AAIxDiD,MAAAA,MAAM,EAAE,CAJgD;AAKxDC,MAAAA,IAAI,EAAE,CALkD;AAMxD/C,MAAAA,QAAQ,EAAE,MAN8C;AAOxDsC,MAAAA,MAAM,EAAE,oBAAQhD,CAAC,CAAC0D,cAAV,CAPgD;AAQxD3C,MAAAA,UAAU,EAAEf,CAAC,CAAC2D;AAR0C,KAAhD;AAAA;AArHsF,CAAlG;eAiIe/D,gB","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\n\nimport { AttachmentStylesProps } from '../../../../components/Attachment/Attachment';\nimport { AttachmentVariables } from './attachmentVariables';\nimport { pxToRem } from '../../../../utils';\nimport SvgIcon from '../../../../components/SvgIcon/SvgIcon';\nimport getBorderFocusStyles from '../../getBorderFocusStyles';\nimport getIconFillOrOutlineStyles from '../../getIconFillOrOutlineStyles';\nimport Button from '../../../../components/Button/Button';\n\nconst attachmentStyles: ComponentSlotStylesPrepared<AttachmentStylesProps, AttachmentVariables> = {\n  root: ({ props: p, variables: v, theme: { siteVariables } }): ICSSInJSStyle => {\n    const borderFocusStyles = getBorderFocusStyles({\n      variables: siteVariables,\n      borderRadius: v.borderRadius,\n    });\n\n    return {\n      position: 'relative',\n      display: 'inline-flex',\n      alignItems: 'center',\n      width: '100%',\n      maxWidth: pxToRem(440),\n      minHeight: pxToRem(48),\n      padding: v.padding,\n      marginBottom: pxToRem(2),\n      marginRight: pxToRem(2),\n      background: v.backgroundColor,\n      color: v.textColor,\n      boxShadow: v.boxShadow,\n      border: `${siteVariables.borderWidth} solid ${v.borderColor}`,\n      borderRadius: v.borderRadius,\n\n      ...borderFocusStyles,\n\n      ...(p.actionable && {\n        cursor: 'pointer',\n\n        ':focus-visible': {\n          ...borderFocusStyles[':focus-visible'],\n          backgroundColor: v.focusBackgroundColor,\n          color: v.focusColor,\n\n          [`& .${Button.className}`]: {\n            color: v.siblingsFocusColor,\n          },\n\n          [`& .${SvgIcon.className}`]: {\n            color: v.siblingsFocusColor,\n          },\n        },\n\n        ':hover': {\n          background: v.backgroundColorHover,\n          color: v.textColorHover,\n\n          [`& .${Button.className}`]: {\n            color: v.siblingsHoverColor,\n          },\n\n          [`& .${SvgIcon.className}`]: {\n            color: v.siblingsHoverColor,\n          },\n        },\n      }),\n    };\n  },\n\n  content: (): ICSSInJSStyle => ({\n    flex: 1,\n  }),\n\n  header: ({ variables: v }): ICSSInJSStyle => ({\n    fontSize: v.headerFontSize,\n    fontWeight: v.headerFontWeight,\n    lineHeight: v.headerLineHeight,\n  }),\n\n  description: ({ variables: v }): ICSSInJSStyle => ({\n    display: 'block',\n    fontSize: v.descriptionFontSize,\n    fontWeight: v.descriptionFontWeight,\n    lineHeight: v.descriptionLineHeight,\n  }),\n\n  icon: ({ variables: v }): ICSSInJSStyle => ({\n    flex: '0 0 auto',\n    height: v.iconSize,\n    width: v.iconSize,\n    [`& .${SvgIcon.className}`]: {\n      height: '100%',\n      width: '100%',\n      '& svg': {\n        height: '100%',\n        width: '100%',\n      },\n    },\n    marginRight: v.iconSpace,\n  }),\n\n  action: ({ props: p, variables: v, theme: { siteVariables } }): ICSSInJSStyle => {\n    const iconFilledStyles = getIconFillOrOutlineStyles({ outline: false });\n    const borderFocusStyles = getBorderFocusStyles({\n      variables: siteVariables,\n      borderRadius: v.borderRadius,\n    });\n\n    return {\n      [`& .${SvgIcon.className}`]: {\n        color: v.textColor, // this breaks the color change on hover\n      },\n\n      ...getIconFillOrOutlineStyles({ outline: true }),\n\n      ':hover': {\n        ...iconFilledStyles,\n        background: 'transparent',\n      },\n\n      ':focus': borderFocusStyles[':focus'],\n      ':focus-visible': {\n        ...iconFilledStyles,\n        ...borderFocusStyles[':focus-visible'],\n      },\n    };\n  },\n\n  progress: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    transition: 'width 0.2s',\n    position: 'absolute',\n    display: 'block',\n    bottom: 0,\n    left: 0,\n    maxWidth: '100%',\n    height: pxToRem(v.progressHeight),\n    background: v.progressColor,\n  }),\n};\n\nexport default attachmentStyles;\n"],"file":"attachmentStyles.js"}