{"version":3,"sources":["themes/teams/components/Carousel/carouselNavigationStyles.ts"],"names":["carouselNavigationStyles","root","p","props","v","variables","iconOnly","primary","vertical","colors","colorScheme","display","minHeight","margin","padding","color","backgroundColor","listStyleType","justifyContent","alignItems","flexDirection","verticalBackgroundColor","width","border","borderWidth","primaryBorderColor","borderColor","borderRadius"],"mappings":";;;;;;;AAGA;;AACA;;AAEA,IAAMA,wBAA2G,GAAG;AAClHC,EAAAA,IAAI,EAAE,oBAA+C;AAAA,QAArCC,CAAqC,QAA5CC,KAA4C;AAAA,QAAvBC,CAAuB,QAAlCC,SAAkC;AAAA,QAC3CC,QAD2C,GACXJ,CADW,CAC3CI,QAD2C;AAAA,QACjCC,OADiC,GACXL,CADW,CACjCK,OADiC;AAAA,QACxBC,QADwB,GACXN,CADW,CACxBM,QADwB;AAEnD,QAAMC,MAAM,GAAG,4BAAeL,CAAC,CAACM,WAAjB,EAA8B,IAA9B,EAAoCH,OAApC,CAAf;AAEA;AACEI,MAAAA,OAAO,EAAE,MADX;AAEEC,MAAAA,SAAS,EAAE,oBAAQ,EAAR,CAFb;AAGEC,MAAAA,MAAM,EAAE,CAHV;AAIEC,MAAAA,OAAO,EAAE,CAJX;AAKEC,MAAAA,KAAK,EAAEX,CAAC,CAACW,KALX;AAMEC,MAAAA,eAAe,EAAEZ,CAAC,CAACY,eAAF,IAAqB,SANxC;AAOEC,MAAAA,aAAa,EAAE,MAPjB;AAQEC,MAAAA,cAAc,EAAE;AARlB,OAUMZ,QAAQ,IAAI;AAAEa,MAAAA,UAAU,EAAE;AAAd,KAVlB,MAYMX,QAAQ;AACVY,MAAAA,aAAa,EAAE,QADL;AAEVJ,MAAAA,eAAe,EAAEZ,CAAC,CAACiB,uBAFT;AAGVC,MAAAA,KAAK,EAAE,aAHG;AAIVR,MAAAA,OAAO,YAAK,oBAAQ,CAAR,CAAL;AAJG,OAKNR,QAAQ,IAAI;AACdK,MAAAA,OAAO,EAAE,cADK;AAEdW,MAAAA,KAAK,EAAE;AAFO,KALN,CAZd,MAuBM,CAAChB,QAAD,IACF,CAACE,QADC,IACW;AACX;AACAe,MAAAA,MAAM,YAAKnB,CAAC,CAACoB,WAAP,oBAA4BjB,OAAO,GAAGH,CAAC,CAACqB,kBAAL,GAA0BrB,CAAC,CAACsB,WAAF,IAAiBjB,MAAM,CAACc,MAArF,CAFK;AAGXI,MAAAA,YAAY,EAAE,oBAAQ,CAAR;AAHH,KAxBjB;AA8BD;AAnCiH,CAApH;eAsCe3B,wB","sourcesContent":["import { CarouselNavigationProps } from '../../../../components/Carousel/CarouselNavigation';\nimport { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { CarouselNavigationVariables } from './carouselNavigationVariables';\nimport { pxToRem } from '../../../../utils';\nimport { getColorScheme } from '../../colors';\n\nconst carouselNavigationStyles: ComponentSlotStylesPrepared<CarouselNavigationProps, CarouselNavigationVariables> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => {\n    const { iconOnly, primary, vertical } = p;\n    const colors = getColorScheme(v.colorScheme, null, primary);\n\n    return {\n      display: 'flex',\n      minHeight: pxToRem(24),\n      margin: 0,\n      padding: 0,\n      color: v.color,\n      backgroundColor: v.backgroundColor || 'inherit',\n      listStyleType: 'none',\n      justifyContent: 'center',\n\n      ...(iconOnly && { alignItems: 'center' }),\n\n      ...(vertical && {\n        flexDirection: 'column',\n        backgroundColor: v.verticalBackgroundColor,\n        width: 'fit-content',\n        padding: `${pxToRem(8)} 0`,\n        ...(iconOnly && {\n          display: 'inline-block',\n          width: 'auto',\n        }),\n      }),\n\n      ...(!iconOnly &&\n        !vertical && {\n          // primary has hardcoded grey border color\n          border: `${v.borderWidth} solid ${primary ? v.primaryBorderColor : v.borderColor || colors.border}`,\n          borderRadius: pxToRem(4),\n        }),\n    };\n  },\n};\n\nexport default carouselNavigationStyles;\n"],"file":"carouselNavigationStyles.js"}