{"version":3,"sources":["themes/teams/components/Tooltip/tooltipContentStyles.ts"],"names":["tooltipContentStyles","root","p","props","v","variables","display","position","maxWidth","zIndex","pointing","placement","basePlacement","margin","pointerMargin","open","opacity","pointer","rtl","width","pointerWidth","height","pointerHeight","backgroundColor","borderSize","borderColor","gap","pointerGap","svg","content","padding","textAlign","color","background","borderRadius","boxShadow"],"mappings":";;;;;;;;;AAGA;;AACA;;AAEA,IAAMA,oBAAqG,GAAG;AAC5GC,EAAAA,IAAI,EAAE;AAAA,QAAUC,CAAV,QAAGC,KAAH;AAAA,QAAwBC,CAAxB,QAAaC,SAAb;AAAA;AACJC,MAAAA,OAAO,EAAE,OADL;AAEJC,MAAAA,QAAQ,EAAE,UAFN;AAIJC,MAAAA,QAAQ,EAAEJ,CAAC,CAACI,QAJR;AAKJC,MAAAA,MAAM,EAAEL,CAAC,CAACK;AALN,OAOAP,CAAC,CAACQ,QAAF,IACF,0CAAmB;AACjBC,MAAAA,SAAS,EAAET,CAAC,CAACU,aADI;AAEjBC,MAAAA,MAAM,EAAET,CAAC,CAACU;AAFO,KAAnB,CARE,MAaA,CAACZ,CAAC,CAACa,IAAH,IAAW;AACbC,MAAAA,OAAO,EAAE;AADI,KAbX;AAAA,GADsG;AAkB5GC,EAAAA,OAAO,EAAE;AAAA,QAAUf,CAAV,SAAGC,KAAH;AAAA,QAAwBC,CAAxB,SAAaC,SAAb;AAAA,QAA2Ba,GAA3B,SAA2BA,GAA3B;AAAA;AACPZ,MAAAA,OAAO,EAAE,OADF;AAEPC,MAAAA,QAAQ,EAAE,UAFH;AAGPY,MAAAA,KAAK,EAAEf,CAAC,CAACgB,YAHF;AAIPC,MAAAA,MAAM,EAAEjB,CAAC,CAACkB;AAJH,OAMJ,wCAAiB;AAClBC,MAAAA,eAAe,EAAEnB,CAAC,CAACmB,eADD;AAElBC,MAAAA,UAAU,EAAEpB,CAAC,CAACoB,UAFI;AAGlBC,MAAAA,WAAW,EAAE,aAHK;AAIlBC,MAAAA,GAAG,EAAEtB,CAAC,CAACuB,UAJW;AAKlBN,MAAAA,MAAM,EAAEjB,CAAC,CAACkB,aALQ;AAMlBH,MAAAA,KAAK,EAAEf,CAAC,CAACgB,YANS;AAQlBT,MAAAA,SAAS,EAAET,CAAC,CAACU,aARK;AASlBM,MAAAA,GAAG,EAAHA,GATkB;AAUlBU,MAAAA,GAAG,EAAE,4BAAWxB,CAAC,CAACmB,eAAb;AAVa,KAAjB,CANI;AAAA,GAlBmG;AAqC5GM,EAAAA,OAAO,EAAE;AAAA,QAAczB,CAAd,SAAGC,SAAH;AAAA,WAAsC;AAC7CC,MAAAA,OAAO,EAAE,OADoC;AAE7CwB,MAAAA,OAAO,EAAE1B,CAAC,CAAC0B,OAFkC;AAG7CC,MAAAA,SAAS,EAAE,MAHkC;AAK7CC,MAAAA,KAAK,EAAE5B,CAAC,CAAC4B,KALoC;AAM7CC,MAAAA,UAAU,EAAE7B,CAAC,CAACmB,eAN+B;AAO7CW,MAAAA,YAAY,EAAE9B,CAAC,CAAC8B,YAP6B;AAQ7CC,MAAAA,SAAS,EAAE/B,CAAC,CAAC+B;AARgC,KAAtC;AAAA;AArCmG,CAA9G;eAiDenC,oB","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { TooltipContentStylesProps } from '../../../../components/Tooltip/TooltipContent';\nimport { TooltipContentVariables } from './tooltipContentVariables';\nimport { getContainerStyles, getPointerStyles } from '../../getPointerStyles';\nimport pointerSvg from '../../pointerSvgUrl';\n\nconst tooltipContentStyles: ComponentSlotStylesPrepared<TooltipContentStylesProps, TooltipContentVariables> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    display: 'block',\n    position: 'absolute',\n\n    maxWidth: v.maxWidth,\n    zIndex: v.zIndex,\n\n    ...(p.pointing &&\n      getContainerStyles({\n        placement: p.basePlacement,\n        margin: v.pointerMargin,\n      })),\n\n    ...(!p.open && {\n      opacity: 0,\n    }),\n  }),\n  pointer: ({ props: p, variables: v, rtl }): ICSSInJSStyle => ({\n    display: 'block',\n    position: 'absolute',\n    width: v.pointerWidth,\n    height: v.pointerHeight,\n\n    ...getPointerStyles({\n      backgroundColor: v.backgroundColor,\n      borderSize: v.borderSize,\n      borderColor: 'transparent',\n      gap: v.pointerGap,\n      height: v.pointerHeight,\n      width: v.pointerWidth,\n\n      placement: p.basePlacement,\n      rtl,\n      svg: pointerSvg(v.backgroundColor),\n    }),\n  }),\n  content: ({ variables: v }): ICSSInJSStyle => ({\n    display: 'block',\n    padding: v.padding,\n    textAlign: 'left',\n\n    color: v.color,\n    background: v.backgroundColor,\n    borderRadius: v.borderRadius,\n    boxShadow: v.boxShadow,\n  }),\n};\n\nexport default tooltipContentStyles;\n"],"file":"tooltipContentStyles.js"}