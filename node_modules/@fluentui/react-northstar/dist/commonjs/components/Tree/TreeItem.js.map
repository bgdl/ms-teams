{"version":3,"sources":["components/Tree/TreeItem.tsx"],"names":["TreeItem","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibility","children","className","contentRef","design","title","renderItemTitle","expanded","level","index","styles","variables","treeSize","hasSubtreeItem","TreeContext","onFocusParent","onSiblingsExpand","onFocusFirstChild","onTitleClick","getA11Props","actionHandlers","performClick","e","preventDefault","stopPropagation","handleTitleClick","focusParent","handleFocusParent","collapse","expand","focusFirstChild","handleFocusFirstChild","expandSiblings","handleSiblingsExpand","debugName","mapPropsToBehavior","hasSubtree","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","id","parent","handleTitleOverrides","predefinedProps","onClick","titleProps","ElementType","unhandledProps","handledProps","element","root","rtlTextContainer","getAttributes","forElements","TreeTitle","create","defaultProps","slotClassNames","as","render","overrideProps","elementWithRef","subtree","propTypes","commonPropTypes","createCommon","content","customPropTypes","ref","PropTypes","string","isRequired","number","items","collectionShorthand","func","bool","itemShorthand","treeItemBehavior","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, treeItemBehavior, TreeItemBehaviorProps } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport { Ref } from '@fluentui/react-component-ref';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  WithAsProp,\n  ShorthandRenderFunction,\n  ShorthandValue,\n  withSafeTypeForAs,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport TreeTitle, { TreeTitleProps } from './TreeTitle';\nimport { hasSubtree, TreeContext } from './utils';\n\nexport interface TreeItemSlotClassNames {\n  title: string;\n  subtree: string;\n}\n\nexport interface TreeItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeItemBehaviorProps>;\n\n  /** Ref for the item DOM element. */\n  contentRef?: React.Ref<HTMLElement>;\n\n  /** Id needed to identify this item inside the Tree. */\n  id: string;\n\n  /** The index of the item among its siblings. Count starts at 1. */\n  index?: number;\n\n  /** Array of props for sub tree. */\n  items?: ShorthandCollection<TreeItemProps>;\n\n  /** Level of the tree/subtree that contains this item. */\n  level?: number;\n\n  /** Called when the item's first child is about to be focused. */\n  onFocusFirstChild?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's parent is about to be focused. */\n  onFocusParent?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when a tree title is clicked. */\n  onTitleClick?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's siblings are about to be expanded. */\n  onSiblingsExpand?: ComponentEventHandler<TreeItemProps>;\n\n  /** Whether or not the item is in the expanded state. Only makes sense if item has children items. */\n  expanded?: boolean;\n\n  /** The id of the parent tree item, if any. */\n  parent?: string;\n\n  /**\n   * A custom render iterator for rendering each tree title.\n   * The default component, props, and children are available for each tree title.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItemTitle?: ShorthandRenderFunction<TreeTitleProps>;\n\n  /** Size of the tree/subtree that contains this item. */\n  treeSize?: number;\n\n  /** Properties for TreeTitle. */\n  title?: ShorthandValue<TreeTitleProps>;\n}\n\nexport type TreeItemStylesProps = Required<Pick<TreeItemProps, 'level'>>;\n\nconst TreeItem: React.FC<WithAsProp<TreeItemProps>> &\n  FluentComponentStaticProps<TreeItemProps> & { slotClassNames: TreeItemSlotClassNames } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(TreeItem.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    contentRef,\n    design,\n    title,\n    renderItemTitle,\n    expanded,\n    level,\n    index,\n    styles,\n    variables,\n    treeSize,\n  } = props;\n\n  const hasSubtreeItem = hasSubtree(props);\n  const { onFocusParent, onSiblingsExpand, onFocusFirstChild, onTitleClick } = React.useContext(TreeContext);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      performClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleTitleClick(e);\n      },\n      focusParent: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusParent(e);\n      },\n      collapse: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleTitleClick(e);\n      },\n      expand: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleTitleClick(e);\n      },\n      focusFirstChild: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusFirstChild(e);\n      },\n      expandSiblings: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleSiblingsExpand(e);\n      },\n    },\n    debugName: TreeItem.className,\n    mapPropsToBehavior: () => ({\n      expanded,\n      level,\n      index,\n      hasSubtree: hasSubtreeItem,\n      treeSize,\n    }),\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<TreeItemStylesProps>(TreeItem.displayName, {\n    className: TreeItem.className,\n    mapPropsToStyles: () => ({\n      level,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const handleTitleClick = e => {\n    onTitleClick(e, props);\n    _.invoke(props, 'onTitleClick', e, props);\n  };\n  const handleFocusFirstChild = e => {\n    _.invoke(props, 'onFocusFirstChild', e, props);\n    onFocusFirstChild(props.id);\n  };\n  const handleFocusParent = e => {\n    _.invoke(props, 'onFocusParent', e, props);\n    onFocusParent(props.parent);\n  };\n  const handleSiblingsExpand = e => {\n    _.invoke(props, 'onSiblingsExpand', e, props);\n    onSiblingsExpand(e, props);\n  };\n  const handleTitleOverrides = (predefinedProps: TreeTitleProps) => ({\n    onClick: (e, titleProps) => {\n      handleTitleClick(e);\n      _.invoke(predefinedProps, 'onClick', e, titleProps);\n    },\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TreeItem.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children)\n        ? children\n        : TreeTitle.create(title, {\n            defaultProps: () =>\n              getA11Props('title', {\n                className: TreeItem.slotClassNames.title,\n                expanded,\n                hasSubtree: hasSubtreeItem,\n                as: hasSubtreeItem ? 'span' : 'a',\n                level,\n                treeSize,\n                index,\n              }),\n            render: renderItemTitle,\n            overrideProps: handleTitleOverrides,\n          })}\n    </ElementType>\n  );\n\n  const elementWithRef = contentRef ? <Ref innerRef={contentRef}>{element}</Ref> : element;\n  setEnd();\n\n  return elementWithRef;\n};\n\nTreeItem.className = 'ui-tree__item';\nTreeItem.displayName = 'TreeItem';\n\nTreeItem.slotClassNames = {\n  title: `${TreeItem.className}__title`,\n  subtree: `${TreeItem.className}__subtree`,\n};\n\nTreeItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  contentRef: customPropTypes.ref,\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  level: PropTypes.number,\n  onFocusFirstChild: PropTypes.func,\n  onFocusParent: PropTypes.func,\n  onTitleClick: PropTypes.func,\n  onSiblingsExpand: PropTypes.func,\n  expanded: PropTypes.bool,\n  parent: PropTypes.string,\n  renderItemTitle: PropTypes.func,\n  treeSize: PropTypes.number,\n  title: customPropTypes.itemShorthand,\n};\nTreeItem.defaultProps = {\n  accessibility: treeItemBehavior,\n};\nTreeItem.handledProps = Object.keys(TreeItem.propTypes) as any;\n\nTreeItem.create = createShorthandFactory({\n  Component: TreeItem,\n  mappedProp: 'title',\n});\n\n/**\n * A TreeItem renders an item of a Tree.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n */\nexport default withSafeTypeForAs<typeof TreeItem, TreeItemProps, 'li'>(TreeItem);\n"],"file":"TreeItem.js"}