{"version":3,"sources":["components/Toolbar/ToolbarMenuRadioGroup.tsx"],"names":["ToolbarMenuRadioGroup","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibility","activeIndex","className","design","items","styles","variables","wrapper","parentVariables","ToolbarVariablesContext","mergedVariables","getA11yProps","debugName","rtl","mapPropsToInlineStyles","classes","resolvedStyles","handleItemOverrides","predefinedProps","onClick","e","itemProps","ElementType","unhandledProps","handledProps","content","root","item","index","ToolbarMenuItem","create","defaultProps","toolbarMenuItemRadioBehavior","as","active","overrideProps","element","Box","slotClassNames","children","toolbarMenuRadioGroupBehavior","propTypes","commonPropTypes","createCommon","PropTypes","number","customPropTypes","collectionShorthand","onItemClick","func","itemShorthand","Object","keys","Component"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  toolbarMenuRadioGroupBehavior,\n  toolbarMenuItemRadioBehavior,\n  ToolbarMenuRadioGroupBehaviorProps,\n} from '@fluentui/accessibility';\nimport { mergeComponentVariables } from '@fluentui/styles';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  ChildrenComponentProps,\n  ContentComponentProps,\n  createShorthandFactory,\n  UIComponentProps,\n  commonPropTypes,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n  ShorthandCollection,\n  ShorthandValue,\n  WithAsProp,\n  withSafeTypeForAs,\n} from '../../types';\nimport ToolbarMenuItem, { ToolbarMenuItemProps } from './ToolbarMenuItem';\nimport Box, { BoxProps } from '../Box/Box';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\n\nexport interface ToolbarMenuRadioGroupProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarMenuRadioGroupBehaviorProps>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number;\n\n  /** Shorthand array of props for ToolbarMenuRadioGroup. */\n  items?: ShorthandCollection<ToolbarMenuItemProps>;\n\n  /**\n   * Called on item click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<BoxProps>;\n}\n\nexport type ToolbarMenuRadioGroupStylesProps = never;\n\nexport interface ToolbarMenuRadioGroupSlotClassNames {\n  wrapper: string;\n}\n\nconst ToolbarMenuRadioGroup: React.FC<WithAsProp<ToolbarMenuRadioGroupProps>> &\n  FluentComponentStaticProps<ToolbarMenuRadioGroupProps> & {\n    slotClassNames: ToolbarMenuRadioGroupSlotClassNames;\n  } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(ToolbarMenuRadioGroup.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, activeIndex, className, design, items, styles, variables, wrapper } = props;\n\n  const parentVariables = React.useContext(ToolbarVariablesContext);\n  const mergedVariables = mergeComponentVariables(parentVariables, variables);\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: ToolbarMenuRadioGroup.displayName,\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ToolbarMenuRadioGroupStylesProps>(\n    ToolbarMenuRadioGroup.displayName,\n    {\n      className: ToolbarMenuRadioGroup.className,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergedVariables,\n      }),\n      rtl: context.rtl,\n    },\n  );\n\n  const handleItemOverrides = (predefinedProps: ToolbarMenuItemProps): ToolbarMenuItemProps => ({\n    onClick: (e, itemProps) => {\n      _.invoke(predefinedProps, 'onClick', e, itemProps);\n      _.invoke(props, 'onItemClick', e, itemProps);\n    },\n    wrapper: null,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ToolbarMenuRadioGroup.handledProps, props);\n\n  const content = (\n    <ElementType {...getA11yProps('root', { ...unhandledProps, className: classes.root })}>\n      <ToolbarVariablesProvider value={mergedVariables}>\n        {_.map(items, (item, index) =>\n          ToolbarMenuItem.create(item, {\n            defaultProps: () => ({\n              accessibility: toolbarMenuItemRadioBehavior,\n              as: 'li',\n              active: activeIndex === index,\n              index,\n            }),\n            overrideProps: handleItemOverrides,\n          }),\n        )}\n      </ToolbarVariablesProvider>\n    </ElementType>\n  );\n  const element = Box.create(wrapper, {\n    defaultProps: () =>\n      getA11yProps('wrapper', {\n        as: 'li',\n        className: ToolbarMenuRadioGroup.slotClassNames.wrapper,\n        styles: resolvedStyles.wrapper,\n      }),\n    overrideProps: {\n      children: content,\n    },\n  });\n  setEnd();\n\n  return element;\n};\n\nToolbarMenuRadioGroup.className = 'ui-toolbars'; // FIXME: required by getComponentInfo/isConformant. But this is group inside a toolbar not a group of toolbars\nToolbarMenuRadioGroup.displayName = 'ToolbarMenuRadioGroup';\nToolbarMenuRadioGroup.slotClassNames = {\n  wrapper: `${ToolbarMenuRadioGroup.className}__wrapper`,\n};\n\nToolbarMenuRadioGroup.defaultProps = {\n  as: 'ul',\n  accessibility: toolbarMenuRadioGroupBehavior,\n  wrapper: {},\n};\nToolbarMenuRadioGroup.propTypes = {\n  ...commonPropTypes.createCommon(),\n  activeIndex: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  onItemClick: PropTypes.func,\n  wrapper: customPropTypes.itemShorthand,\n};\nToolbarMenuRadioGroup.handledProps = Object.keys(ToolbarMenuRadioGroup.propTypes) as any;\n\nToolbarMenuRadioGroup.create = createShorthandFactory({\n  Component: ToolbarMenuRadioGroup,\n});\n\n/**\n * A ToolbarMenuRadioGroup renders ToolbarMenuItem as a group of mutually exclusive options.\n */\nexport default withSafeTypeForAs<typeof ToolbarMenuRadioGroup, ToolbarMenuRadioGroupProps, 'ul'>(ToolbarMenuRadioGroup);\n"],"file":"ToolbarMenuRadioGroup.js"}