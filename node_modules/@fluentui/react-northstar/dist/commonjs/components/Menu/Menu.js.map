{"version":3,"sources":["components/Menu/Menu.tsx"],"names":["Menu","e","activeIndex","props","setState","variables","predefinedProps","onClick","itemProps","index","setActiveIndex","onActiveChanged","active","state","styles","accessibility","iconOnly","items","pills","pointing","primary","secondary","underlined","vertical","submenu","indicator","itemsCount","item","length","itemPosition","overrideItemProps","handleItemOverrides","overrideDividerProps","handleDividerOverrides","parseInt","kind","MenuDivider","create","defaultProps","className","slotClassNames","divider","inSubmenu","childBehaviors","undefined","overrideProps","MenuItem","ElementType","classes","unhandledProps","children","attributes","root","rtlTextContainer","getAttributes","forElements","renderItems","AutoControlledComponent","commonPropTypes","createCommon","content","PropTypes","oneOfType","number","string","defaultActiveIndex","fluid","bool","customPropTypes","collectionShorthandWithKindProp","onItemClick","func","onActiveIndexChange","oneOf","every","disallow","shorthandAllowingChildren","as","menuBehavior","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import { Accessibility, menuBehavior } from '@fluentui/accessibility';\nimport { ReactAccessibilityBehavior } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { ComponentVariablesObject, ComponentSlotStylesPrepared, mergeComponentVariables } from '@fluentui/styles';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  AutoControlledComponent,\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  getKindProp,\n  rtlTextContainer,\n  ShorthandFactory,\n} from '../../utils';\n\nimport MenuItem, { MenuItemProps } from './MenuItem';\nimport { WithAsProp, ShorthandCollection, ShorthandValue, withSafeTypeForAs, ComponentEventHandler } from '../../types';\nimport MenuDivider from './MenuDivider';\nimport { BoxProps } from '../Box/Box';\n\nexport type MenuShorthandKinds = 'divider' | 'item';\n\nexport interface MenuSlotClassNames {\n  divider: string;\n  item: string;\n}\n\nexport interface MenuProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available menuAsToolbarBehavior, tabListBehavior, tabBehavior\n   */\n  accessibility?: Accessibility;\n\n  /** Index of the currently active item. */\n  activeIndex?: number | string;\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex?: number | string;\n\n  /** A vertical menu may take the size of its container. */\n  fluid?: boolean;\n\n  /** A menu may have just icons. */\n  iconOnly?: boolean;\n\n  /** Shorthand array of props for Menu. */\n  items?: ShorthandCollection<MenuItemProps, MenuShorthandKinds>;\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Called when the active index of the Menu changes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `activeIndex` reflecting the new state.\n   */\n  onActiveIndexChange?: ComponentEventHandler<MenuProps>;\n\n  /** A menu can adjust its appearance to de-emphasize its contents. */\n  pills?: boolean;\n\n  /**\n   * A menu can point to show its relationship to nearby content.\n   * For vertical menu, it can point to the start of the item or to the end.\n   */\n  pointing?: boolean | 'start' | 'end';\n\n  /** The menu can have primary type. */\n  primary?: boolean;\n\n  /** The menu can have secondary type. */\n  secondary?: boolean;\n\n  /** Menu items can by highlighted using underline. */\n  underlined?: boolean;\n\n  /** A vertical menu displays elements vertically. */\n  vertical?: boolean;\n\n  /** Indicates whether the menu is submenu. */\n  submenu?: boolean;\n\n  /** Shorthand for the submenu indicator. */\n  indicator?: ShorthandValue<BoxProps>;\n}\n\nexport interface MenuState {\n  activeIndex?: number | string;\n}\n\nclass Menu extends AutoControlledComponent<WithAsProp<MenuProps>, MenuState> {\n  static displayName = 'Menu';\n\n  static className = 'ui-menu';\n\n  static slotClassNames: MenuSlotClassNames = {\n    divider: `${Menu.className}__divider`,\n    item: `${Menu.className}__item`,\n  };\n\n  static create: ShorthandFactory<MenuProps>;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      content: false,\n    }),\n    activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    defaultActiveIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    fluid: PropTypes.bool,\n    iconOnly: PropTypes.bool,\n    items: customPropTypes.collectionShorthandWithKindProp(['divider', 'item']),\n    onItemClick: PropTypes.func,\n    onActiveIndexChange: PropTypes.func,\n    pills: PropTypes.bool,\n    pointing: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['start', 'end'])]),\n    primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n    secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n    underlined: PropTypes.bool,\n    vertical: PropTypes.bool,\n    submenu: PropTypes.bool,\n    indicator: customPropTypes.shorthandAllowingChildren,\n  };\n\n  static defaultProps = {\n    as: 'ul',\n    accessibility: menuBehavior as Accessibility,\n  };\n\n  static autoControlledProps = ['activeIndex'];\n\n  static Item = MenuItem;\n  static Divider = MenuDivider;\n\n  setActiveIndex = (e: React.SyntheticEvent, activeIndex: number) => {\n    _.invoke(this.props, 'onActiveIndexChange', e, { ...this.props, activeIndex });\n    this.setState({ activeIndex });\n  };\n\n  handleItemOverrides = variables => predefinedProps => ({\n    onClick: (e, itemProps) => {\n      const { index } = itemProps;\n\n      this.setActiveIndex(e, index);\n\n      _.invoke(this.props, 'onItemClick', e, itemProps);\n      _.invoke(predefinedProps, 'onClick', e, itemProps);\n    },\n    onActiveChanged: (e, props) => {\n      const { index, active } = props;\n      if (active) {\n        this.setActiveIndex(e, index);\n      } else if (this.state.activeIndex === index) {\n        this.setActiveIndex(e, null);\n      }\n      _.invoke(predefinedProps, 'onActiveChanged', e, props);\n    },\n    variables: mergeComponentVariables(variables, predefinedProps.variables),\n  });\n\n  handleDividerOverrides = variables => predefinedProps => ({\n    variables: mergeComponentVariables(variables, predefinedProps.variables),\n  });\n\n  renderItems = (\n    styles: ComponentSlotStylesPrepared,\n    variables: ComponentVariablesObject,\n    accessibility: ReactAccessibilityBehavior,\n  ) => {\n    const {\n      iconOnly,\n      items,\n      pills,\n      pointing,\n      primary,\n      secondary,\n      underlined,\n      vertical,\n      submenu,\n      indicator,\n    } = this.props;\n    const { activeIndex } = this.state;\n    const itemsCount = _.filter(items, item => getKindProp(item, 'item') !== 'divider').length;\n    let itemPosition = 0;\n\n    const overrideItemProps = this.handleItemOverrides(variables);\n    const overrideDividerProps = this.handleDividerOverrides(variables);\n\n    return _.map(items, (item, index) => {\n      const active = (typeof activeIndex === 'string' ? parseInt(activeIndex, 10) : activeIndex) === index;\n      const kind = getKindProp(item, 'item');\n\n      if (kind === 'divider') {\n        return MenuDivider.create(item, {\n          defaultProps: () => ({\n            className: Menu.slotClassNames.divider,\n            primary,\n            secondary,\n            vertical,\n            styles: styles.divider,\n            inSubmenu: submenu,\n            accessibility: accessibility.childBehaviors ? accessibility.childBehaviors.divider : undefined,\n          }),\n          overrideProps: overrideDividerProps,\n        });\n      }\n\n      itemPosition++;\n\n      return MenuItem.create(item, {\n        defaultProps: () => ({\n          className: Menu.slotClassNames.item,\n          iconOnly,\n          pills,\n          pointing,\n          primary,\n          secondary,\n          underlined,\n          vertical,\n          index,\n          itemPosition,\n          itemsCount,\n          active,\n          inSubmenu: submenu,\n          indicator,\n          accessibility: accessibility.childBehaviors ? accessibility.childBehaviors.item : undefined,\n        }),\n        overrideProps: overrideItemProps,\n      });\n    });\n  };\n\n  renderComponent({ ElementType, classes, accessibility, styles, variables, unhandledProps }) {\n    const { children } = this.props;\n    return (\n      <ElementType\n        {...accessibility.attributes.root}\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...unhandledProps}\n        className={classes.root}\n      >\n        {childrenExist(children) ? children : this.renderItems(styles, variables, accessibility)}\n      </ElementType>\n    );\n  }\n}\n\nMenu.create = createShorthandFactory({ Component: Menu, mappedArrayProp: 'items' });\n\n/**\n * A Menu is a component that offers a grouped list of choices to the user.\n *\n * @accessibility\n * Implements ARIA [Menu](https://www.w3.org/TR/wai-aria-practices-1.1/#menu), [Toolbar](https://www.w3.org/TR/wai-aria-practices-1.1/#toolbar) or [Tabs](https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel) design pattern, depending on the behavior used.\n * @accessibilityIssues\n * [JAWS - navigation instruction for menubar](https://github.com/FreedomScientific/VFO-standards-support/issues/203)\n * [JAWS - navigation instruction for menu with aria-orientation=\"horizontal\"](https://github.com/FreedomScientific/VFO-standards-support/issues/204)\n * [JAWS [VC] doesn't narrate menu item, when it is open from menu button](https://github.com/FreedomScientific/VFO-standards-support/issues/324)\n * [JAWS [app mode] focus moves to second menu item, when it is open from menu button](https://github.com/FreedomScientific/VFO-standards-support/issues/325)\n * [Enter into a tablist JAWS narrates: To switch pages, press Control+PageDown](https://github.com/FreedomScientific/VFO-standards-support/issues/337)\n * 51114083 VoiceOver+Web narrate wrong position in menu / total count of menu items, when pseudo element ::after or ::before is used\n */\nexport default withSafeTypeForAs<typeof Menu, MenuProps, 'ul'>(Menu);\n"],"file":"Menu.js"}