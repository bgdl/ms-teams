{"version":3,"sources":["components/MenuButton/MenuButton.tsx"],"names":["MenuButton","React","createRef","closeMenu","e","openAndFocusFirst","openAndFocus","openAndFocusLast","open","callback","props","setState","predefinedProps","onItemClick","itemProps","menu","handleOpenChange","which","preventDefault","menuRef","current","ElementType","classes","unhandledProps","accessibility","styles","contextMenu","accessibilityProp","align","className","defaultOpen","flipBoundary","mountNode","mouseLeaveDelay","offset","on","onOpenChange","overflowBoundary","pointing","position","positionFixed","tabbableTrigger","stylesProp","target","trigger","unstable_pinned","variables","popupProps","content","Menu","create","defaultProps","attributes","vertical","overrideProps","handleMenuOverrides","state","popupContent","children","undefined","trapFocus","inline","autoFocus","popup","Popup","root","keyHandlers","triggerRef","menuId","triggerId","AutoControlledComponent","commonPropTypes","createCommon","as","PropTypes","oneOf","ALIGNMENTS","bool","customPropTypes","domNode","number","string","oneOfType","arrayOf","object","onMenuItemClick","func","POSITIONS","any","every","disallow","itemShorthandWithoutJSX","menuButtonBehavior","Component","mappedProp"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport { Accessibility, menuButtonBehavior } from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\n\nimport {\n  AutoControlledComponent,\n  RenderResultConfig,\n  applyAccessibilityKeyHandlers,\n  getOrGenerateIdFromShorthand,\n  commonPropTypes,\n  StyledComponentProps,\n} from '../../utils';\nimport { ShorthandValue, ComponentEventHandler, ShorthandCollection } from '../../types';\n\nimport { createShorthandFactory, ShorthandFactory } from '../../utils/factories';\nimport Popup, { PopupProps, PopupEvents, PopupEventsArray } from '../Popup/Popup';\nimport Menu, { MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { focusMenuItem } from './focusUtils';\nimport { ALIGNMENTS, POSITIONS, PositioningProps } from '../../utils/positioner';\n\nexport interface MenuButtonSlotClassNames {\n  menu: string;\n}\n\nexport interface MenuButtonProps extends StyledComponentProps<MenuButtonProps>, PositioningProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @default menuButtonBehavior\n   */\n  accessibility?: Accessibility;\n\n  /** Additional CSS class name(s) to apply.  */\n  className?: string;\n\n  /** Initial value for 'open'. */\n  defaultOpen?: boolean;\n\n  /** Existing element the popup should be bound to. */\n  mountNode?: HTMLElement;\n\n  /** Delay in ms for the mouse leave event, before the popup will be closed. */\n  mouseLeaveDelay?: number;\n\n  /** Events triggering the popup. */\n  on?: PopupEvents | PopupEventsArray;\n\n  /** Defines whether popup is displayed. */\n  open?: boolean;\n\n  /**\n   * Called after user's click on a menu item.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMenuItemClick?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Event for request to change 'open' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onOpenChange?: ComponentEventHandler<PopupProps>;\n\n  /** A popup can show a pointer to trigger. */\n  pointing?: boolean;\n\n  /**\n   * DOM element that should be used as popup's target - instead of 'trigger' element that is used by default.\n   */\n  target?: HTMLElement;\n\n  /** Element to be rendered in-place where the popup is defined. */\n  trigger?: JSX.Element;\n\n  /** Whether the trigger should be tabbable */\n  tabbableTrigger?: boolean;\n\n  /** Shorthand for menu configuration */\n  menu?: ShorthandValue<MenuProps> | ShorthandCollection<MenuItemProps>;\n\n  /** Determines if the MenuButton behaves as context menu */\n  contextMenu?: boolean;\n}\n\nexport interface MenuButtonState {\n  open: boolean;\n  menuId: string;\n  triggerId: string;\n}\n\n/**\n * A MenuButton displays a menu connected to trigger element.\n * @accessibility\n */\nexport default class MenuButton extends AutoControlledComponent<MenuButtonProps, MenuButtonState> {\n  static displayName = 'MenuButton';\n\n  static className = 'ui-menubutton';\n\n  static create: ShorthandFactory<MenuButtonProps>;\n\n  static slotClassNames: MenuButtonSlotClassNames = {\n    menu: `${MenuButton.className}__menu`,\n  };\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      as: true,\n      content: false,\n    }),\n    align: PropTypes.oneOf(ALIGNMENTS),\n    defaultOpen: PropTypes.bool,\n    mountNode: customPropTypes.domNode,\n    mouseLeaveDelay: PropTypes.number,\n    offset: PropTypes.string,\n    on: PropTypes.oneOfType([\n      PropTypes.oneOf(['hover', 'click', 'focus', 'context']),\n      PropTypes.arrayOf(PropTypes.oneOf(['click', 'focus', 'context'])),\n      PropTypes.arrayOf(PropTypes.oneOf(['hover', 'focus', 'context'])),\n    ]),\n    flipBoundary: PropTypes.oneOfType([\n      PropTypes.object as PropTypes.Requireable<Element>,\n      PropTypes.oneOf<'scrollParent' | 'window' | 'viewport'>(['scrollParent', 'window', 'viewport']),\n    ]),\n    overflowBoundary: PropTypes.oneOfType([\n      PropTypes.object as PropTypes.Requireable<Element>,\n      PropTypes.oneOf<'scrollParent' | 'window' | 'viewport'>(['scrollParent', 'window', 'viewport']),\n    ]),\n    open: PropTypes.bool,\n    onMenuItemClick: PropTypes.func,\n    onOpenChange: PropTypes.func,\n    position: PropTypes.oneOf(POSITIONS),\n    positionFixed: PropTypes.bool,\n    target: PropTypes.any,\n    trigger: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.any]),\n    tabbableTrigger: PropTypes.bool,\n    unstable_pinned: PropTypes.bool,\n    menu: PropTypes.oneOfType([\n      customPropTypes.itemShorthandWithoutJSX,\n      PropTypes.arrayOf(customPropTypes.itemShorthandWithoutJSX),\n    ]),\n    contextMenu: PropTypes.bool,\n  };\n\n  static defaultProps: MenuButtonProps = {\n    accessibility: menuButtonBehavior,\n    align: 'start',\n    position: 'below',\n  };\n\n  static autoControlledProps = ['open'];\n\n  static getAutoControlledStateFromProps(props: MenuButtonProps, state: MenuButtonState): Partial<MenuButtonState> {\n    return {\n      menuId: getOrGenerateIdFromShorthand('menubutton-menu-', props.menu, state.menuId),\n      triggerId: getOrGenerateIdFromShorthand('menubutton-trigger-', props.trigger, state.triggerId),\n    };\n  }\n\n  triggerRef = React.createRef<HTMLElement>();\n  menuRef = React.createRef<HTMLElement>();\n\n  actionHandlers = {\n    closeMenu: e => this.closeMenu(e),\n    openAndFocusFirst: e => this.openAndFocus(e, 'first'),\n    openAndFocusLast: e => this.openAndFocus(e, 'last'),\n  };\n\n  closeMenu(e: React.KeyboardEvent) {\n    this.handleOpenChange(e, false);\n  }\n\n  openAndFocus(e: React.KeyboardEvent, which: 'first' | 'last') {\n    e.preventDefault();\n    this.handleOpenChange(e, true, () => focusMenuItem(this.menuRef.current, which));\n  }\n\n  handleOpenChange = (e: React.SyntheticEvent, open: boolean, callback?: () => void) => {\n    _.invoke(this.props, 'onOpenChange', e, { ...this.props, open });\n    this.setState({ open }, callback);\n  };\n\n  handleMenuOverrides = (predefinedProps?: MenuProps) => ({\n    onItemClick: (e: React.SyntheticEvent, itemProps: MenuItemProps) => {\n      _.invoke(predefinedProps, 'onItemClick', e, itemProps);\n      _.invoke(this.props, 'onMenuItemClick', e, itemProps);\n      if (!itemProps || !itemProps.menu) {\n        // do not close if clicked on item with submenu\n        this.handleOpenChange(e, false);\n      }\n    },\n  });\n\n  renderComponent({\n    ElementType,\n    classes,\n    unhandledProps,\n    accessibility,\n    styles,\n  }: RenderResultConfig<MenuButtonProps>): React.ReactNode {\n    const {\n      // MenuButton props:\n      contextMenu,\n      menu,\n      // Popup props:\n      accessibility: accessibilityProp,\n      align,\n      className,\n      defaultOpen,\n      flipBoundary,\n      mountNode,\n      mouseLeaveDelay,\n      offset,\n      on,\n      onOpenChange,\n      open,\n      overflowBoundary,\n      pointing,\n      position,\n      positionFixed,\n      tabbableTrigger,\n      styles: stylesProp,\n      target,\n      trigger,\n      unstable_pinned,\n      variables,\n    } = this.props;\n\n    const popupProps = {\n      accessibility: accessibilityProp,\n      align,\n      className,\n      defaultOpen,\n      mountNode,\n      mouseLeaveDelay,\n      flipBoundary,\n      offset,\n      on,\n      onOpenChange,\n      open,\n      overflowBoundary,\n      pointing,\n      position,\n      positionFixed,\n      tabbableTrigger,\n      styles: stylesProp,\n      target,\n      trigger,\n      unstable_pinned,\n      variables,\n    };\n\n    const content = Menu.create(menu, {\n      defaultProps: () => ({\n        ...accessibility.attributes.menu,\n        vertical: true,\n      }),\n      overrideProps: this.handleMenuOverrides,\n    });\n\n    const overrideProps: PopupProps = {\n      accessibility: () => accessibility,\n      open: this.state.open,\n      onOpenChange: (e, { open }) => {\n        this.handleOpenChange(e, open);\n      },\n      content: {\n        styles: styles.popupContent,\n        content: content && <Ref innerRef={this.menuRef}>{content}</Ref>,\n      },\n      children: undefined, // force-reset `children` defined for `Popup` as it collides with the `trigger\n      ...(contextMenu\n        ? {\n            on: 'context',\n            trapFocus: true,\n            tabbableTrigger: false,\n          }\n        : {\n            inline: true,\n            autoFocus: true,\n          }),\n    };\n\n    const popup = Popup.create(popupProps, { overrideProps });\n\n    if (contextMenu) {\n      return popup;\n    }\n\n    return (\n      <ElementType\n        className={classes.root}\n        {...accessibility.attributes.root}\n        {...unhandledProps}\n        {...applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)}\n      >\n        <Ref innerRef={this.triggerRef}>{popup}</Ref>\n      </ElementType>\n    );\n  }\n}\n\nMenuButton.create = createShorthandFactory({ Component: MenuButton, mappedProp: 'menu' });\n"],"file":"MenuButton.js"}