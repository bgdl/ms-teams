{"version":3,"sources":["components/Reaction/Reaction.tsx"],"names":["Reaction","accessibility","ElementType","classes","styles","unhandledProps","props","children","icon","content","rtlTextContainer","getAttributes","forElements","attributes","root","Box","create","defaultProps","className","slotClassNames","UIComponent","commonPropTypes","createCommon","customPropTypes","shorthandAllowingChildren","as","ReactionGroup","Component","mappedProp"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAaA;;AACA;;AACA;;IAoBMA,Q;;;;;;;;;;;;0CAsB6E;AAAA,UAA/DC,aAA+D,QAA/DA,aAA+D;AAAA,UAAhDC,WAAgD,QAAhDA,WAAgD;AAAA,UAAnCC,OAAmC,QAAnCA,OAAmC;AAAA,UAA1BC,MAA0B,QAA1BA,MAA0B;AAAA,UAAlBC,cAAkB,QAAlBA,cAAkB;AAAA,wBAC3C,KAAKC,KADsC;AAAA,UACvEC,QADuE,eACvEA,QADuE;AAAA,UAC7DC,IAD6D,eAC7DA,IAD6D;AAAA,UACvDC,OADuD,eACvDA,OADuD;AAG/E,aACE,oBAAC,WAAD,6BACMC,wBAAiBC,aAAjB,CAA+B;AAAEC,QAAAA,WAAW,EAAE,CAACL,QAAD;AAAf,OAA/B,CADN,EAEMN,aAAa,CAACY,UAAd,CAAyBC,IAF/B,EAGMT,cAHN;AAIE,QAAA,SAAS,EAAEF,OAAO,CAACW;AAJrB,UAMG,0BAAcP,QAAd,IACCA,QADD,GAGC,0CACGQ,aAAIC,MAAJ,CAAWR,IAAX,EAAiB;AAChBS,QAAAA,YAAY,EAAE;AAAA,iBAAO;AACnBC,YAAAA,SAAS,EAAElB,QAAQ,CAACmB,cAAT,CAAwBX,IADhB;AAEnBJ,YAAAA,MAAM,EAAEA,MAAM,CAACI;AAFI,WAAP;AAAA;AADE,OAAjB,CADH,EAOGO,aAAIC,MAAJ,CAAWP,OAAX,EAAoB;AACnBQ,QAAAA,YAAY,EAAE;AAAA,iBAAO;AACnBC,YAAAA,SAAS,EAAElB,QAAQ,CAACmB,cAAT,CAAwBV,OADhB;AAEnBL,YAAAA,MAAM,EAAEA,MAAM,CAACK;AAFI,WAAP;AAAA;AADK,OAApB,CAPH,CATJ,CADF;AA2BD;;;EApDoBW,kB;;8BAAjBpB,Q;8BAAAA,Q,eAGe,a;8BAHfA,Q;8BAAAA,Q,iBAOiB,U;8BAPjBA,Q,iCAUCqB,uBAAgBC,YAAhB,CAA6B;AAC9Bb,EAAAA,OAAO,EAAE;AADqB,CAA7B,C;AAGHD,EAAAA,IAAI,EAAEe,eAAe,CAACC;;8BAbpBxB,Q,kBAgBkB;AACpByB,EAAAA,EAAE,EAAE;AADgB,C;8BAhBlBzB,Q,WAoBW0B,sB;AAmCjB1B,QAAQ,CAACgB,MAAT,GAAkB,mCAAuB;AAAEW,EAAAA,SAAS,EAAE3B,QAAb;AAAuB4B,EAAAA,UAAU,EAAE;AAAnC,CAAvB,CAAlB;AACA5B,QAAQ,CAACmB,cAAT,GAA0B;AACxBX,EAAAA,IAAI,YAAKR,QAAQ,CAACkB,SAAd,WADoB;AAExBT,EAAAA,OAAO,YAAKT,QAAQ,CAACkB,SAAd;AAFiB,CAA1B;AAKA;;;;;eAIe,8BAA0DlB,QAA1D,C","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\n\nimport {\n  UIComponent,\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthandFactory,\n  ContentComponentProps,\n  ShorthandFactory,\n} from '../../utils';\nimport { Accessibility } from '@fluentui/accessibility';\n\nimport { WithAsProp, ShorthandValue, withSafeTypeForAs } from '../../types';\nimport Box, { BoxProps } from '../Box/Box';\nimport ReactionGroup from './ReactionGroup';\n\nexport interface ReactionSlotClassNames {\n  icon: string;\n  content: string;\n}\n\nexport interface ReactionProps\n  extends UIComponentProps<ReactionProps>,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility;\n\n  /** A reaction can have icon for the indicator of the reaction. */\n  icon?: ShorthandValue<BoxProps>;\n}\n\nclass Reaction extends UIComponent<WithAsProp<ReactionProps>> {\n  static create: ShorthandFactory<ReactionProps>;\n\n  static className = 'ui-reaction';\n\n  static slotClassNames: ReactionSlotClassNames;\n\n  static displayName = 'Reaction';\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      content: 'shorthand',\n    }),\n    icon: customPropTypes.shorthandAllowingChildren,\n  };\n\n  static defaultProps = {\n    as: 'span',\n  };\n\n  static Group = ReactionGroup;\n\n  renderComponent({ accessibility, ElementType, classes, styles, unhandledProps }) {\n    const { children, icon, content } = this.props;\n\n    return (\n      <ElementType\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...accessibility.attributes.root}\n        {...unhandledProps}\n        className={classes.root}\n      >\n        {childrenExist(children) ? (\n          children\n        ) : (\n          <>\n            {Box.create(icon, {\n              defaultProps: () => ({\n                className: Reaction.slotClassNames.icon,\n                styles: styles.icon,\n              }),\n            })}\n            {Box.create(content, {\n              defaultProps: () => ({\n                className: Reaction.slotClassNames.content,\n                styles: styles.content,\n              }),\n            })}\n          </>\n        )}\n      </ElementType>\n    );\n  }\n}\n\nReaction.create = createShorthandFactory({ Component: Reaction, mappedProp: 'content' });\nReaction.slotClassNames = {\n  icon: `${Reaction.className}__icon`,\n  content: `${Reaction.className}__content`,\n};\n\n/**\n * A Reaction indicates user's emotion or perception.\n * Used to display user's reaction for entity in Chat (e.g. message).\n */\nexport default withSafeTypeForAs<typeof Reaction, ReactionProps, 'span'>(Reaction);\n"],"file":"Reaction.js"}