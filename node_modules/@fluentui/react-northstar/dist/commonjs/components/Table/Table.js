"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _invoke2 = _interopRequireDefault(require("lodash/invoke"));

var _map2 = _interopRequireDefault(require("lodash/map"));

var _accessibility = require("@fluentui/accessibility");

var customPropTypes = _interopRequireWildcard(require("@fluentui/react-proptypes"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _utils = require("../../utils");

var _styles = require("@fluentui/styles");

var _TableRow = _interopRequireDefault(require("./TableRow"));

var _TableCell = _interopRequireDefault(require("./TableCell"));

var _types = require("../../types");

var handleVariablesOverrides = function handleVariablesOverrides(variables) {
  return function (predefinedProps) {
    return {
      variables: (0, _styles.mergeComponentVariables)(variables, predefinedProps.variables)
    };
  };
};

var Table =
/*#__PURE__*/
function (_UIComponent) {
  (0, _inherits2.default)(Table, _UIComponent);

  function Table() {
    (0, _classCallCheck2.default)(this, Table);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Table).apply(this, arguments));
  }

  (0, _createClass2.default)(Table, [{
    key: "renderRows",
    value: function renderRows(accessibility, variables) {
      var _this$props = this.props,
          rows = _this$props.rows,
          compact = _this$props.compact;
      return (0, _map2.default)(rows, function (row, index) {
        var props = {
          compact: compact,
          onClick: function onClick(e, props) {
            (0, _invoke2.default)(row, 'onClick', e, props);
          }
        };
        var overrideProps = handleVariablesOverrides(variables);
        return _TableRow.default.create(row, {
          defaultProps: function defaultProps() {
            return Object.assign({}, props, {
              accessibility: accessibility.childBehaviors ? accessibility.childBehaviors.row : undefined
            });
          },
          overrideProps: overrideProps
        });
      });
    }
  }, {
    key: "renderHeader",
    value: function renderHeader(accessibility, variables) {
      var _this$props2 = this.props,
          header = _this$props2.header,
          compact = _this$props2.compact;

      if (!header) {
        return null;
      }

      var headerRowProps = {
        header: true,
        compact: compact,
        className: Table.slotClassNames.header
      };
      var overrideProps = handleVariablesOverrides(variables);
      return _TableRow.default.create(header, {
        defaultProps: function defaultProps() {
          return Object.assign({}, headerRowProps, {
            accessibility: accessibility.childBehaviors ? accessibility.childBehaviors.row : undefined
          });
        },
        overrideProps: overrideProps
      });
    }
  }, {
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var accessibility = _ref.accessibility,
          ElementType = _ref.ElementType,
          classes = _ref.classes,
          variables = _ref.variables,
          unhandledProps = _ref.unhandledProps;
      var children = this.props.children;
      var hasChildren = (0, _utils.childrenExist)(children);
      return React.createElement(ElementType, (0, _extends2.default)({
        className: classes.root
      }, accessibility.attributes.root, unhandledProps, (0, _utils.applyAccessibilityKeyHandlers)(accessibility.keyHandlers.root, unhandledProps)), hasChildren && children, !hasChildren && this.renderHeader(accessibility, variables), !hasChildren && this.renderRows(accessibility, variables));
    }
  }]);
  return Table;
}(_utils.UIComponent);
/**
 * A Table is used to display data in tabular layout
 * * @accessibility
 * Implements ARIA [Data Grid](https://www.w3.org/TR/wai-aria-practices/#dataGrid) design pattern for presenting tabular information.
 * When gridcell contains actionable element, use [gridCellWithFocusableElementBehavior](/components/table/accessibility#grid-cell-with-focusable-element-behavior-ts). [More information available in aria documentation.](https://www.w3.org/TR/wai-aria-practices/#gridNav_focus)
 * Use [gridCellMultipleFocusableBehavior](/components/table/accessibility#gridCellMultipleFocusableBehavior), when gridcell contains:
 * \- editable content
 * \- multiple actionable elements
 * \- component that utilizes arrow keys in its navigation, like menu button, dropdown, radio group, slider, etc.
 * [More information available in aria documentation.](https://www.w3.org/TR/wai-aria-practices/#gridNav_inside)
 * @accessibilityIssues
 * [NVDA narrate table title(aria-label) twice](https://github.com/nvaccess/nvda/issues/10548)
 * [Accessibility DOM > Table > gridcell > when gridcell is focused, then selected state is send to reader](https://bugs.chromium.org/p/chromium/issues/detail?id=1030378)
 * [JAWS narrate grid name twice, once as table and second time as grid](https://github.com/FreedomScientific/VFO-standards-support/issues/346)
 * [JAWS doesn't narrate grid column name, when focus is on actionable element in the cell] (https://github.com/FreedomScientific/VFO-standards-support/issues/348)
 * [aria-sort is not output at child elements](https://github.com/FreedomScientific/VFO-standards-support/issues/319)
 * [VoiceOver not announcing rows correctly for a grid with presentation elements inside](https://bugs.chromium.org/p/chromium/issues/detail?id=1054424)
 * VoiceOver doesn't narrate aria-rowcount value in table or grid
 */


(0, _defineProperty2.default)(Table, "displayName", 'Table');
(0, _defineProperty2.default)(Table, "className", 'ui-table');
(0, _defineProperty2.default)(Table, "Cell", _TableCell.default);
(0, _defineProperty2.default)(Table, "Row", _TableRow.default);
(0, _defineProperty2.default)(Table, "slotClassNames", {
  header: "".concat(Table.className, "__header")
});
(0, _defineProperty2.default)(Table, "propTypes", Object.assign({}, _utils.commonPropTypes.createCommon({
  content: false
}), {
  content: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.oneOfType([PropTypes.arrayOf(customPropTypes.nodeContent), customPropTypes.nodeContent])]),
  header: customPropTypes.itemShorthand,
  rows: customPropTypes.collectionShorthand,
  compact: PropTypes.bool
}));
(0, _defineProperty2.default)(Table, "defaultProps", {
  as: 'div',
  accessibility: _accessibility.tableBehavior
});

var _default = (0, _types.withSafeTypeForAs)(Table);

exports.default = _default;
//# sourceMappingURL=Table.js.map
