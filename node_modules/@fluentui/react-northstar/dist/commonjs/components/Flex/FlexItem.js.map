{"version":3,"sources":["components/Flex/FlexItem.tsx"],"names":["applyStyles","element","styles","classes","type","React","cloneElement","className","props","root","FlexItem","context","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","align","children","design","grow","flexDirection","push","shrink","size","variables","mapPropsToStyles","mapPropsToInlineStyles","rtl","resolvedStyles","Children","only","propTypes","commonPropTypes","createCommon","accessibility","content","PropTypes","oneOfType","func","oneOf","string","bool","number","__isFlexItem"],"mappings":"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","sourcesContent":["import { ComponentSlotClasses, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport { ComponentSlotStylesPrepared, ComponentSlotStylesResolved, mergeStyles } from '@fluentui/styles';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport { commonPropTypes, UIComponentProps, ChildrenComponentProps } from '../../utils';\nimport { ProviderContextPrepared } from '../../types';\n\ntype ChildrenFunction = (params: { styles: ComponentSlotStylesPrepared; classes: string }) => React.ReactElement;\n\nexport type FlexItemChildren = React.ReactElement | ChildrenFunction;\n\nexport interface FlexItemProps extends UIComponentProps, ChildrenComponentProps<FlexItemChildren> {\n  /** Controls item's alignment. */\n  align?: 'auto' | 'start' | 'end' | 'center' | 'baseline' | 'stretch';\n\n  /** Defines size of the item. */\n  size?: 'size.half' | 'size.quarter' | 'size.small' | 'size.medium' | 'size.large' | string;\n\n  /**\n   * Item can fill remaining space of the container.\n   * If numeric value is provided, remaining space will be distributed proportionally between all the items.\n   * */\n  grow?: boolean | number;\n\n  /**\n   * Controls item's ability to shrink.\n   * */\n  shrink?: boolean | number;\n\n  /**\n   * Item can be pushed towards opposite side in the container's direction.\n   */\n  push?: boolean;\n\n  /**\n   * IGNORE (will be refactored and not exposed via API).\n   * Value is automatically set by parent Flex component.\n   */\n  flexDirection?: 'row' | 'column';\n}\n\nexport type FlexItemStylesProps = Pick<FlexItemProps, 'align' | 'grow' | 'flexDirection' | 'push' | 'shrink' | 'size'>;\n\nconst applyStyles = (\n  element: React.ReactElement,\n  styles: ComponentSlotStylesResolved,\n  classes: ComponentSlotClasses,\n): React.ReactElement => {\n  if (!styles) {\n    return element;\n  }\n\n  // if element is DOM element\n  if (typeof element.type === 'string') {\n    return React.cloneElement(element, {\n      className: cx(element.props.className, classes.root),\n    });\n  }\n\n  // assuming element is Fluent UI element\n  return React.cloneElement(element, {\n    styles: mergeStyles(styles.root || {}, element.props.styles),\n  });\n};\n\n/**\n * A FlexItem is a layout component that customizes alignment of Flex child.\n */\nconst FlexItem: React.FC<FlexItemProps> & { className: string; __isFlexItem: boolean } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(FlexItem.displayName, context.telemetry);\n  setStart();\n\n  const { align, children, className, design, grow, flexDirection, push, shrink, size, styles, variables } = props;\n\n  const { classes, styles: resolvedStyles } = useStyles<FlexItemStylesProps>(FlexItem.displayName, {\n    className: FlexItem.className,\n    mapPropsToStyles: () => ({\n      align,\n      grow,\n      flexDirection,\n      push,\n      shrink,\n      size,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  let element: React.ReactElement;\n\n  // pass calculated bits using Render Props pattern\n  if (typeof children === 'function') {\n    element = children({\n      styles: resolvedStyles.root,\n      classes: classes.root,\n    });\n  } else if (_.isNil(children)) {\n    element = null;\n  } else {\n    element = applyStyles(React.Children.only(children) as React.ReactElement, resolvedStyles, classes);\n  }\n\n  setEnd();\n\n  return element;\n};\n\nFlexItem.className = 'ui-flex__item';\nFlexItem.displayName = 'FlexItem';\n\nFlexItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    accessibility: false,\n    content: false,\n  }),\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n\n  align: PropTypes.oneOf(['auto', 'start', 'end', 'center', 'baseline', 'stretch']),\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['size.half', 'size.quarter', 'size.small', 'size.medium', 'size.large']),\n    PropTypes.string,\n  ]),\n  shrink: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n\n  push: PropTypes.bool,\n\n  /**\n   * Will be automatically set by parent Flex component\n   */\n  flexDirection: PropTypes.oneOf(['row', 'column']),\n};\n\n// Boolean flag for now, Symbol-based approach may be used instead.\n// However, there are  concerns related to browser compatibility if Symbols will be used.\n// Completely alternative approach - check class name of React element (and generalize this logic).\nFlexItem.__isFlexItem = true;\n\nexport default FlexItem;\n"],"file":"FlexItem.js"}