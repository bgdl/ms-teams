{"version":3,"sources":["components/Slider/Slider.tsx"],"names":["processInputValues","p","min","max","value","isNaN","Number","Slider","defaultProps","Math","valueAsPercentage","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibility","getA11yValueMessageOnChange","defaultValue","input","userInputRef","inputRef","step","className","styles","variables","design","fluid","vertical","disabled","createRef","createSliderManager","mapPropsToInitialState","mapPropsToState","state","actions","numericMin","numericMax","numericValue","getA11Props","debugName","rtl","mapPropsToBehavior","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleInputOverrides","onChange","e","change","onMouseDown","target","ElementType","unhandledProps","handledProps","htmlInputProps","restProps","type","inputElement","Box","create","as","slotClassNames","overrideProps","element","root","inputWrapper","rail","track","width","thumb","sliderBehavior","String","propTypes","commonPropTypes","createCommon","content","PropTypes","oneOfType","string","number","bool","func","customPropTypes","itemShorthand","ref","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, sliderBehavior, SliderBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStateManager,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { createSliderManager } from '@fluentui/state';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  ChildrenComponentProps,\n  commonPropTypes,\n  partitionHTMLProps,\n  UIComponentProps,\n  setWhatInputSource,\n  createShorthandFactory,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  ShorthandValue,\n  WithAsProp,\n  withSafeTypeForAs,\n  Omit,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport { SupportedIntrinsicInputProps } from '../../utils/htmlPropsUtils';\nimport Box, { BoxProps } from '../Box/Box';\n\nconst processInputValues = (\n  p: Pick<SliderProps, 'min' | 'max'> & { value: string },\n): { min: number; max: number; value: number; valueAsPercentage: string } => {\n  let min = _.toNumber(p.min);\n  let max = _.toNumber(p.max);\n  let value = _.toNumber(p.value);\n\n  if (isNaN(min)) min = Number(Slider.defaultProps.min);\n  if (isNaN(max)) max = Number(Slider.defaultProps.max);\n  value = isNaN(value) ? min + (max - min) / 2 : Math.min(max, Math.max(min, value));\n  const valueAsPercentage = `${(100 * (value - min)) / (max - min)}%`;\n\n  return { min, max, value, valueAsPercentage };\n};\n\nexport interface SliderSlotClassNames {\n  input: string;\n  inputWrapper: string;\n  rail: string;\n  thumb: string;\n  track: string;\n}\n\nexport interface SliderProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    Omit<SupportedIntrinsicInputProps, 'defaultValue'> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<SliderBehaviorProps>;\n\n  /** The default value of the slider. */\n  defaultValue?: string | number;\n\n  /** A slider can be read-only and unable to change states. */\n  disabled?: SupportedIntrinsicInputProps['disabled'];\n\n  /** A slider can take the width of its container. */\n  fluid?: boolean;\n\n  /**\n   * Callback that creates custom accessibility message a screen reader narrates when the value changes.\n   * @param props - Slider props.\n   */\n  getA11yValueMessageOnChange?: (props: SliderProps) => string;\n\n  /** Shorthand for the input component. */\n  input?: ShorthandValue<BoxProps>;\n\n  /** Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLElement>;\n\n  /** The maximum value of the slider. */\n  max?: SupportedIntrinsicInputProps['max'];\n\n  /** The minimum value of the slider. */\n  min?: SupportedIntrinsicInputProps['min'];\n\n  /**\n   * Called after item checked state is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onChange?: ComponentEventHandler<SliderProps & { value: string }>;\n\n  /**\n   * A number that specifies the granularity that the value must adhere to, or the special value 'any'.\n   * A string value of any means that no stepping is implied, and any value is allowed\n   * (barring other constraints, such as min and max).\n   */\n  step?: SupportedIntrinsicInputProps['step'];\n\n  /** The value of the slider. */\n  value?: string | number;\n\n  /** A slider can be displayed vertically. */\n  vertical?: boolean;\n}\n\nexport type SliderStylesProps = Pick<SliderProps, 'fluid' | 'disabled' | 'vertical'>;\n\nconst Slider: React.FC<WithAsProp<SliderProps>> &\n  FluentComponentStaticProps & { slotClassNames: SliderSlotClassNames } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Slider.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    min,\n    max,\n    value,\n    getA11yValueMessageOnChange,\n    defaultValue,\n    input,\n    inputRef: userInputRef,\n    step,\n    className,\n    styles,\n    variables,\n    design,\n    fluid,\n    vertical,\n    disabled,\n  } = props;\n  const inputRef = React.createRef<HTMLElement>();\n\n  const { state, actions } = useStateManager(createSliderManager, {\n    mapPropsToInitialState: () => ({\n      value: defaultValue as string,\n    }),\n    mapPropsToState: () => ({\n      value: value as string,\n    }),\n  });\n  const { min: numericMin, max: numericMax, value: numericValue, valueAsPercentage } = processInputValues({\n    min,\n    max,\n    value: state.value || '',\n  });\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Slider.displayName,\n    rtl: context.rtl,\n    mapPropsToBehavior: () => ({\n      disabled,\n      getA11yValueMessageOnChange,\n      max: numericMax,\n      min: numericMax,\n      value: numericValue,\n      vertical,\n    }),\n  });\n  const { classes, styles: resolvedStyles } = useStyles<SliderStylesProps>(Slider.displayName, {\n    className: Slider.className,\n    mapPropsToStyles: () => ({\n      fluid,\n      vertical,\n      disabled,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      styles,\n      variables,\n      design,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleInputOverrides = () => ({\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n      const value = _.get(e, 'target.value');\n      _.invoke(props, 'onChange', e, { ...props, value });\n      actions.change(value);\n    },\n    onMouseDown: (e: React.MouseEvent<HTMLInputElement>) => {\n      setWhatInputSource(context.target, 'mouse');\n      _.invoke(props, 'onMouseDown', e, props);\n    },\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Slider.handledProps, props);\n  const [htmlInputProps, restProps] = partitionHTMLProps(unhandledProps);\n  const type = 'range';\n\n  // we need 2 wrappers around the slider rail, track, input and thumb slots to achieve correct component sizes\n\n  const inputElement = Box.create(input || type, {\n    defaultProps: () =>\n      getA11Props('input', {\n        ...htmlInputProps,\n        as: 'input',\n        className: Slider.slotClassNames.input,\n        fluid,\n        min: numericMin,\n        max: numericMax,\n        step,\n        styles: resolvedStyles.input,\n        type,\n        value: numericValue,\n        vertical,\n      }),\n    overrideProps: handleInputOverrides,\n  });\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ...restProps })}>\n      <div\n        {...getA11Props('inputWrapper', {\n          className: cx(Slider.slotClassNames.inputWrapper, classes.inputWrapper),\n        })}\n      >\n        <span {...getA11Props('rail', { className: cx(Slider.slotClassNames.rail, classes.rail) })} />\n        <span\n          {...getA11Props('track', { className: cx(Slider.slotClassNames.track, classes.track) })}\n          style={{ width: valueAsPercentage }}\n        />\n        <Ref\n          innerRef={(inputElement: HTMLElement) => {\n            handleRef(inputRef, inputElement);\n            handleRef(userInputRef, inputElement);\n          }}\n        >\n          {inputElement}\n        </Ref>\n        {/* the thumb slot needs to appear after the input slot */}\n        <span\n          {...getA11Props('thumb', { className: cx(Slider.slotClassNames.thumb, classes.thumb) })}\n          style={{ [context.rtl ? 'right' : 'left']: valueAsPercentage }}\n        />\n      </div>\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n};\n\nSlider.className = 'ui-slider';\nSlider.displayName = 'Slider';\n\nSlider.slotClassNames = {\n  input: `${Slider.className}__input`,\n  inputWrapper: `${Slider.className}__input-wrapper`,\n  rail: `${Slider.className}__rail`,\n  thumb: `${Slider.className}__thumb`,\n  track: `${Slider.className}__track`,\n};\n\nSlider.defaultProps = {\n  accessibility: sliderBehavior,\n  getA11yValueMessageOnChange: ({ value }) => String(value),\n  max: 100,\n  min: 0,\n  step: 1,\n};\nSlider.propTypes = {\n  ...commonPropTypes.createCommon({ content: false }),\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fluid: PropTypes.bool,\n  getA11yValueMessageOnChange: PropTypes.func,\n  input: customPropTypes.itemShorthand,\n  inputRef: customPropTypes.ref,\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  step: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  vertical: PropTypes.bool,\n};\nSlider.handledProps = Object.keys(Slider.propTypes) as any;\n\nSlider.create = createShorthandFactory({ Component: Slider, mappedProp: 'value' });\n\n/**\n * A Slider represents an input that allows user to choose a value from within a specific range.\n *\n * @accessibility\n * Implements [ARIA Slider](https://www.w3.org/TR/wai-aria-practices-1.1/#slider) design pattern.\n * @accessibilityIssues\n * [Slider - JAWS narrates slider value twice when using PageUp / PageDown](https://github.com/FreedomScientific/VFO-standards-support/issues/220)\n * [Slider - JAWS narrates current and new value in vertical slider](https://github.com/FreedomScientific/VFO-standards-support/issues/219)\n */\nexport default withSafeTypeForAs<typeof Slider, SliderProps, 'input'>(Slider);\n"],"file":"Slider.js"}