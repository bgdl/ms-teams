{"version":3,"sources":["components/Alert/AlertDismissAction.tsx"],"names":["AlertDismissAction","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibility","as","children","className","content","disabled","design","styles","variables","danger","warning","info","success","hasChildren","hasContent","getA11Props","debugName","mapPropsToBehavior","actionHandlers","performClick","event","preventDefault","handleClick","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","unhandledProps","handledProps","ElementType","e","result","rtlTextContainer","getAttributes","forElements","onClick","root","Box","create","defaultProps","slotClassNames","buttonBehavior","propTypes","commonPropTypes","createCommon","PropTypes","bool","func","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, buttonBehavior, ButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ContentComponentProps,\n} from '../../utils';\n\nimport {\n  ComponentEventHandler,\n  WithAsProp,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n  ShorthandValue,\n} from '../../types';\nimport { getElementType, useAccessibility, useStyles, useTelemetry, useUnhandledProps } from '@fluentui/react-bindings';\nimport Box, { BoxProps } from '../Box/Box';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nexport interface AlertDismissActionProps\n  extends UIComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>>,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ButtonBehaviorProps>;\n\n  /** A dismiss action can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** An alert may be formatted to display a danger message. */\n  danger?: boolean;\n\n  /** An alert can be formatted to display a warning message. */\n  warning?: boolean;\n\n  /** An alert can be formatted to display a successful message. */\n  success?: boolean;\n\n  /** An alert may be formatted to display information. */\n  info?: boolean;\n\n  /**\n   * Called after a user clicks the paddle.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<AlertDismissActionProps>;\n}\n\nexport type AlertDismissActionSlotClassNames = {\n  content: string;\n};\n\nexport type AlertDismissActionStylesProps = Pick<\n  AlertDismissActionProps,\n  'disabled' | 'danger' | 'warning' | 'info' | 'success'\n> & {\n  hasContent?: boolean;\n};\n\nconst AlertDismissAction: React.FC<WithAsProp<AlertDismissActionProps>> &\n  FluentComponentStaticProps<AlertDismissActionProps> & {\n    slotClassNames: AlertDismissActionSlotClassNames;\n  } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(AlertDismissAction.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    as,\n    children,\n    className,\n    content,\n    disabled,\n    design,\n    styles,\n    variables,\n    danger,\n    warning,\n    info,\n    success,\n  } = props;\n\n  const hasChildren = childrenExist(children);\n  const hasContent = !!content && !_.isEmpty(content);\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: AlertDismissAction.displayName,\n    mapPropsToBehavior: () => ({\n      as,\n      disabled,\n    }),\n    actionHandlers: {\n      performClick: event => {\n        event.preventDefault();\n        handleClick(event);\n      },\n    },\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<AlertDismissActionStylesProps>(AlertDismissAction.displayName, {\n    className: AlertDismissAction.className,\n    mapPropsToStyles: () => ({\n      disabled,\n      danger,\n      warning,\n      info,\n      success,\n      hasContent: hasContent || hasChildren,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const unhandledProps = useUnhandledProps(AlertDismissAction.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const result = (\n    <ElementType\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n      {...getA11Props('root', {\n        onClick: handleClick,\n        disabled,\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {hasChildren\n        ? children\n        : Box.create(content, {\n            defaultProps: () =>\n              getA11Props('content', {\n                as: 'span',\n                className: AlertDismissAction.slotClassNames.content,\n                styles: resolvedStyles.content,\n              }),\n          })}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return result;\n};\n\nAlertDismissAction.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n  content: {},\n};\n\nAlertDismissAction.displayName = 'AlertDismissAction';\nAlertDismissAction.className = 'ui-alert__dismissaction';\n\nAlertDismissAction.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n  }),\n  disabled: PropTypes.bool,\n  danger: PropTypes.bool,\n  warning: PropTypes.bool,\n  info: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nAlertDismissAction.handledProps = Object.keys(AlertDismissAction.propTypes) as any;\n\nAlertDismissAction.create = createShorthandFactory({ Component: AlertDismissAction, mappedProp: 'content' });\n\nAlertDismissAction.slotClassNames = {\n  content: `${AlertDismissAction.className}__content`,\n};\n\n/**\n * A AlertDismissAction allows users to customize the dismissAction slot  inside the Alert component.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\nexport default withSafeTypeForAs<typeof AlertDismissAction, AlertDismissActionProps, 'button'>(AlertDismissAction);\n"],"file":"AlertDismissAction.js"}