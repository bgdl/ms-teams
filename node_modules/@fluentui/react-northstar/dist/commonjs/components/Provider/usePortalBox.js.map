{"version":3,"sources":["components/Provider/usePortalBox.ts"],"names":["PortalBoxContext","React","createContext","usePortalBox","options","className","rtl","target","element","useMemo","createElement","body","appendChild","removeChild","setAttribute","removeAttribute"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AAQO,IAAMA,gBAAgB,GAAGC,KAAK,CAACC,aAAN,CAAoC,IAApC,CAAzB;;;AAEP,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAkD;AAAA,MAC7DC,SAD6D,GAClCD,OADkC,CAC7DC,SAD6D;AAAA,MAClDC,GADkD,GAClCF,OADkC,CAClDE,GADkD;AAAA,MAC7CC,MAD6C,GAClCH,OADkC,CAC7CG,MAD6C;AAGrE,MAAMC,OAA8B,GAAGP,KAAK,CAACQ,OAAN,CAAc;AAAA,WAAO,4BAAcF,MAAM,CAACG,aAAP,CAAqB,KAArB,CAAd,GAA4C,IAAnD;AAAA,GAAd,EAAwE,CAC7GH,MAD6G,CAAxE,CAAvC;AAIA,gDAA0B,YAAM;AAC9B,QAAIC,OAAJ,EAAa;AACXD,MAAAA,MAAM,CAACI,IAAP,CAAYC,WAAZ,CAAwBJ,OAAxB;AACD;;AAED,WAAO,YAAM;AACX,UAAIA,OAAJ,EAAa;AACXD,QAAAA,MAAM,CAACI,IAAP,CAAYE,WAAZ,CAAwBL,OAAxB;AACD;AACF,KAJD;AAKD,GAVD,EAUG,EAVH;AAWA,gDAA0B,YAAM;AAC9B,QAAIA,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACM,YAAR,CAAqB,OAArB,EAA8BT,SAA9B;;AAEA,UAAIC,GAAJ,EAAS;AACPE,QAAAA,OAAO,CAACM,YAAR,CAAqB,KAArB,EAA4B,KAA5B;AACD,OAFD,MAEO;AACLN,QAAAA,OAAO,CAACO,eAAR,CAAwB,KAAxB;AACD;AACF;AACF,GAVD,EAUG,CAACV,SAAD,EAAYC,GAAZ,CAVH;AAYA,SAAOE,OAAP;AACD,CA/BD;;eAiCeL,Y","sourcesContent":["import { useIsomorphicLayoutEffect } from '@fluentui/react-bindings';\nimport * as React from 'react';\n\nimport isBrowser from '../../utils/isBrowser';\n\ntype UsePortalBoxOptions = {\n  className: string;\n  rtl: boolean;\n  target: Document;\n};\n\nexport const PortalBoxContext = React.createContext<HTMLDivElement>(null);\n\nconst usePortalBox = (options: UsePortalBoxOptions): HTMLDivElement => {\n  const { className, rtl, target } = options;\n\n  const element: HTMLDivElement | null = React.useMemo(() => (isBrowser() ? target.createElement('div') : null), [\n    target,\n  ]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (element) {\n      target.body.appendChild(element);\n    }\n\n    return () => {\n      if (element) {\n        target.body.removeChild(element);\n      }\n    };\n  }, []);\n  useIsomorphicLayoutEffect(() => {\n    if (element) {\n      element.setAttribute('class', className);\n\n      if (rtl) {\n        element.setAttribute('dir', 'rtl');\n      } else {\n        element.removeAttribute('dir');\n      }\n    }\n  }, [className, rtl]);\n\n  return element;\n};\n\nexport default usePortalBox;\n"],"file":"usePortalBox.js"}