{"version":3,"sources":["components/Dropdown/DropdownSearchInput.tsx"],"names":["DropdownSearchInput","e","props","unhandledProps","styles","accessibilityComboboxProps","accessibilityInputProps","inputRef","placeholder","disabled","handleFocus","handleKeyUp","className","slotClassNames","wrapper","root","type","input","onBlur","handleInputBlur","onKeyDown","handleInputKeyDown","UIComponent","commonPropTypes","createCommon","accessibility","children","content","PropTypes","object","bool","inline","customPropTypes","ref","onFocus","func","onInputBlur","onInputKeyDown","onKeyUp","string","create","Component"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n\nimport {\n  UIComponent,\n  RenderResultConfig,\n  createShorthandFactory,\n  commonPropTypes,\n  ShorthandFactory,\n} from '../../utils';\nimport { ComponentEventHandler, WithAsProp, withSafeTypeForAs } from '../../types';\nimport { UIComponentProps } from '../../utils/commonPropInterfaces';\nimport Input from '../Input/Input';\n\nexport interface DropdownSearchInputSlotClassNames {\n  input: string;\n  wrapper: string;\n}\n\nexport interface DropdownSearchInputProps extends UIComponentProps<DropdownSearchInputProps> {\n  /** Accessibility props for combobox slot. */\n  accessibilityComboboxProps?: any;\n\n  /** Accessibility props for input slot. */\n  accessibilityInputProps?: any;\n\n  /** A dropdown search input can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A dropdown search input can be formatted to appear inline in the context of a Dropdown. */\n  inline?: boolean;\n\n  /** Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLElement>;\n\n  /**\n   * Called on input element focus.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onFocus?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input element blur.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onInputBlur?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input key down event.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onInputKeyDown?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input key up event.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyUp?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /** A placeholder message. */\n  placeholder?: string;\n}\n\nclass DropdownSearchInput extends UIComponent<WithAsProp<DropdownSearchInputProps>, any> {\n  static displayName = 'DropdownSearchInput';\n  static create: ShorthandFactory<DropdownSearchInputProps>;\n  static slotClassNames: DropdownSearchInputSlotClassNames;\n  static className = 'ui-dropdown__searchinput';\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      accessibility: false,\n      children: false,\n      content: false,\n    }),\n    accessibilityInputProps: PropTypes.object,\n    accessibilityComboboxProps: PropTypes.object,\n    disabled: PropTypes.bool,\n    inline: PropTypes.bool,\n    inputRef: customPropTypes.ref,\n    onFocus: PropTypes.func,\n    onInputBlur: PropTypes.func,\n    onInputKeyDown: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    placeholder: PropTypes.string,\n  };\n\n  handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onFocus', e, this.props);\n  };\n\n  handleInputKeyDown = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onInputKeyDown', e, this.props);\n  };\n\n  handleInputBlur = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onInputBlur', e, this.props);\n  };\n\n  handleKeyUp = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onKeyUp', e, this.props);\n  };\n\n  renderComponent({ unhandledProps, styles }: RenderResultConfig<DropdownSearchInputProps>) {\n    const { accessibilityComboboxProps, accessibilityInputProps, inputRef, placeholder, disabled } = this.props;\n    return (\n      <Input\n        disabled={disabled}\n        inputRef={inputRef}\n        onFocus={this.handleFocus}\n        onKeyUp={this.handleKeyUp}\n        {...unhandledProps}\n        wrapper={{\n          className: DropdownSearchInput.slotClassNames.wrapper,\n          styles: styles.root,\n          ...accessibilityComboboxProps,\n          ...unhandledProps.wrapper,\n        }}\n        input={{\n          type: 'text',\n          className: DropdownSearchInput.slotClassNames.input,\n          styles: styles.input,\n          placeholder,\n          onBlur: this.handleInputBlur,\n          onKeyDown: this.handleInputKeyDown,\n          ...accessibilityInputProps,\n          ...unhandledProps.input,\n        }}\n      />\n    );\n  }\n}\n\nDropdownSearchInput.slotClassNames = {\n  input: `${DropdownSearchInput.className}__input`,\n  wrapper: `${DropdownSearchInput.className}__wrapper`,\n};\n\nDropdownSearchInput.create = createShorthandFactory({ Component: DropdownSearchInput });\n\n/**\n * A DropdownSearchInput represents item of 'search' Dropdown.\n * Used to display the search input field.\n */\nexport default withSafeTypeForAs<typeof DropdownSearchInput, DropdownSearchInputProps>(DropdownSearchInput);\n"],"file":"DropdownSearchInput.js"}