{"version":3,"sources":["components/Button/ButtonContent.tsx"],"names":["ButtonContent","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","size","content","children","className","styles","variables","design","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","ElementType","unhandledProps","handledProps","result","rtlTextContainer","getAttributes","forElements","root","propTypes","commonPropTypes","createCommon","customPropTypes","Object","keys","create","Component","mappedProp"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AAJA;AAcA,IAAMA,aAC0C,GAAG,SAD7CA,aAC6C,CAAAC,KAAK,EAAI;AAC1D,MAAMC,OAAgC,GAAGC,KAAK,CAACC,UAAN,CAAiBC,uBAAjB,CAAzC;;AAD0D,sBAE7B,iCAAaL,aAAa,CAACM,WAA3B,EAAwCJ,OAAO,CAACK,SAAhD,CAF6B;AAAA,MAElDC,QAFkD,iBAElDA,QAFkD;AAAA,MAExCC,MAFwC,iBAExCA,MAFwC;;AAG1DD,EAAAA,QAAQ;AAHkD,MAKlDE,IALkD,GAKgBT,KALhB,CAKlDS,IALkD;AAAA,MAK5CC,OAL4C,GAKgBV,KALhB,CAK5CU,OAL4C;AAAA,MAKnCC,QALmC,GAKgBX,KALhB,CAKnCW,QALmC;AAAA,MAKzBC,SALyB,GAKgBZ,KALhB,CAKzBY,SALyB;AAAA,MAKdC,MALc,GAKgBb,KALhB,CAKda,MALc;AAAA,MAKNC,SALM,GAKgBd,KALhB,CAKNc,SALM;AAAA,MAKKC,MALL,GAKgBf,KALhB,CAKKe,MALL;;AAAA,mBAOtC,8BAAoChB,aAAa,CAACM,WAAlD,EAA+D;AACjFO,IAAAA,SAAS,EAAEb,aAAa,CAACa,SADwD;AAEjFI,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AAAEP,QAAAA,IAAI,EAAJA;AAAF,OAAP;AAAA,KAF+D;AAGjFQ,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BL,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,SAAS,EAATA,SAH6B;AAI7BC,QAAAA,MAAM,EAANA;AAJ6B,OAAP;AAAA,KAHyD;AASjFG,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAToE,GAA/D,CAPsC;AAAA,MAOlDC,OAPkD,cAOlDA,OAPkD;;AAmB1D,MAAMC,WAAW,GAAG,mCAAepB,KAAf,CAApB;AACA,MAAMqB,cAAc,GAAG,sCAAkBtB,aAAa,CAACuB,YAAhC,EAA8CtB,KAA9C,CAAvB;AAEA,MAAMuB,MAAM,GACV,oBAAC,WAAD,6BACMC,wBAAiBC,aAAjB,CAA+B;AAAEC,IAAAA,WAAW,EAAE,CAACf,QAAD,EAAWD,OAAX;AAAf,GAA/B,CADN;AAEE,IAAA,SAAS,EAAES,OAAO,CAACQ;AAFrB,KAGMN,cAHN,GAKG,0BAAcV,QAAd,IAA0BA,QAA1B,GAAqCD,OALxC,CADF;AAUAF,EAAAA,MAAM;AAEN,SAAOe,MAAP;AACD,CApCD;;AAsCAxB,aAAa,CAACM,WAAd,GAA4B,eAA5B;AACAN,aAAa,CAACa,SAAd,GAA0B,oBAA1B;AAEAb,aAAa,CAAC6B,SAAd,qBACKC,uBAAgBC,YAAhB,EADL;AAEErB,EAAAA,IAAI,EAAEsB,eAAe,CAACtB;AAFxB;AAKAV,aAAa,CAACuB,YAAd,GAA6BU,MAAM,CAACC,IAAP,CAAYlC,aAAa,CAAC6B,SAA1B,CAA7B;AAEA7B,aAAa,CAACmC,MAAd,GAAuB,mCAAuB;AAC5CC,EAAAA,SAAS,EAAEpC,aADiC;AAE5CqC,EAAAA,UAAU,EAAE;AAFgC,CAAvB,CAAvB;AAKA;;;;eAGe,8BAA4DrC,aAA5D,C","sourcesContent":["import * as React from 'react';\nimport { useStyles, useTelemetry, getElementType, useUnhandledProps } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport { childrenExist, commonPropTypes, createShorthandFactory, rtlTextContainer } from '../../utils';\nimport { FluentComponentStaticProps, ProviderContextPrepared, WithAsProp, withSafeTypeForAs } from '../../types';\nimport { BoxProps } from '../Box/Box';\nimport { ButtonProps } from './Button';\n\nexport interface ButtonContentProps extends BoxProps {\n  size?: ButtonProps['size'];\n}\n\nexport type ButtonContentStylesProps = Pick<ButtonContentProps, 'size'>;\n\nconst ButtonContent: React.FC<WithAsProp<ButtonContentProps>> &\n  FluentComponentStaticProps<ButtonContentProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(ButtonContent.displayName, context.telemetry);\n  setStart();\n\n  const { size, content, children, className, styles, variables, design } = props;\n\n  const { classes } = useStyles<ButtonContentStylesProps>(ButtonContent.displayName, {\n    className: ButtonContent.className,\n    mapPropsToStyles: () => ({ size }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      styles,\n      variables,\n      design,\n    }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ButtonContent.handledProps, props);\n\n  const result = (\n    <ElementType\n      {...rtlTextContainer.getAttributes({ forElements: [children, content] })}\n      className={classes.root}\n      {...unhandledProps}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return result;\n};\n\nButtonContent.displayName = 'ButtonContent';\nButtonContent.className = 'ui-button__content';\n\nButtonContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  size: customPropTypes.size,\n};\n\nButtonContent.handledProps = Object.keys(ButtonContent.propTypes) as any;\n\nButtonContent.create = createShorthandFactory({\n  Component: ButtonContent,\n  mappedProp: 'content',\n});\n\n/**\n * A ButtonContent allows a user to have a dedicated component that can be targeted from the theme.\n */\nexport default withSafeTypeForAs<typeof ButtonContent, ButtonContentProps>(ButtonContent);\n"],"file":"ButtonContent.js"}