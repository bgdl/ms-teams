{"version":3,"sources":["components/Button/Button.tsx"],"names":["Button","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibility","active","as","children","content","icon","loader","disabled","iconPosition","loading","text","primary","inverted","size","iconOnly","fluid","circular","className","styles","variables","design","hasChildren","getA11Props","debugName","mapPropsToBehavior","actionHandlers","performClick","event","preventDefault","handleClick","rtl","mapPropsToStyles","hasContent","mapPropsToInlineStyles","classes","resolvedStyles","unhandledProps","handledProps","ElementType","renderIcon","Box","create","defaultProps","renderLoader","Loader","role","undefined","e","handleFocus","result","rtlTextContainer","getAttributes","forElements","onClick","root","onFocus","ButtonContent","buttonBehavior","propTypes","commonPropTypes","createCommon","PropTypes","bool","customPropTypes","shorthandAllowingChildren","oneOf","itemShorthandWithoutJSX","func","every","disallow","secondary","Object","keys","Group","ButtonGroup","Content","Component","mappedProp"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGA;;AAUA;;AACA;;AACA;;AAQA;;AACA;;AACA;;AAEA;;AADA;AAuEA,IAAMA,MACkG,GAAG,SADrGA,MACqG,CAAAC,KAAK,EAAI;AAClH,MAAMC,OAAgC,GAAGC,KAAK,CAACC,UAAN,CAAiBC,uBAAjB,CAAzC;;AADkH,sBAErF,iCAAaL,MAAM,CAACM,WAApB,EAAiCJ,OAAO,CAACK,SAAzC,CAFqF;AAAA,MAE1GC,QAF0G,iBAE1GA,QAF0G;AAAA,MAEhGC,MAFgG,iBAEhGA,MAFgG;;AAGlHD,EAAAA,QAAQ;AAH0G,MAMhHE,aANgH,GA4B9GT,KA5B8G,CAMhHS,aANgH;AAAA,MAQhHC,MARgH,GA4B9GV,KA5B8G,CAQhHU,MARgH;AAAA,MAShHC,EATgH,GA4B9GX,KA5B8G,CAShHW,EATgH;AAAA,MAUhHC,QAVgH,GA4B9GZ,KA5B8G,CAUhHY,QAVgH;AAAA,MAWhHC,OAXgH,GA4B9Gb,KA5B8G,CAWhHa,OAXgH;AAAA,MAYhHC,IAZgH,GA4B9Gd,KA5B8G,CAYhHc,IAZgH;AAAA,MAahHC,MAbgH,GA4B9Gf,KA5B8G,CAahHe,MAbgH;AAAA,MAchHC,QAdgH,GA4B9GhB,KA5B8G,CAchHgB,QAdgH;AAAA,MAehHC,YAfgH,GA4B9GjB,KA5B8G,CAehHiB,YAfgH;AAAA,MAgBhHC,OAhBgH,GA4B9GlB,KA5B8G,CAgBhHkB,OAhBgH;AAAA,MAiBhHC,IAjBgH,GA4B9GnB,KA5B8G,CAiBhHmB,IAjBgH;AAAA,MAkBhHC,OAlBgH,GA4B9GpB,KA5B8G,CAkBhHoB,OAlBgH;AAAA,MAmBhHC,QAnBgH,GA4B9GrB,KA5B8G,CAmBhHqB,QAnBgH;AAAA,MAoBhHC,IApBgH,GA4B9GtB,KA5B8G,CAoBhHsB,IApBgH;AAAA,MAqBhHC,QArBgH,GA4B9GvB,KA5B8G,CAqBhHuB,QArBgH;AAAA,MAsBhHC,KAtBgH,GA4B9GxB,KA5B8G,CAsBhHwB,KAtBgH;AAAA,MAuBhHC,QAvBgH,GA4B9GzB,KA5B8G,CAuBhHyB,QAvBgH;AAAA,MAwBhHC,SAxBgH,GA4B9G1B,KA5B8G,CAwBhH0B,SAxBgH;AAAA,MAyBhHC,MAzBgH,GA4B9G3B,KA5B8G,CAyBhH2B,MAzBgH;AAAA,MA0BhHC,SA1BgH,GA4B9G5B,KA5B8G,CA0BhH4B,SA1BgH;AAAA,MA2BhHC,MA3BgH,GA4B9G7B,KA5B8G,CA2BhH6B,MA3BgH;AA8BlH,MAAMC,WAAW,GAAG,0BAAclB,QAAd,CAApB;AAEA,MAAMmB,WAAW,GAAG,qCAAiBtB,aAAjB,EAAgC;AAClDuB,IAAAA,SAAS,EAAEjC,MAAM,CAACM,WADgC;AAElD4B,IAAAA,kBAAkB,EAAE;AAAA,aAAO;AACzBtB,QAAAA,EAAE,EAAFA,EADyB;AAEzBD,QAAAA,MAAM,EAANA,MAFyB;AAGzBM,QAAAA,QAAQ,EAARA,QAHyB;AAIzBE,QAAAA,OAAO,EAAPA;AAJyB,OAAP;AAAA,KAF8B;AAQlDgB,IAAAA,cAAc,EAAE;AACdC,MAAAA,YAAY,EAAE,sBAAAC,KAAK,EAAI;AACrBA,QAAAA,KAAK,CAACC,cAAN;AACAC,QAAAA,WAAW,CAACF,KAAD,CAAX;AACD;AAJa,KARkC;AAclDG,IAAAA,GAAG,EAAEtC,OAAO,CAACsC;AAdqC,GAAhC,CAApB;;AAhCkH,mBAgDtE,8BAA6BxC,MAAM,CAACM,WAApC,EAAiD;AAC3FqB,IAAAA,SAAS,EAAE3B,MAAM,CAAC2B,SADyE;AAE3Fc,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AACvBrB,QAAAA,IAAI,EAAJA,IADuB;AAEvBC,QAAAA,OAAO,EAAPA,OAFuB;AAGvBJ,QAAAA,QAAQ,EAARA,QAHuB;AAIvBS,QAAAA,QAAQ,EAARA,QAJuB;AAKvBH,QAAAA,IAAI,EAAJA,IALuB;AAMvBJ,QAAAA,OAAO,EAAPA,OANuB;AAOvBG,QAAAA,QAAQ,EAARA,QAPuB;AAQvBE,QAAAA,QAAQ,EAARA,QARuB;AASvBN,QAAAA,YAAY,EAAZA,YATuB;AAUvBO,QAAAA,KAAK,EAALA,KAVuB;AAWvBiB,QAAAA,UAAU,EAAE,CAAC,CAAC5B;AAXS,OAAP;AAAA,KAFyE;AAe3F6B,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BhB,QAAAA,SAAS,EAATA,SAD6B;AAE7BG,QAAAA,MAAM,EAANA,MAF6B;AAG7BF,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAfmE;AAqB3FW,IAAAA,GAAG,EAAEtC,OAAO,CAACsC;AArB8E,GAAjD,CAhDsE;AAAA,MAgD1GI,OAhD0G,cAgD1GA,OAhD0G;AAAA,MAgDzFC,cAhDyF,cAgDjGjB,MAhDiG;;AAwElH,MAAMkB,cAAc,GAAG,sCAAkB9C,MAAM,CAAC+C,YAAzB,EAAuC9C,KAAvC,CAAvB;AACA,MAAM+C,WAAW,GAAG,mCAAe/C,KAAf,CAApB;;AAEA,MAAMgD,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,WAAOC,aAAIC,MAAJ,CAAWpC,IAAX,EAAiB;AACtBqC,MAAAA,YAAY,EAAE;AAAA,eACZpB,WAAW,CAAC,MAAD,EAAS;AAClBJ,UAAAA,MAAM,EAAEiB,cAAc,CAAC9B;AADL,SAAT,CADC;AAAA;AADQ,KAAjB,CAAP;AAMD,GAPD;;AASA,MAAMsC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,WAAOC,gBAAOH,MAAP,CAAcnC,MAAM,IAAI,EAAxB,EAA4B;AACjCoC,MAAAA,YAAY,EAAE;AAAA,eACZpB,WAAW,CAAC,QAAD,EAAW;AACpBuB,UAAAA,IAAI,EAAEC,SADc;AAEpB5B,UAAAA,MAAM,EAAEiB,cAAc,CAAC7B;AAFH,SAAX,CADC;AAAA;AADmB,KAA5B,CAAP;AAOD,GARD;;AAUA,MAAMuB,WAAW,GAAG,SAAdA,WAAc,CAACkB,CAAD,EAA6B;AAC/C,QAAIxC,QAAJ,EAAc;AACZwC,MAAAA,CAAC,CAACnB,cAAF;AACA;AACD;;AAED,0BAASrC,KAAT,EAAgB,SAAhB,EAA2BwD,CAA3B,EAA8BxD,KAA9B;AACD,GAPD;;AASA,MAAMyD,WAAW,GAAG,SAAdA,WAAc,CAACD,CAAD,EAA6B;AAC/C,0BAASxD,KAAT,EAAgB,SAAhB,EAA2BwD,CAA3B,EAA8BxD,KAA9B;AACD,GAFD;;AAIA,MAAM0D,MAAM,GACV,oBAAC,WAAD,6BACMC,wBAAiBC,aAAjB,CAA+B;AAAEC,IAAAA,WAAW,EAAE,CAACjD,QAAD;AAAf,GAA/B,CADN,EAEMmB,WAAW,CAAC,MAAD;AACb+B,IAAAA,OAAO,EAAExB,WADI;AAEbtB,IAAAA,QAAQ,EAARA,QAFa;AAGbU,IAAAA,SAAS,EAAEiB,OAAO,CAACoB,IAHN;AAIbC,IAAAA,OAAO,EAAEP;AAJI,KAKVZ,cALU,EAFjB,GAUGf,WAAW,GACVlB,QADU,GAGV,0CACGM,OAAO,IAAIkC,YAAY,EAD1B,EAEGnC,YAAY,KAAK,OAAjB,IAA4B+B,UAAU,EAFzC,EAGGiB,uBAAcf,MAAd,CAAqBrC,OAArB,EAA8B;AAC7BsC,IAAAA,YAAY,EAAE;AAAA,aAAMpB,WAAW,CAAC,SAAD,EAAY;AAAEpB,QAAAA,EAAE,EAAE,MAAN;AAAcW,QAAAA,IAAI,EAAJA,IAAd;AAAoBK,QAAAA,MAAM,EAAEiB,cAAc,CAAC/B;AAA3C,OAAZ,CAAjB;AAAA;AADe,GAA9B,CAHH,EAMGI,YAAY,KAAK,OAAjB,IAA4B+B,UAAU,EANzC,CAbJ,CADF;AA0BAxC,EAAAA,MAAM;AAEN,SAAOkD,MAAP;AACD,CAzID;;AA2IA3D,MAAM,CAACoD,YAAP,GAAsB;AACpBxC,EAAAA,EAAE,EAAE,QADgB;AAEpBF,EAAAA,aAAa,EAAEyD,6BAFK;AAGpB5C,EAAAA,IAAI,EAAE;AAHc,CAAtB;AAMAvB,MAAM,CAACM,WAAP,GAAqB,QAArB;AACAN,MAAM,CAAC2B,SAAP,GAAmB,WAAnB;AAEA3B,MAAM,CAACoE,SAAP,qBACKC,uBAAgBC,YAAhB,CAA6B;AAC9BxD,EAAAA,OAAO,EAAE;AADqB,CAA7B,CADL;AAIEY,EAAAA,QAAQ,EAAE6C,SAAS,CAACC,IAJtB;AAKEvD,EAAAA,QAAQ,EAAEsD,SAAS,CAACC,IALtB;AAME/C,EAAAA,KAAK,EAAE8C,SAAS,CAACC,IANnB;AAOEzD,EAAAA,IAAI,EAAE0D,eAAe,CAACC,yBAPxB;AAQElD,EAAAA,QAAQ,EAAE+C,SAAS,CAACC,IARtB;AASEtD,EAAAA,YAAY,EAAEqD,SAAS,CAACI,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,CAAhB,CAThB;AAUErD,EAAAA,QAAQ,EAAEiD,SAAS,CAACC,IAVtB;AAWExD,EAAAA,MAAM,EAAEyD,eAAe,CAACG,uBAX1B;AAYEzD,EAAAA,OAAO,EAAEoD,SAAS,CAACC,IAZrB;AAaET,EAAAA,OAAO,EAAEQ,SAAS,CAACM,IAbrB;AAcEZ,EAAAA,OAAO,EAAEM,SAAS,CAACM,IAdrB;AAeExD,EAAAA,OAAO,EAAEoD,eAAe,CAACK,KAAhB,CAAsB,CAACL,eAAe,CAACM,QAAhB,CAAyB,CAAC,WAAD,CAAzB,CAAD,EAA0CR,SAAS,CAACC,IAApD,CAAtB,CAfX;AAgBEpD,EAAAA,IAAI,EAAEmD,SAAS,CAACC,IAhBlB;AAiBEQ,EAAAA,SAAS,EAAEP,eAAe,CAACK,KAAhB,CAAsB,CAACL,eAAe,CAACM,QAAhB,CAAyB,CAAC,SAAD,CAAzB,CAAD,EAAwCR,SAAS,CAACC,IAAlD,CAAtB,CAjBb;AAkBEjD,EAAAA,IAAI,EAAEkD,eAAe,CAAClD;AAlBxB;AAqBAvB,MAAM,CAAC+C,YAAP,GAAsBkC,MAAM,CAACC,IAAP,CAAYlF,MAAM,CAACoE,SAAnB,CAAtB;AAEApE,MAAM,CAACmF,KAAP,GAAeC,oBAAf;AACApF,MAAM,CAACqF,OAAP,GAAiBnB,sBAAjB;AAEAlE,MAAM,CAACmD,MAAP,GAAgB,mCAAuB;AAAEmC,EAAAA,SAAS,EAAEtF,MAAb;AAAqBuF,EAAAA,UAAU,EAAE;AAAjC,CAAvB,CAAhB;AAEA;;;;;;;eAMe,8BAAwDvF,MAAxD,C","sourcesContent":["import { Accessibility, buttonBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  SizeValue,\n} from '../../utils';\nimport Box, { BoxProps } from '../Box/Box';\nimport Loader, { LoaderProps } from '../Loader/Loader';\nimport {\n  ComponentEventHandler,\n  WithAsProp,\n  ShorthandValue,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonContent, { ButtonContentProps } from './ButtonContent';\nimport { getElementType, useAccessibility, useStyles, useTelemetry, useUnhandledProps } from '@fluentui/react-bindings';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nexport interface ButtonProps\n  extends UIComponentProps,\n    ContentComponentProps<ShorthandValue<ButtonContentProps>>,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility;\n\n  /** A button can appear circular. */\n  circular?: boolean;\n\n  /** A button can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A button can fill the width of its container. */\n  fluid?: boolean;\n\n  /** A button can have an icon. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** A button can contain only an icon. */\n  iconOnly?: boolean;\n\n  /** An icon button can format its Icon to appear before or after its content */\n  iconPosition?: 'before' | 'after';\n\n  /** A button that inherits its background and has a subtle appearance */\n  inverted?: boolean;\n\n  /** Shorthand to customize a button's loader. */\n  loader?: ShorthandValue<LoaderProps>;\n\n  /** A button can show a loading indicator. */\n  loading?: boolean;\n\n  /**\n   * Called after a user clicks the button.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<ButtonProps>;\n\n  /**\n   * Called after a user focuses the button.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ButtonProps>;\n\n  /** A button can emphasize that it represents the primary action. */\n  primary?: boolean;\n\n  /** A button can be formatted to show only text in order to indicate a less-pronounced action. */\n  text?: boolean;\n\n  /** A button can emphasize that it represents an alternative action. */\n  secondary?: boolean;\n\n  /** A button can be sized. */\n  size?: SizeValue;\n}\n\nexport type ButtonStylesProps = Pick<\n  ButtonProps,\n  'text' | 'primary' | 'disabled' | 'circular' | 'size' | 'loading' | 'inverted' | 'iconOnly' | 'fluid' | 'iconPosition'\n> & {\n  hasContent?: boolean;\n};\n\nconst Button: React.FC<WithAsProp<ButtonProps>> &\n  FluentComponentStaticProps<ButtonProps> & { Group: typeof ButtonGroup; Content: typeof ButtonContent } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Button.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    // @ts-ignore\n    active,\n    as,\n    children,\n    content,\n    icon,\n    loader,\n    disabled,\n    iconPosition,\n    loading,\n    text,\n    primary,\n    inverted,\n    size,\n    iconOnly,\n    fluid,\n    circular,\n    className,\n    styles,\n    variables,\n    design,\n  } = props;\n\n  const hasChildren = childrenExist(children);\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Button.displayName,\n    mapPropsToBehavior: () => ({\n      as,\n      active,\n      disabled,\n      loading,\n    }),\n    actionHandlers: {\n      performClick: event => {\n        event.preventDefault();\n        handleClick(event);\n      },\n    },\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ButtonStylesProps>(Button.displayName, {\n    className: Button.className,\n    mapPropsToStyles: () => ({\n      text,\n      primary,\n      disabled,\n      circular,\n      size,\n      loading,\n      inverted,\n      iconOnly,\n      iconPosition,\n      fluid,\n      hasContent: !!content,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const unhandledProps = useUnhandledProps(Button.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const renderIcon = () => {\n    return Box.create(icon, {\n      defaultProps: () =>\n        getA11Props('icon', {\n          styles: resolvedStyles.icon,\n        }),\n    });\n  };\n\n  const renderLoader = () => {\n    return Loader.create(loader || {}, {\n      defaultProps: () =>\n        getA11Props('loader', {\n          role: undefined,\n          styles: resolvedStyles.loader,\n        }),\n    });\n  };\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const result = (\n    <ElementType\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n      {...getA11Props('root', {\n        onClick: handleClick,\n        disabled,\n        className: classes.root,\n        onFocus: handleFocus,\n        ...unhandledProps,\n      })}\n    >\n      {hasChildren ? (\n        children\n      ) : (\n        <>\n          {loading && renderLoader()}\n          {iconPosition !== 'after' && renderIcon()}\n          {ButtonContent.create(content, {\n            defaultProps: () => getA11Props('content', { as: 'span', size, styles: resolvedStyles.content }),\n          })}\n          {iconPosition === 'after' && renderIcon()}\n        </>\n      )}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return result;\n};\n\nButton.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n  size: 'medium',\n};\n\nButton.displayName = 'Button';\nButton.className = 'ui-button';\n\nButton.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n  }),\n  circular: PropTypes.bool,\n  disabled: PropTypes.bool,\n  fluid: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  iconOnly: PropTypes.bool,\n  iconPosition: PropTypes.oneOf(['before', 'after']),\n  inverted: PropTypes.bool,\n  loader: customPropTypes.itemShorthandWithoutJSX,\n  loading: PropTypes.bool,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  text: PropTypes.bool,\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  size: customPropTypes.size,\n};\n\nButton.handledProps = Object.keys(Button.propTypes) as any;\n\nButton.Group = ButtonGroup;\nButton.Content = ButtonContent;\n\nButton.create = createShorthandFactory({ Component: Button, mappedProp: 'content' });\n\n/**\n * A Button enables users to take an action, such as submitting a form, opening a dialog, etc.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\nexport default withSafeTypeForAs<typeof Button, ButtonProps, 'button'>(Button);\n"],"file":"Button.js"}