"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _reactBindings = require("@fluentui/react-bindings");

var customPropTypes = _interopRequireWildcard(require("@fluentui/react-proptypes"));

var _reactFela = require("react-fela");

var _utils = require("../../utils");

var _types = require("../../types");

// @ts-ignore
var ButtonContent = function ButtonContent(props) {
  var context = React.useContext(_reactFela.ThemeContext);

  var _useTelemetry = (0, _reactBindings.useTelemetry)(ButtonContent.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var size = props.size,
      content = props.content,
      children = props.children,
      className = props.className,
      styles = props.styles,
      variables = props.variables,
      design = props.design;

  var _useStyles = (0, _reactBindings.useStyles)(ButtonContent.displayName, {
    className: ButtonContent.className,
    mapPropsToStyles: function mapPropsToStyles() {
      return {
        size: size
      };
    },
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        styles: styles,
        variables: variables,
        design: design
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes;

  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.useUnhandledProps)(ButtonContent.handledProps, props);
  var result = React.createElement(ElementType, (0, _extends2.default)({}, _utils.rtlTextContainer.getAttributes({
    forElements: [children, content]
  }), {
    className: classes.root
  }, unhandledProps), (0, _utils.childrenExist)(children) ? children : content);
  setEnd();
  return result;
};

ButtonContent.displayName = 'ButtonContent';
ButtonContent.className = 'ui-button__content';
ButtonContent.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon(), {
  size: customPropTypes.size
});
ButtonContent.handledProps = Object.keys(ButtonContent.propTypes);
ButtonContent.create = (0, _utils.createShorthandFactory)({
  Component: ButtonContent,
  mappedProp: 'content'
});
/**
 * A ButtonContent allows a user to have a dedicated component that can be targeted from the theme.
 */

var _default = (0, _types.withSafeTypeForAs)(ButtonContent);

exports.default = _default;
//# sourceMappingURL=ButtonContent.js.map
