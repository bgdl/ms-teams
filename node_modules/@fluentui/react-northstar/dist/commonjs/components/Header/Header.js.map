{"version":3,"sources":["components/Header/Header.tsx"],"names":["Header","accessibility","ElementType","classes","v","variables","unhandledProps","props","children","description","content","hasChildren","contentElement","rtlTextContainer","getAttributes","forElements","condition","attributes","root","createFor","element","HeaderDescription","create","defaultProps","className","slotClassNames","descriptionColor","color","UIComponent","commonPropTypes","createCommon","customPropTypes","itemShorthand","align","rtlAttributes","PropTypes","func","as","Component","mappedProp"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AAEA;;AAaA;;AAEA;;IAuBMA,M;;;;;;;;;;;;0CAwBmF;AAAA,UAArEC,aAAqE,QAArEA,aAAqE;AAAA,UAAtDC,WAAsD,QAAtDA,WAAsD;AAAA,UAAzCC,OAAyC,QAAzCA,OAAyC;AAAA,UAArBC,CAAqB,QAAhCC,SAAgC;AAAA,UAAlBC,cAAkB,QAAlBA,cAAkB;AAAA,wBAC1C,KAAKC,KADqC;AAAA,UAC7EC,QAD6E,eAC7EA,QAD6E;AAAA,UACnEC,WADmE,eACnEA,WADmE;AAAA,UACtDC,OADsD,eACtDA,OADsD;AAGrF,UAAMC,WAAW,GAAG,0BAAcH,QAAd,CAApB;AACA,UAAMI,cAAc,GAAG,0BAAcJ,QAAd,IAA0BA,QAA1B,GAAqCE,OAA5D;AAEA,aACE,oBAAC,WAAD,6BACMG,wBAAiBC,aAAjB,CAA+B;AACjCC,QAAAA,WAAW,EAAE,CAACP,QAAD,EAAWE,OAAX,CADoB;AAEjCM,QAAAA,SAAS,EAAE,CAACP;AAFqB,OAA/B,CADN,EAKMR,aAAa,CAACgB,UAAd,CAAyBC,IAL/B,EAMMZ,cANN;AAOE,QAAA,SAAS,EAAEH,OAAO,CAACe;AAPrB,UASGL,wBAAiBM,SAAjB,CAA2B;AAAEC,QAAAA,OAAO,EAAER,cAAX;AAA2BI,QAAAA,SAAS,EAAE,CAAC,CAACP;AAAxC,OAA3B,CATH,EAUG,CAACE,WAAD,IACCU,2BAAkBC,MAAlB,CAAyBb,WAAzB,EAAsC;AACpCc,QAAAA,YAAY,EAAE;AAAA,iBAAO;AACnBC,YAAAA,SAAS,EAAExB,MAAM,CAACyB,cAAP,CAAsBhB,WADd;AAEnBJ,YAAAA,SAAS,oBACHD,CAAC,CAACsB,gBAAF,IAAsB;AAAEC,cAAAA,KAAK,EAAEvB,CAAC,CAACsB;AAAX,aADnB;AAFU,WAAP;AAAA;AADsB,OAAtC,CAXJ,CADF;AAsBD;;;EApDkBE,kB;;8BAAf5B,M,iBACiB,Q;8BADjBA,M,eAGe,W;8BAHfA,M,oBAK0C;AAC5CS,EAAAA,WAAW,YAAKT,MAAM,CAACwB,SAAZ;AADiC,C;8BAL1CxB,M;8BAAAA,M,iCAYC6B,uBAAgBC,YAAhB,CAA6B;AAAEH,EAAAA,KAAK,EAAE;AAAT,CAA7B,C;AACHlB,EAAAA,WAAW,EAAEsB,eAAe,CAACC,a;AAC7BC,EAAAA,KAAK,EAAEF,eAAe,CAACE,K;AACvBC,EAAAA,aAAa,EAAEC,SAAS,CAACC;;8BAfvBpC,M,kBAkBkB;AACpBqC,EAAAA,EAAE,EAAE;AADgB,C;8BAlBlBrC,M,iBAsBiBqB,0B;AAiCvBrB,MAAM,CAACsB,MAAP,GAAgB,mCAAuB;AAAEgB,EAAAA,SAAS,EAAEtC,MAAb;AAAqBuC,EAAAA,UAAU,EAAE;AAAjC,CAAvB,CAAhB;AAEA;;;;;;;;;;;eAUe,8BAAoDvC,MAApD,C","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponent,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  ColorComponentProps,\n  rtlTextContainer,\n  AlignValue,\n  ShorthandFactory,\n} from '../../utils';\nimport HeaderDescription, { HeaderDescriptionProps } from './HeaderDescription';\n\nimport { WithAsProp, ShorthandValue, withSafeTypeForAs } from '../../types';\n\nexport interface HeaderSlotClassNames {\n  description: string;\n}\n\nexport interface HeaderProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps,\n    ColorComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility;\n\n  /** Shorthand for Header.Description. */\n  description?: ShorthandValue<HeaderDescriptionProps>;\n\n  /** Align header content. */\n  align?: AlignValue;\n}\n\nclass Header extends UIComponent<WithAsProp<HeaderProps>, any> {\n  static displayName = 'Header';\n\n  static className = 'ui-header';\n\n  static slotClassNames: HeaderSlotClassNames = {\n    description: `${Header.className}__description`,\n  };\n\n  static create: ShorthandFactory<HeaderProps>;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({ color: true }),\n    description: customPropTypes.itemShorthand,\n    align: customPropTypes.align,\n    rtlAttributes: PropTypes.func,\n  };\n\n  static defaultProps = {\n    as: 'h1',\n  };\n\n  static Description = HeaderDescription;\n\n  renderComponent({ accessibility, ElementType, classes, variables: v, unhandledProps }) {\n    const { children, description, content } = this.props;\n\n    const hasChildren = childrenExist(children);\n    const contentElement = childrenExist(children) ? children : content;\n\n    return (\n      <ElementType\n        {...rtlTextContainer.getAttributes({\n          forElements: [children, content],\n          condition: !description,\n        })}\n        {...accessibility.attributes.root}\n        {...unhandledProps}\n        className={classes.root}\n      >\n        {rtlTextContainer.createFor({ element: contentElement, condition: !!description })}\n        {!hasChildren &&\n          HeaderDescription.create(description, {\n            defaultProps: () => ({\n              className: Header.slotClassNames.description,\n              variables: {\n                ...(v.descriptionColor && { color: v.descriptionColor }),\n              },\n            }),\n          })}\n      </ElementType>\n    );\n  }\n}\n\nHeader.create = createShorthandFactory({ Component: Header, mappedProp: 'content' });\n\n/**\n * A Header organises the content by declaring a content's topic.\n *\n * @accessibility\n * Headings communicate the organization of the content on the page. Web browsers, plug-ins, and assistive technologies can use them to provide in-page navigation.\n * Nest headings by their rank (or level). The most important heading has the rank 1 (<h1>), the least important heading rank 6 (<h6>). Headings with an equal or higher rank start a new section, headings with a lower rank start new subsections that are part of the higher ranked section.\n *\n * Other considerations:\n *  - when the description property is used in header, readers will narrate both header content and description within the element. In addition to that, both will be displayed in the list of headings.\n */\nexport default withSafeTypeForAs<typeof Header, HeaderProps, 'h1'>(Header);\n"],"file":"Header.js"}