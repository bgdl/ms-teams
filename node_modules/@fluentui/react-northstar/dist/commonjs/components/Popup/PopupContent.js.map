{"version":3,"sources":["components/Popup/PopupContent.tsx"],"names":["PopupContent","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibility","autoFocus","children","className","content","design","placement","pointing","pointerRef","styles","trapFocus","variables","getA11yProps","debugName","rtl","mapPropsToStyles","basePlacement","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","handleMouseEnter","e","handleMouseLeave","popupContentProps","root","rtlTextContainer","getAttributes","forElements","onMouseEnter","onMouseLeave","popupContent","pointer","slotClassNames","element","focusTrapZoneProps","length","as","autoFocusZoneProps","propTypes","commonPropTypes","createCommon","PropTypes","oneOf","bool","func","customPropTypes","ref","oneOfType","object","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  AutoFocusZone,\n  AutoFocusZoneProps,\n  FocusTrapZone,\n  FocusTrapZoneProps,\n  getElementType,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport Popper from 'popper.js';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  WithAsProp,\n  ComponentEventHandler,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport { getBasePlacement, PopperChildrenProps } from '../../utils/positioner';\n\nexport interface PopupContentSlotClassNames {\n  content: string;\n}\n\nexport interface PopupContentProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n\n  /**\n   * Called after user's mouse enter.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseEnter?: ComponentEventHandler<PopupContentProps>;\n\n  /**\n   * Called after user's mouse leave.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseLeave?: ComponentEventHandler<PopupContentProps>;\n\n  /** An actual placement value from Popper. */\n  placement?: PopperChildrenProps['placement'];\n\n  /** A popup can show a pointer to trigger. */\n  pointing?: boolean;\n\n  /** A ref to a pointer element. */\n  pointerRef?: React.Ref<HTMLDivElement>;\n\n  /** Controls whether or not focus trap should be applied, using boolean or FocusTrapZoneProps type value. */\n  trapFocus?: boolean | FocusTrapZoneProps;\n\n  /** Controls whether or not auto focus should be applied, using boolean or AutoFocusZoneProps type value. */\n  autoFocus?: boolean | AutoFocusZoneProps;\n}\n\nexport type PopupContentStylesProps = Required<Pick<PopupContentProps, 'pointing'>> & {\n  basePlacement: Popper.Position;\n};\n\nconst PopupContent: React.FC<WithAsProp<PopupContentProps>> &\n  FluentComponentStaticProps<PopupContentProps> & { slotClassNames: PopupContentSlotClassNames } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(PopupContent.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    autoFocus,\n    children,\n    className,\n    content,\n    design,\n    placement,\n    pointing,\n    pointerRef,\n    styles,\n    trapFocus,\n    variables,\n  } = props;\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: PopupContent.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<PopupContentStylesProps>(PopupContent.displayName, {\n    className: PopupContent.className,\n    mapPropsToStyles: () => ({\n      basePlacement: getBasePlacement(placement, context.rtl),\n      pointing,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(PopupContent.handledProps, props);\n\n  const handleMouseEnter = e => {\n    _.invoke(props, 'onMouseEnter', e, props);\n  };\n\n  const handleMouseLeave = e => {\n    _.invoke(props, 'onMouseLeave', e, props);\n  };\n\n  const popupContentProps: PopupContentProps = getA11yProps('root', {\n    className: classes.root,\n    ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n    ...unhandledProps,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n  });\n  const popupContent = (\n    <>\n      {pointing && <div className={classes.pointer} ref={pointerRef} />}\n      <div className={cx(PopupContent.slotClassNames.content, classes.content)}>\n        {childrenExist(children) ? children : content}\n      </div>\n    </>\n  );\n\n  let element: React.ReactElement;\n\n  if (trapFocus) {\n    const focusTrapZoneProps = {\n      ...popupContentProps,\n      ...((_.keys(trapFocus).length && trapFocus) as FocusTrapZoneProps),\n      as: ElementType,\n    };\n    element = <FocusTrapZone {...focusTrapZoneProps}>{popupContent}</FocusTrapZone>;\n  } else if (autoFocus) {\n    const autoFocusZoneProps = {\n      ...popupContentProps,\n      ...((_.keys(autoFocus).length && autoFocus) as AutoFocusZoneProps),\n      as: ElementType,\n    };\n    element = <AutoFocusZone {...autoFocusZoneProps}>{popupContent}</AutoFocusZone>;\n  } else {\n    element = <ElementType {...popupContentProps}>{popupContent}</ElementType>;\n  }\n\n  setEnd();\n\n  return element;\n};\n\nPopupContent.displayName = 'PopupContent';\nPopupContent.className = 'ui-popup__content';\n\nPopupContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  placement: PropTypes.oneOf<Popper.Placement>([\n    'auto-start',\n    'auto',\n    'auto-end',\n    'top-start',\n    'top',\n    'top-end',\n    'right-start',\n    'right',\n    'right-end',\n    'bottom-end',\n    'bottom',\n    'bottom-start',\n    'left-end',\n    'left',\n    'left-start',\n  ]),\n  pointing: PropTypes.bool,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pointerRef: customPropTypes.ref,\n  trapFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  autoFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n};\nPopupContent.handledProps = Object.keys(PopupContent.propTypes) as any;\n\nPopupContent.slotClassNames = {\n  content: `${PopupContent.className}__content`,\n};\n\nPopupContent.create = createShorthandFactory({ Component: PopupContent, mappedProp: 'content' });\n\n/**\n * A PopupContent displays the content of a Popup component.\n */\nexport default withSafeTypeForAs<typeof PopupContent, PopupContentProps>(PopupContent);\n"],"file":"PopupContent.js"}