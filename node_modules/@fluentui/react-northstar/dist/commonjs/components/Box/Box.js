"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactBindings = require("@fluentui/react-bindings");

var React = _interopRequireWildcard(require("react"));

var _reactFela = require("react-fela");

var _utils = require("../../utils");

var _types = require("../../types");

// @ts-ignore
var Box = function Box(props) {
  var context = React.useContext(_reactFela.ThemeContext);

  var _useTelemetry = (0, _reactBindings.useTelemetry)(Box.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var accessibility = props.accessibility,
      className = props.className,
      design = props.design,
      styles = props.styles,
      variables = props.variables,
      children = props.children,
      content = props.content;
  var getA11Props = (0, _reactBindings.useAccessibility)(accessibility, {
    debugName: Box.displayName,
    rtl: context.rtl
  });

  var _useStyles = (0, _reactBindings.useStyles)(Box.displayName, {
    className: Box.className,
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes;

  var unhandledProps = (0, _reactBindings.useUnhandledProps)(Box.handledProps, props);
  var ElementType = (0, _reactBindings.getElementType)(props);
  var result = React.createElement(ElementType, getA11Props('root', Object.assign({}, _utils.rtlTextContainer.getAttributes({
    forElements: [children, content]
  }), {
    className: classes.root
  }, unhandledProps)), (0, _utils.childrenExist)(children) ? children : content);
  setEnd();
  return result;
};

Box.className = 'ui-box';
Box.displayName = 'Box';
Box.propTypes = _utils.commonPropTypes.createCommon();
Box.handledProps = Object.keys(Box.propTypes);
Box.create = (0, _utils.createShorthandFactory)({
  Component: Box
});
/**
 * A Box is a basic component, commonly used for slots in other Fluent UI components.
 * By default it just renders a `div`.
 */

var _default = (0, _types.withSafeTypeForAs)(Box);

exports.default = _default;
//# sourceMappingURL=Box.js.map
