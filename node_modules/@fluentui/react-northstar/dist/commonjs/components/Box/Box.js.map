{"version":3,"sources":["components/Box/Box.tsx"],"names":["Box","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibility","className","design","styles","variables","children","content","getA11Props","debugName","rtl","mapPropsToInlineStyles","classes","unhandledProps","handledProps","ElementType","result","rtlTextContainer","getAttributes","forElements","root","propTypes","commonPropTypes","createCommon","Object","keys","create","Component"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AASA;;AAZA;AAqBA,IAAMA,GAA0E,GAAG,SAA7EA,GAA6E,CAAAC,KAAK,EAAI;AAC1F,MAAMC,OAAgC,GAAGC,KAAK,CAACC,UAAN,CAAiBC,uBAAjB,CAAzC;;AAD0F,sBAE7D,iCAAaL,GAAG,CAACM,WAAjB,EAA8BJ,OAAO,CAACK,SAAtC,CAF6D;AAAA,MAElFC,QAFkF,iBAElFA,QAFkF;AAAA,MAExEC,MAFwE,iBAExEA,MAFwE;;AAG1FD,EAAAA,QAAQ;AAHkF,MAKlFE,aALkF,GAKPT,KALO,CAKlFS,aALkF;AAAA,MAKnEC,SALmE,GAKPV,KALO,CAKnEU,SALmE;AAAA,MAKxDC,MALwD,GAKPX,KALO,CAKxDW,MALwD;AAAA,MAKhDC,MALgD,GAKPZ,KALO,CAKhDY,MALgD;AAAA,MAKxCC,SALwC,GAKPb,KALO,CAKxCa,SALwC;AAAA,MAK7BC,QAL6B,GAKPd,KALO,CAK7Bc,QAL6B;AAAA,MAKnBC,OALmB,GAKPf,KALO,CAKnBe,OALmB;AAO1F,MAAMC,WAAW,GAAG,qCAAiBP,aAAjB,EAAgC;AAClDQ,IAAAA,SAAS,EAAElB,GAAG,CAACM,WADmC;AAElDa,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAFqC,GAAhC,CAApB;;AAP0F,mBAYtE,8BAA0BnB,GAAG,CAACM,WAA9B,EAA2C;AAC7DK,IAAAA,SAAS,EAAEX,GAAG,CAACW,SAD8C;AAE7DS,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BT,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAFqC;AAQ7DK,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AARgD,GAA3C,CAZsE;AAAA,MAYlFE,OAZkF,cAYlFA,OAZkF;;AAuB1F,MAAMC,cAAc,GAAG,sCAAkBtB,GAAG,CAACuB,YAAtB,EAAoCtB,KAApC,CAAvB;AACA,MAAMuB,WAAW,GAAG,mCAAevB,KAAf,CAApB;AAEA,MAAMwB,MAAM,GACV,oBAAC,WAAD,EACMR,WAAW,CAAC,MAAD,oBACVS,wBAAiBC,aAAjB,CAA+B;AAAEC,IAAAA,WAAW,EAAE,CAACb,QAAD,EAAWC,OAAX;AAAf,GAA/B,CADU;AAEbL,IAAAA,SAAS,EAAEU,OAAO,CAACQ;AAFN,KAGVP,cAHU,EADjB,EAOG,0BAAcP,QAAd,IAA0BA,QAA1B,GAAqCC,OAPxC,CADF;AAYAP,EAAAA,MAAM;AAEN,SAAOgB,MAAP;AACD,CAzCD;;AA2CAzB,GAAG,CAACW,SAAJ,GAAgB,QAAhB;AACAX,GAAG,CAACM,WAAJ,GAAkB,KAAlB;AAEAN,GAAG,CAAC8B,SAAJ,GAAgBC,uBAAgBC,YAAhB,EAAhB;AACAhC,GAAG,CAACuB,YAAJ,GAAmBU,MAAM,CAACC,IAAP,CAAYlC,GAAG,CAAC8B,SAAhB,CAAnB;AAEA9B,GAAG,CAACmC,MAAJ,GAAa,mCAAuB;AAAEC,EAAAA,SAAS,EAAEpC;AAAb,CAAvB,CAAb;AAEA;;;;;eAIe,8BAAwCA,GAAxC,C","sourcesContent":["import { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport { Accessibility } from '@fluentui/accessibility';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  UIComponentProps,\n} from '../../utils';\nimport { ProviderContextPrepared, WithAsProp, withSafeTypeForAs, FluentComponentStaticProps } from '../../types';\n\nexport interface BoxProps extends UIComponentProps<BoxProps>, ContentComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n}\n\nexport type BoxStylesProps = never;\n\nconst Box: React.FC<WithAsProp<BoxProps>> & FluentComponentStaticProps<BoxProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Box.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, className, design, styles, variables, children, content } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Box.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<BoxStylesProps>(Box.displayName, {\n    className: Box.className,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const unhandledProps = useUnhandledProps(Box.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const result = (\n    <ElementType\n      {...getA11Props('root', {\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return result;\n};\n\nBox.className = 'ui-box';\nBox.displayName = 'Box';\n\nBox.propTypes = commonPropTypes.createCommon();\nBox.handledProps = Object.keys(Box.propTypes) as any;\n\nBox.create = createShorthandFactory({ Component: Box });\n\n/**\n * A Box is a basic component, commonly used for slots in other Fluent UI components.\n * By default it just renders a `div`.\n */\nexport default withSafeTypeForAs<typeof Box, BoxProps>(Box);\n"],"file":"Box.js"}