"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var accessibility_1 = require("@fluentui/accessibility");
var PropTypes = require("prop-types");
var React = require("react");
var _ = require("lodash");
var utils_1 = require("../../utils");
var types_1 = require("../../types");
var AccordionContent = /** @class */ (function (_super) {
    tslib_1.__extends(AccordionContent, _super);
    function AccordionContent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleClick = function (e) {
            _.invoke(_this.props, 'onClick', e, _this.props);
        };
        return _this;
    }
    AccordionContent.prototype.renderComponent = function (_a) {
        var ElementType = _a.ElementType, classes = _a.classes, unhandledProps = _a.unhandledProps, accessibility = _a.accessibility;
        var _b = this.props, children = _b.children, content = _b.content;
        return (React.createElement(ElementType, tslib_1.__assign({ onClick: this.handleClick }, utils_1.rtlTextContainer.getAttributes({ forElements: [children, content] }), accessibility.attributes.root, unhandledProps, { className: classes.root }), utils_1.childrenExist(children) ? children : content));
    };
    AccordionContent.displayName = 'AccordionContent';
    AccordionContent.className = 'ui-accordion__content';
    AccordionContent.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon()), { accordionTitleId: PropTypes.string, active: PropTypes.bool, onClick: PropTypes.func });
    AccordionContent.defaultProps = {
        accessibility: accessibility_1.accordionContentBehavior,
        as: 'dd',
    };
    return AccordionContent;
}(utils_1.UIComponent));
AccordionContent.create = utils_1.createShorthandFactory({
    Component: AccordionContent,
    mappedProp: 'content',
});
/**
 * An AccordionContent displays content hosted in an Accordion.
 */
exports.default = types_1.withSafeTypeForAs(AccordionContent);
