"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var PropTypes = require("prop-types");
var utils_1 = require("../../utils");
var types_1 = require("../../types");
var Divider = /** @class */ (function (_super) {
    tslib_1.__extends(Divider, _super);
    function Divider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Divider.prototype.renderComponent = function (_a) {
        var accessibility = _a.accessibility, ElementType = _a.ElementType, classes = _a.classes, unhandledProps = _a.unhandledProps;
        var _b = this.props, children = _b.children, content = _b.content;
        return (React.createElement(ElementType, tslib_1.__assign({}, utils_1.rtlTextContainer.getAttributes({ forElements: [children, content] }), accessibility.attributes.root, unhandledProps, { className: classes.root }), utils_1.childrenExist(children) ? children : content));
    };
    Divider.displayName = 'Divider';
    Divider.className = 'ui-divider';
    Divider.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon({ color: true })), { fitted: PropTypes.bool, size: PropTypes.number, important: PropTypes.bool, vertical: PropTypes.bool });
    Divider.defaultProps = {
        size: 0,
    };
    return Divider;
}(utils_1.UIComponent));
Divider.create = utils_1.createShorthandFactory({ Component: Divider, mappedProp: 'content' });
/**
 * A Divider visually segments content.
 */
exports.default = types_1.withSafeTypeForAs(Divider);
