"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var commonTests_1 = require("test/specs/commonTests");
var utils_1 = require("test/utils");
var keyboardKey = require("keyboard-key");
var Attachment_1 = require("src/components/Attachment/Attachment");
var Box_1 = require("src/components/Box/Box");
var Button_1 = require("src/components/Button/Button");
var Text_1 = require("src/components/Text/Text");
var attachmentImplementsShorthandProp = commonTests_1.implementsShorthandProp(Attachment_1.default);
var getAttachment = function (onClickAttachment, onClickButton) {
    return utils_1.mountWithProvider(React.createElement(Attachment_1.default, { actionable: true, action: {
            icon: 'more',
            onClick: onClickButton,
        }, onClick: onClickAttachment }));
};
describe('Attachment', function () {
    commonTests_1.isConformant(Attachment_1.default, { constructorName: 'Attachment' });
    attachmentImplementsShorthandProp('action', Button_1.default);
    attachmentImplementsShorthandProp('description', Text_1.default);
    attachmentImplementsShorthandProp('icon', Box_1.default, { mapsValueToProp: 'children' });
    attachmentImplementsShorthandProp('header', Text_1.default);
    describe('accessibility', function () {
        commonTests_1.handlesAccessibility(Attachment_1.default, {
            defaultRootRole: undefined,
        });
        test('handleClick is executed when Enter is pressed on attachment element', function () {
            var onClickAttachment = jest.fn();
            var onClickButton = jest.fn();
            var attachment = getAttachment(onClickAttachment, onClickButton);
            attachment.find("." + Attachment_1.default.className).simulate('keydown', { keyCode: keyboardKey.Enter });
            expect(onClickAttachment).toHaveBeenCalledTimes(1);
        });
        test('handleClick is Not executed on attachment element, when Enter is pressed on more option button', function () {
            var onClickAttachment = jest.fn();
            var onClickButton = jest.fn();
            var attachment = getAttachment(onClickAttachment, onClickButton);
            utils_1.findIntrinsicElement(attachment, "." + Attachment_1.default.slotClassNames.action).simulate('keydown', {
                keyCode: keyboardKey.Enter,
            });
            expect(onClickAttachment).not.toBeCalled();
        });
    });
});
