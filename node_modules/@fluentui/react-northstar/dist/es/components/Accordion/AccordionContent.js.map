{"version":3,"sources":["components/Accordion/AccordionContent.tsx"],"names":["accordionContentBehavior","PropTypes","React","childrenExist","createShorthandFactory","UIComponent","commonPropTypes","rtlTextContainer","withSafeTypeForAs","AccordionContent","e","props","ElementType","classes","unhandledProps","accessibility","children","content","handleClick","getAttributes","forElements","attributes","root","createCommon","accordionTitleId","string","active","bool","onClick","func","as","create","Component","mappedProp"],"mappings":";;;;;;;;;AAAA,SAASA,wBAAT,QAAyC,yBAAzC;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAGA,SACEC,aADF,EAEEC,sBAFF,EAGEC,WAHF,EAOEC,eAPF,EAQEC,gBARF,QAUO,aAVP;AAWA,SAA4CC,iBAA5C,QAAqE,aAArE;;IAkBMC,gB;;;;;;;;;;;;;;;;;;kEAmBU,UAACC,CAAD,EAA6B;AACzC,cAAS,MAAKC,KAAd,EAAqB,SAArB,EAAgCD,CAAhC,EAAmC,MAAKC,KAAxC;AACD,K;;;;;;;0CAEwE;AAAA,UAAvDC,WAAuD,QAAvDA,WAAuD;AAAA,UAA1CC,OAA0C,QAA1CA,OAA0C;AAAA,UAAjCC,cAAiC,QAAjCA,cAAiC;AAAA,UAAjBC,aAAiB,QAAjBA,aAAiB;AAAA,wBACzC,KAAKJ,KADoC;AAAA,UAC/DK,QAD+D,eAC/DA,QAD+D;AAAA,UACrDC,OADqD,eACrDA,OADqD;AAGvE,aACE,oBAAC,WAAD;AACE,QAAA,OAAO,EAAE,KAAKC;AADhB,SAEMX,gBAAgB,CAACY,aAAjB,CAA+B;AAAEC,QAAAA,WAAW,EAAE,CAACJ,QAAD,EAAWC,OAAX;AAAf,OAA/B,CAFN,EAGMF,aAAa,CAACM,UAAd,CAAyBC,IAH/B,EAIMR,cAJN;AAKE,QAAA,SAAS,EAAED,OAAO,CAACS;AALrB,UAOGnB,aAAa,CAACa,QAAD,CAAb,GAA0BA,QAA1B,GAAqCC,OAPxC,CADF;AAWD;;;;EArC4BZ,W;;gBAAzBI,gB,iBACiB,kB;;gBADjBA,gB;;gBAAAA,gB,eAKe,uB;;gBALfA,gB,iCAQCH,eAAe,CAACiB,YAAhB,E;AACHC,EAAAA,gBAAgB,EAAEvB,SAAS,CAACwB,M;AAC5BC,EAAAA,MAAM,EAAEzB,SAAS,CAAC0B,I;AAClBC,EAAAA,OAAO,EAAE3B,SAAS,CAAC4B;;;gBAXjBpB,gB,kBAckB;AACpBM,EAAAA,aAAa,EAAEf,wBADK;AAEpB8B,EAAAA,EAAE,EAAE;AAFgB,C;;AA0BxBrB,gBAAgB,CAACsB,MAAjB,GAA0B3B,sBAAsB,CAAC;AAC/C4B,EAAAA,SAAS,EAAEvB,gBADoC;AAE/CwB,EAAAA,UAAU,EAAE;AAFmC,CAAD,CAAhD;AAKA;;;;AAGA,eAAezB,iBAAiB,CAAiDC,gBAAjD,CAAhC","sourcesContent":["import { accordionContentBehavior } from '@fluentui/accessibility';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponent,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ShorthandFactory,\n} from '../../utils';\nimport { WithAsProp, ComponentEventHandler, withSafeTypeForAs } from '../../types';\n\nexport interface AccordionContentProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Id of the title it belongs to. */\n  accordionTitleId?: string;\n\n  /** Whether or not the content is visible. */\n  active?: boolean;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<AccordionContentProps>;\n}\n\nclass AccordionContent extends UIComponent<WithAsProp<AccordionContentProps>, any> {\n  static displayName = 'AccordionContent';\n\n  static create: ShorthandFactory<AccordionContentProps>;\n\n  static className = 'ui-accordion__content';\n\n  static propTypes = {\n    ...commonPropTypes.createCommon(),\n    accordionTitleId: PropTypes.string,\n    active: PropTypes.bool,\n    onClick: PropTypes.func,\n  };\n\n  static defaultProps = {\n    accessibility: accordionContentBehavior,\n    as: 'dd',\n  };\n\n  handleClick = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onClick', e, this.props);\n  };\n\n  renderComponent({ ElementType, classes, unhandledProps, accessibility }) {\n    const { children, content } = this.props;\n\n    return (\n      <ElementType\n        onClick={this.handleClick}\n        {...rtlTextContainer.getAttributes({ forElements: [children, content] })}\n        {...accessibility.attributes.root}\n        {...unhandledProps}\n        className={classes.root}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n  }\n}\n\nAccordionContent.create = createShorthandFactory({\n  Component: AccordionContent,\n  mappedProp: 'content',\n});\n\n/**\n * An AccordionContent displays content hosted in an Accordion.\n */\nexport default withSafeTypeForAs<typeof AccordionContent, AccordionContentProps>(AccordionContent);\n"],"file":"AccordionContent.js"}