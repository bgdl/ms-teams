{"version":3,"sources":["components/Tooltip/Tooltip.tsx"],"names":["tooltipAsLabelBehavior","useAccessibility","useAutoControlled","useTelemetry","Ref","customPropTypes","PropTypes","React","ThemeContext","childrenExist","commonPropTypes","isFromKeyboard","setWhatInputSource","getOrGenerateIdFromShorthand","createShorthandFactory","ALIGNMENTS","POSITIONS","Popper","PortalInner","TooltipContent","Tooltip","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","align","children","content","flipBoundary","mountNode","mouseLeaveDelay","offset","overflowBoundary","pointing","position","positionFixed","target","trigger","unstable_pinned","defaultValue","defaultOpen","value","open","initialValue","setOpen","contentRef","useRef","pointerTargetRef","triggerRef","closeTimeoutId","contentId","current","getA11Props","actionHandlers","close","e","setTooltipOpen","stopPropagation","preventDefault","mapPropsToBehavior","triggerAriaLabel","getContentOverrideProps","predefinedProps","onMouseEnter","onMouseLeave","renderPopperChildren","popperProps","tooltipContent","create","defaultProps","placement","pointerRef","generateKey","overrideProps","shouldStayOpen","relatedTarget","trySetOpen","newValue","newOpen","clearTimeout","defaultView","setTimeout","triggerNode","triggerElement","Children","only","triggerProps","onFocus","args","onBlur","element","cloneElement","rtl","className","slotClassNames","propTypes","createCommon","as","oneOf","bool","domNode","number","string","onOpenChange","func","every","disallow","shorthandAllowingChildren","oneOfType","object","handledProps","Object","keys","Content","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, tooltipAsLabelBehavior, TooltipBehaviorProps } from '@fluentui/accessibility';\nimport { useAccessibility, useAutoControlled, useTelemetry } from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  childrenExist,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  StyledComponentProps,\n  commonPropTypes,\n  isFromKeyboard,\n  setWhatInputSource,\n  getOrGenerateIdFromShorthand,\n  createShorthandFactory,\n} from '../../utils';\nimport { ShorthandValue, FluentComponentStaticProps, ProviderContextPrepared } from '../../types';\nimport {\n  ALIGNMENTS,\n  POSITIONS,\n  Popper,\n  PositioningProps,\n  PopperChildrenProps,\n  Alignment,\n  Position,\n} from '../../utils/positioner';\nimport PortalInner from '../Portal/PortalInner';\nimport TooltipContent, { TooltipContentProps } from './TooltipContent';\n\nexport interface TooltipSlotClassNames {\n  content: string;\n}\n\nexport interface TooltipProps\n  extends StyledComponentProps<TooltipProps>,\n    ChildrenComponentProps<React.ReactElement>,\n    ContentComponentProps<ShorthandValue<TooltipContentProps>>,\n    PositioningProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @default tooltipBehavior\n   * @available tooltipAsLabelBehavior\n   * */\n  accessibility?: Accessibility<TooltipBehaviorProps>;\n\n  /** Additional CSS class name(s) to apply.  */\n  className?: string;\n\n  /** Initial value for 'open'. */\n  defaultOpen?: boolean;\n\n  /** Existing element the tooltip should be bound to. */\n  mountNode?: HTMLElement;\n\n  /** Delay in ms for the mouse leave event, before the tooltip will be closed. */\n  mouseLeaveDelay?: number;\n\n  /** Defines whether tooltip is displayed. */\n  open?: boolean;\n\n  /**\n   * Event for request to change 'open' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onOpenChange?: (e: React.MouseEvent | React.FocusEvent | React.KeyboardEvent, data: TooltipProps) => void;\n\n  /** A tooltip can show a pointer to trigger. */\n  pointing?: boolean;\n\n  /**\n   * DOM element that should be used as tooltip's target - instead of 'trigger' element that is used by default.\n   */\n  target?: HTMLElement;\n\n  /** Element to be rendered in-place where the tooltip is defined. */\n  trigger?: JSX.Element;\n}\n\n/**\n * A Tooltip displays additional non-modal information on top of its target element.\n * Tooltip doesn't receive focus and cannot contain focusable elements.\n *\n * @accessibility\n * Implements [ARIA Tooltip](https://www.w3.org/TR/wai-aria-practices-1.1/#tooltip) design pattern.\n */\nconst Tooltip: React.FC<TooltipProps> &\n  FluentComponentStaticProps<TooltipProps> & {\n    Content: typeof TooltipContent;\n    slotClassNames: TooltipSlotClassNames;\n  } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Tooltip.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    align,\n    children,\n    content,\n    flipBoundary,\n    mountNode,\n    mouseLeaveDelay,\n    offset,\n    overflowBoundary,\n    pointing,\n    position,\n    positionFixed,\n    target,\n    trigger,\n    unstable_pinned,\n  } = props;\n\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    value: props.open,\n\n    initialValue: false,\n  });\n\n  const contentRef = React.useRef<HTMLElement>();\n  const pointerTargetRef = React.useRef<HTMLDivElement>();\n  const triggerRef = React.useRef<HTMLElement>();\n\n  const closeTimeoutId = React.useRef<number>();\n  // TODO: Consider `getOrGenerateIdFromShorthand()` as hook and make it SSR safe\n  const contentId = React.useRef<string>();\n  contentId.current = getOrGenerateIdFromShorthand('tooltip-content-', content, contentId.current);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      close: e => {\n        setTooltipOpen(false, e);\n        e.stopPropagation();\n        e.preventDefault();\n      },\n    },\n    mapPropsToBehavior: () => ({\n      'aria-describedby': props['aria-describedby'],\n      'aria-label': props['aria-label'],\n      'aria-labelledby': props['aria-labelledby'],\n      contentId: contentId.current,\n      triggerAriaLabel: trigger && trigger.props['aria-label'],\n      open,\n    }),\n  });\n\n  const getContentOverrideProps = (\n    predefinedProps: TooltipContentProps,\n  ): TooltipContentProps & Pick<React.DOMAttributes<HTMLDivElement>, 'onMouseEnter' | 'onMouseLeave'> => ({\n    onMouseEnter: (e: React.MouseEvent) => {\n      setTooltipOpen(true, e);\n      _.invoke(predefinedProps, 'onMouseEnter', e);\n    },\n    onMouseLeave: (e: React.MouseEvent) => {\n      setTooltipOpen(false, e);\n      _.invoke(predefinedProps, 'onMouseLeave', e);\n    },\n  });\n\n  const renderPopperChildren = (popperProps: PopperChildrenProps) => {\n    const tooltipContent = TooltipContent.create(content, {\n      defaultProps: () =>\n        getA11Props('tooltip', {\n          open,\n          placement: popperProps.placement,\n          pointing,\n          pointerRef: pointerTargetRef,\n        }),\n      generateKey: false,\n      overrideProps: getContentOverrideProps,\n    });\n\n    return tooltipContent ? <Ref innerRef={contentRef}>{tooltipContent}</Ref> : null;\n  };\n\n  const shouldStayOpen = (e: React.FocusEvent) =>\n    _.invoke(e, 'currentTarget.contains', e.relatedTarget) || _.invoke(contentRef.current, 'contains', e.relatedTarget);\n\n  const trySetOpen = (newValue: boolean, e: React.MouseEvent | React.FocusEvent | React.KeyboardEvent) => {\n    setOpen(newValue);\n    _.invoke(props, 'onOpenChange', e, { ...props, ...{ open: newValue } });\n  };\n\n  const setTooltipOpen = (newOpen: boolean, e: React.MouseEvent | React.KeyboardEvent) => {\n    clearTimeout(closeTimeoutId.current);\n\n    if (newOpen) {\n      trySetOpen(true, e);\n    } else {\n      closeTimeoutId.current = context.target.defaultView.setTimeout(() => {\n        trySetOpen(false, e);\n      }, mouseLeaveDelay);\n    }\n  };\n\n  const triggerNode: React.ReactElement | undefined = childrenExist(children) ? children : trigger;\n  const triggerElement = triggerNode && React.Children.only(triggerNode);\n\n  const triggerProps: React.HTMLAttributes<HTMLElement> = {\n    onFocus: (e, ...args) => {\n      if (isFromKeyboard()) {\n        trySetOpen(true, e);\n      }\n      _.invoke(triggerElement, 'props.onFocus', e, ...args);\n    },\n    onBlur: (e, ...args) => {\n      if (!shouldStayOpen(e)) {\n        trySetOpen(false, e);\n      }\n      _.invoke(triggerElement, 'props.onBlur', e, ...args);\n    },\n    onMouseEnter: (e, ...args) => {\n      setTooltipOpen(true, e);\n      setWhatInputSource(context.target, 'mouse');\n      _.invoke(triggerElement, 'props.onMouseEnter', e, ...args);\n    },\n    onMouseLeave: (e, ...args) => {\n      setTooltipOpen(false, e);\n      _.invoke(triggerElement, 'props.onMouseLeave', e, ...args);\n    },\n  };\n\n  const element = (\n    <>\n      {triggerElement && (\n        <Ref innerRef={triggerRef}>{React.cloneElement(triggerElement, getA11Props('trigger', triggerProps))}</Ref>\n      )}\n      <PortalInner mountNode={mountNode}>\n        <Popper\n          align={align}\n          flipBoundary={flipBoundary}\n          offset={offset}\n          overflowBoundary={overflowBoundary}\n          pointerTargetRef={pointerTargetRef}\n          position={position}\n          positionFixed={positionFixed}\n          enabled={open}\n          rtl={context.rtl}\n          targetRef={target || triggerRef}\n          children={renderPopperChildren}\n          unstable_pinned={unstable_pinned}\n        />\n      </PortalInner>\n    </>\n  );\n  setEnd();\n\n  return element;\n};\n\nTooltip.className = 'ui-tooltip';\nTooltip.displayName = 'Tooltip';\n\nTooltip.slotClassNames = {\n  content: `${Tooltip.className}__content`,\n};\n\nTooltip.defaultProps = {\n  align: 'center',\n  position: 'above',\n  mouseLeaveDelay: 10,\n  pointing: true,\n  accessibility: tooltipAsLabelBehavior,\n};\nTooltip.propTypes = {\n  ...commonPropTypes.createCommon({\n    as: false,\n    content: false,\n  }),\n  align: PropTypes.oneOf<Alignment>(ALIGNMENTS),\n  children: PropTypes.element,\n  defaultOpen: PropTypes.bool,\n  mountNode: customPropTypes.domNode,\n  mouseLeaveDelay: PropTypes.number,\n  offset: PropTypes.string,\n  open: PropTypes.bool,\n  onOpenChange: PropTypes.func,\n  pointing: PropTypes.bool,\n  position: PropTypes.oneOf<Position>(POSITIONS),\n  positionFixed: PropTypes.bool,\n  target: customPropTypes.domNode,\n  trigger: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.element]),\n  content: customPropTypes.shorthandAllowingChildren,\n  unstable_pinned: PropTypes.bool,\n  flipBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<Element>,\n    PropTypes.oneOf<'scrollParent' | 'window' | 'viewport'>(['scrollParent', 'window', 'viewport']),\n  ]),\n  overflowBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<Element>,\n    PropTypes.oneOf<'scrollParent' | 'window' | 'viewport'>(['scrollParent', 'window', 'viewport']),\n  ]),\n};\nTooltip.handledProps = Object.keys(Tooltip.propTypes) as any;\n\nTooltip.Content = TooltipContent;\n\nTooltip.create = createShorthandFactory({ Component: Tooltip, mappedProp: 'content' });\n\nexport default Tooltip;\n"],"file":"Tooltip.js"}