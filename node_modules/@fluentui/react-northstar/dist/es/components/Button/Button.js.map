{"version":3,"sources":["components/Button/Button.tsx"],"names":["buttonBehavior","customPropTypes","PropTypes","React","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","Box","Loader","withSafeTypeForAs","ButtonGroup","ButtonContent","getElementType","useAccessibility","useStyles","useTelemetry","useUnhandledProps","ThemeContext","Button","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","active","as","children","content","icon","loader","disabled","iconPosition","loading","text","primary","inverted","size","iconOnly","fluid","circular","className","styles","variables","design","hasChildren","getA11Props","debugName","mapPropsToBehavior","actionHandlers","performClick","event","preventDefault","handleClick","rtl","mapPropsToStyles","hasContent","mapPropsToInlineStyles","classes","resolvedStyles","unhandledProps","handledProps","ElementType","renderIcon","create","defaultProps","renderLoader","role","undefined","e","handleFocus","result","getAttributes","forElements","onClick","root","onFocus","propTypes","createCommon","bool","shorthandAllowingChildren","oneOf","itemShorthandWithoutJSX","func","every","disallow","secondary","Object","keys","Group","Content","Component","mappedProp"],"mappings":";;AAAA,SAAwBA,cAAxB,QAA8C,yBAA9C;AACA,OAAO,KAAKC,eAAZ,MAAiC,2BAAjC;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAGA,SACEC,aADF,EAEEC,sBAFF,EAMEC,eANF,EAOEC,gBAPF,QASO,aATP;AAUA,OAAOC,GAAP,MAA8B,YAA9B;AACA,OAAOC,MAAP,MAAoC,kBAApC;AACA,SAIEC,iBAJF,QAOO,aAPP;AAQA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAAkD,iBAAlD;AACA,SAASC,cAAT,EAAyBC,gBAAzB,EAA2CC,SAA3C,EAAsDC,YAAtD,EAAoEC,iBAApE,QAA6F,0BAA7F,C,CACA;;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAsEA,IAAMC,MACkG,GAAG,SADrGA,MACqG,CAAAC,KAAK,EAAI;AAClH,MAAMC,OAAgC,GAAGlB,KAAK,CAACmB,UAAN,CAAiBJ,YAAjB,CAAzC;;AADkH,sBAErFF,YAAY,CAACG,MAAM,CAACI,WAAR,EAAqBF,OAAO,CAACG,SAA7B,CAFyE;AAAA,MAE1GC,QAF0G,iBAE1GA,QAF0G;AAAA,MAEhGC,MAFgG,iBAEhGA,MAFgG;;AAGlHD,EAAAA,QAAQ;AAH0G,MAMhHE,aANgH,GA4B9GP,KA5B8G,CAMhHO,aANgH;AAAA,MAQhHC,MARgH,GA4B9GR,KA5B8G,CAQhHQ,MARgH;AAAA,MAShHC,EATgH,GA4B9GT,KA5B8G,CAShHS,EATgH;AAAA,MAUhHC,QAVgH,GA4B9GV,KA5B8G,CAUhHU,QAVgH;AAAA,MAWhHC,OAXgH,GA4B9GX,KA5B8G,CAWhHW,OAXgH;AAAA,MAYhHC,IAZgH,GA4B9GZ,KA5B8G,CAYhHY,IAZgH;AAAA,MAahHC,MAbgH,GA4B9Gb,KA5B8G,CAahHa,MAbgH;AAAA,MAchHC,QAdgH,GA4B9Gd,KA5B8G,CAchHc,QAdgH;AAAA,MAehHC,YAfgH,GA4B9Gf,KA5B8G,CAehHe,YAfgH;AAAA,MAgBhHC,OAhBgH,GA4B9GhB,KA5B8G,CAgBhHgB,OAhBgH;AAAA,MAiBhHC,IAjBgH,GA4B9GjB,KA5B8G,CAiBhHiB,IAjBgH;AAAA,MAkBhHC,OAlBgH,GA4B9GlB,KA5B8G,CAkBhHkB,OAlBgH;AAAA,MAmBhHC,QAnBgH,GA4B9GnB,KA5B8G,CAmBhHmB,QAnBgH;AAAA,MAoBhHC,IApBgH,GA4B9GpB,KA5B8G,CAoBhHoB,IApBgH;AAAA,MAqBhHC,QArBgH,GA4B9GrB,KA5B8G,CAqBhHqB,QArBgH;AAAA,MAsBhHC,KAtBgH,GA4B9GtB,KA5B8G,CAsBhHsB,KAtBgH;AAAA,MAuBhHC,QAvBgH,GA4B9GvB,KA5B8G,CAuBhHuB,QAvBgH;AAAA,MAwBhHC,SAxBgH,GA4B9GxB,KA5B8G,CAwBhHwB,SAxBgH;AAAA,MAyBhHC,MAzBgH,GA4B9GzB,KA5B8G,CAyBhHyB,MAzBgH;AAAA,MA0BhHC,SA1BgH,GA4B9G1B,KA5B8G,CA0BhH0B,SA1BgH;AAAA,MA2BhHC,MA3BgH,GA4B9G3B,KA5B8G,CA2BhH2B,MA3BgH;AA8BlH,MAAMC,WAAW,GAAG5C,aAAa,CAAC0B,QAAD,CAAjC;AAEA,MAAMmB,WAAW,GAAGnC,gBAAgB,CAACa,aAAD,EAAgB;AAClDuB,IAAAA,SAAS,EAAE/B,MAAM,CAACI,WADgC;AAElD4B,IAAAA,kBAAkB,EAAE;AAAA,aAAO;AACzBtB,QAAAA,EAAE,EAAFA,EADyB;AAEzBD,QAAAA,MAAM,EAANA,MAFyB;AAGzBM,QAAAA,QAAQ,EAARA,QAHyB;AAIzBE,QAAAA,OAAO,EAAPA;AAJyB,OAAP;AAAA,KAF8B;AAQlDgB,IAAAA,cAAc,EAAE;AACdC,MAAAA,YAAY,EAAE,sBAAAC,KAAK,EAAI;AACrBA,QAAAA,KAAK,CAACC,cAAN;AACAC,QAAAA,WAAW,CAACF,KAAD,CAAX;AACD;AAJa,KARkC;AAclDG,IAAAA,GAAG,EAAEpC,OAAO,CAACoC;AAdqC,GAAhB,CAApC;;AAhCkH,mBAgDtE1C,SAAS,CAAoBI,MAAM,CAACI,WAA3B,EAAwC;AAC3FqB,IAAAA,SAAS,EAAEzB,MAAM,CAACyB,SADyE;AAE3Fc,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AACvBrB,QAAAA,IAAI,EAAJA,IADuB;AAEvBC,QAAAA,OAAO,EAAPA,OAFuB;AAGvBJ,QAAAA,QAAQ,EAARA,QAHuB;AAIvBS,QAAAA,QAAQ,EAARA,QAJuB;AAKvBH,QAAAA,IAAI,EAAJA,IALuB;AAMvBJ,QAAAA,OAAO,EAAPA,OANuB;AAOvBG,QAAAA,QAAQ,EAARA,QAPuB;AAQvBE,QAAAA,QAAQ,EAARA,QARuB;AASvBN,QAAAA,YAAY,EAAZA,YATuB;AAUvBO,QAAAA,KAAK,EAALA,KAVuB;AAWvBiB,QAAAA,UAAU,EAAE,CAAC,CAAC5B;AAXS,OAAP;AAAA,KAFyE;AAe3F6B,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BhB,QAAAA,SAAS,EAATA,SAD6B;AAE7BG,QAAAA,MAAM,EAANA,MAF6B;AAG7BF,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAfmE;AAqB3FW,IAAAA,GAAG,EAAEpC,OAAO,CAACoC;AArB8E,GAAxC,CAhD6D;AAAA,MAgD1GI,OAhD0G,cAgD1GA,OAhD0G;AAAA,MAgDzFC,cAhDyF,cAgDjGjB,MAhDiG;;AAwElH,MAAMkB,cAAc,GAAG9C,iBAAiB,CAACE,MAAM,CAAC6C,YAAR,EAAsB5C,KAAtB,CAAxC;AACA,MAAM6C,WAAW,GAAGpD,cAAc,CAACO,KAAD,CAAlC;;AAEA,MAAM8C,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,WAAO1D,GAAG,CAAC2D,MAAJ,CAAWnC,IAAX,EAAiB;AACtBoC,MAAAA,YAAY,EAAE;AAAA,eACZnB,WAAW,CAAC,MAAD,EAAS;AAClBJ,UAAAA,MAAM,EAAEiB,cAAc,CAAC9B;AADL,SAAT,CADC;AAAA;AADQ,KAAjB,CAAP;AAMD,GAPD;;AASA,MAAMqC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,WAAO5D,MAAM,CAAC0D,MAAP,CAAclC,MAAM,IAAI,EAAxB,EAA4B;AACjCmC,MAAAA,YAAY,EAAE;AAAA,eACZnB,WAAW,CAAC,QAAD,EAAW;AACpBqB,UAAAA,IAAI,EAAEC,SADc;AAEpB1B,UAAAA,MAAM,EAAEiB,cAAc,CAAC7B;AAFH,SAAX,CADC;AAAA;AADmB,KAA5B,CAAP;AAOD,GARD;;AAUA,MAAMuB,WAAW,GAAG,SAAdA,WAAc,CAACgB,CAAD,EAA6B;AAC/C,QAAItC,QAAJ,EAAc;AACZsC,MAAAA,CAAC,CAACjB,cAAF;AACA;AACD;;AAED,YAASnC,KAAT,EAAgB,SAAhB,EAA2BoD,CAA3B,EAA8BpD,KAA9B;AACD,GAPD;;AASA,MAAMqD,WAAW,GAAG,SAAdA,WAAc,CAACD,CAAD,EAA6B;AAC/C,YAASpD,KAAT,EAAgB,SAAhB,EAA2BoD,CAA3B,EAA8BpD,KAA9B;AACD,GAFD;;AAIA,MAAMsD,MAAM,GACV,oBAAC,WAAD,eACMnE,gBAAgB,CAACoE,aAAjB,CAA+B;AAAEC,IAAAA,WAAW,EAAE,CAAC9C,QAAD;AAAf,GAA/B,CADN,EAEMmB,WAAW,CAAC,MAAD;AACb4B,IAAAA,OAAO,EAAErB,WADI;AAEbtB,IAAAA,QAAQ,EAARA,QAFa;AAGbU,IAAAA,SAAS,EAAEiB,OAAO,CAACiB,IAHN;AAIbC,IAAAA,OAAO,EAAEN;AAJI,KAKVV,cALU,EAFjB,GAUGf,WAAW,GACVlB,QADU,GAGV,0CACGM,OAAO,IAAIiC,YAAY,EAD1B,EAEGlC,YAAY,KAAK,OAAjB,IAA4B+B,UAAU,EAFzC,EAGGtD,aAAa,CAACuD,MAAd,CAAqBpC,OAArB,EAA8B;AAC7BqC,IAAAA,YAAY,EAAE;AAAA,aAAMnB,WAAW,CAAC,SAAD,EAAY;AAAEpB,QAAAA,EAAE,EAAE,MAAN;AAAcW,QAAAA,IAAI,EAAJA,IAAd;AAAoBK,QAAAA,MAAM,EAAEiB,cAAc,CAAC/B;AAA3C,OAAZ,CAAjB;AAAA;AADe,GAA9B,CAHH,EAMGI,YAAY,KAAK,OAAjB,IAA4B+B,UAAU,EANzC,CAbJ,CADF;AA0BAxC,EAAAA,MAAM;AAEN,SAAOgD,MAAP;AACD,CAzID;;AA2IAvD,MAAM,CAACiD,YAAP,GAAsB;AACpBvC,EAAAA,EAAE,EAAE,QADgB;AAEpBF,EAAAA,aAAa,EAAE3B,cAFK;AAGpBwC,EAAAA,IAAI,EAAE;AAHc,CAAtB;AAMArB,MAAM,CAACI,WAAP,GAAqB,QAArB;AACAJ,MAAM,CAACyB,SAAP,GAAmB,WAAnB;AAEAzB,MAAM,CAAC6D,SAAP,qBACK1E,eAAe,CAAC2E,YAAhB,CAA6B;AAC9BlD,EAAAA,OAAO,EAAE;AADqB,CAA7B,CADL;AAIEY,EAAAA,QAAQ,EAAEzC,SAAS,CAACgF,IAJtB;AAKEhD,EAAAA,QAAQ,EAAEhC,SAAS,CAACgF,IALtB;AAMExC,EAAAA,KAAK,EAAExC,SAAS,CAACgF,IANnB;AAOElD,EAAAA,IAAI,EAAE/B,eAAe,CAACkF,yBAPxB;AAQE1C,EAAAA,QAAQ,EAAEvC,SAAS,CAACgF,IARtB;AASE/C,EAAAA,YAAY,EAAEjC,SAAS,CAACkF,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,CAAhB,CAThB;AAUE7C,EAAAA,QAAQ,EAAErC,SAAS,CAACgF,IAVtB;AAWEjD,EAAAA,MAAM,EAAEhC,eAAe,CAACoF,uBAX1B;AAYEjD,EAAAA,OAAO,EAAElC,SAAS,CAACgF,IAZrB;AAaEL,EAAAA,OAAO,EAAE3E,SAAS,CAACoF,IAbrB;AAcEP,EAAAA,OAAO,EAAE7E,SAAS,CAACoF,IAdrB;AAeEhD,EAAAA,OAAO,EAAErC,eAAe,CAACsF,KAAhB,CAAsB,CAACtF,eAAe,CAACuF,QAAhB,CAAyB,CAAC,WAAD,CAAzB,CAAD,EAA0CtF,SAAS,CAACgF,IAApD,CAAtB,CAfX;AAgBE7C,EAAAA,IAAI,EAAEnC,SAAS,CAACgF,IAhBlB;AAiBEO,EAAAA,SAAS,EAAExF,eAAe,CAACsF,KAAhB,CAAsB,CAACtF,eAAe,CAACuF,QAAhB,CAAyB,CAAC,SAAD,CAAzB,CAAD,EAAwCtF,SAAS,CAACgF,IAAlD,CAAtB,CAjBb;AAkBE1C,EAAAA,IAAI,EAAEvC,eAAe,CAACuC;AAlBxB;AAqBArB,MAAM,CAAC6C,YAAP,GAAsB0B,MAAM,CAACC,IAAP,CAAYxE,MAAM,CAAC6D,SAAnB,CAAtB;AAEA7D,MAAM,CAACyE,KAAP,GAAejF,WAAf;AACAQ,MAAM,CAAC0E,OAAP,GAAiBjF,aAAjB;AAEAO,MAAM,CAACgD,MAAP,GAAgB9D,sBAAsB,CAAC;AAAEyF,EAAAA,SAAS,EAAE3E,MAAb;AAAqB4E,EAAAA,UAAU,EAAE;AAAjC,CAAD,CAAtC;AAEA;;;;;;;AAMA,eAAerF,iBAAiB,CAAuCS,MAAvC,CAAhC","sourcesContent":["import { Accessibility, buttonBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  SizeValue,\n} from '../../utils';\nimport Box, { BoxProps } from '../Box/Box';\nimport Loader, { LoaderProps } from '../Loader/Loader';\nimport {\n  ComponentEventHandler,\n  WithAsProp,\n  ShorthandValue,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonContent, { ButtonContentProps } from './ButtonContent';\nimport { getElementType, useAccessibility, useStyles, useTelemetry, useUnhandledProps } from '@fluentui/react-bindings';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nexport interface ButtonProps\n  extends UIComponentProps,\n    ContentComponentProps<ShorthandValue<ButtonContentProps>>,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility;\n\n  /** A button can appear circular. */\n  circular?: boolean;\n\n  /** A button can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A button can fill the width of its container. */\n  fluid?: boolean;\n\n  /** A button can have an icon. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** A button can contain only an icon. */\n  iconOnly?: boolean;\n\n  /** An icon button can format its Icon to appear before or after its content */\n  iconPosition?: 'before' | 'after';\n\n  /** A button that inherits its background and has a subtle appearance */\n  inverted?: boolean;\n\n  /** Shorthand to customize a button's loader. */\n  loader?: ShorthandValue<LoaderProps>;\n\n  /** A button can show a loading indicator. */\n  loading?: boolean;\n\n  /**\n   * Called after a user clicks the button.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<ButtonProps>;\n\n  /**\n   * Called after a user focuses the button.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ButtonProps>;\n\n  /** A button can emphasize that it represents the primary action. */\n  primary?: boolean;\n\n  /** A button can be formatted to show only text in order to indicate a less-pronounced action. */\n  text?: boolean;\n\n  /** A button can emphasize that it represents an alternative action. */\n  secondary?: boolean;\n\n  /** A button can be sized. */\n  size?: SizeValue;\n}\n\nexport type ButtonStylesProps = Pick<\n  ButtonProps,\n  'text' | 'primary' | 'disabled' | 'circular' | 'size' | 'loading' | 'inverted' | 'iconOnly' | 'fluid' | 'iconPosition'\n> & {\n  hasContent?: boolean;\n};\n\nconst Button: React.FC<WithAsProp<ButtonProps>> &\n  FluentComponentStaticProps<ButtonProps> & { Group: typeof ButtonGroup; Content: typeof ButtonContent } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Button.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    // @ts-ignore\n    active,\n    as,\n    children,\n    content,\n    icon,\n    loader,\n    disabled,\n    iconPosition,\n    loading,\n    text,\n    primary,\n    inverted,\n    size,\n    iconOnly,\n    fluid,\n    circular,\n    className,\n    styles,\n    variables,\n    design,\n  } = props;\n\n  const hasChildren = childrenExist(children);\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Button.displayName,\n    mapPropsToBehavior: () => ({\n      as,\n      active,\n      disabled,\n      loading,\n    }),\n    actionHandlers: {\n      performClick: event => {\n        event.preventDefault();\n        handleClick(event);\n      },\n    },\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ButtonStylesProps>(Button.displayName, {\n    className: Button.className,\n    mapPropsToStyles: () => ({\n      text,\n      primary,\n      disabled,\n      circular,\n      size,\n      loading,\n      inverted,\n      iconOnly,\n      iconPosition,\n      fluid,\n      hasContent: !!content,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const unhandledProps = useUnhandledProps(Button.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const renderIcon = () => {\n    return Box.create(icon, {\n      defaultProps: () =>\n        getA11Props('icon', {\n          styles: resolvedStyles.icon,\n        }),\n    });\n  };\n\n  const renderLoader = () => {\n    return Loader.create(loader || {}, {\n      defaultProps: () =>\n        getA11Props('loader', {\n          role: undefined,\n          styles: resolvedStyles.loader,\n        }),\n    });\n  };\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const result = (\n    <ElementType\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n      {...getA11Props('root', {\n        onClick: handleClick,\n        disabled,\n        className: classes.root,\n        onFocus: handleFocus,\n        ...unhandledProps,\n      })}\n    >\n      {hasChildren ? (\n        children\n      ) : (\n        <>\n          {loading && renderLoader()}\n          {iconPosition !== 'after' && renderIcon()}\n          {ButtonContent.create(content, {\n            defaultProps: () => getA11Props('content', { as: 'span', size, styles: resolvedStyles.content }),\n          })}\n          {iconPosition === 'after' && renderIcon()}\n        </>\n      )}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return result;\n};\n\nButton.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n  size: 'medium',\n};\n\nButton.displayName = 'Button';\nButton.className = 'ui-button';\n\nButton.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n  }),\n  circular: PropTypes.bool,\n  disabled: PropTypes.bool,\n  fluid: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  iconOnly: PropTypes.bool,\n  iconPosition: PropTypes.oneOf(['before', 'after']),\n  inverted: PropTypes.bool,\n  loader: customPropTypes.itemShorthandWithoutJSX,\n  loading: PropTypes.bool,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  text: PropTypes.bool,\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  size: customPropTypes.size,\n};\n\nButton.handledProps = Object.keys(Button.propTypes) as any;\n\nButton.Group = ButtonGroup;\nButton.Content = ButtonContent;\n\nButton.create = createShorthandFactory({ Component: Button, mappedProp: 'content' });\n\n/**\n * A Button enables users to take an action, such as submitting a form, opening a dialog, etc.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\nexport default withSafeTypeForAs<typeof Button, ButtonProps, 'button'>(Button);\n"],"file":"Button.js"}