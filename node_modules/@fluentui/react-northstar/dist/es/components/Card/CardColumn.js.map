{"version":3,"sources":["components/Card/CardColumn.tsx"],"names":["React","withSafeTypeForAs","commonPropTypes","createShorthandFactory","useTelemetry","useStyles","getElementType","useUnhandledProps","useAccessibility","ThemeContext","CardColumn","props","context","useContext","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToInlineStyles","classes","element","root","propTypes","createCommon","Object","keys","create","Component"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAqBC,iBAArB,QAAmG,aAAnG;AAEA,SAAmDC,eAAnD,EAAoEC,sBAApE,QAAkG,aAAlG;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,cAAlC,EAAkDC,iBAAlD,EAAqEC,gBAArE,QAA6F,0BAA7F,C,CACA;;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAWA,IAAMC,UAA+F,GAAG,SAAlGA,UAAkG,CAAAC,KAAK,EAAI;AAC/G,MAAMC,OAAgC,GAAGZ,KAAK,CAACa,UAAN,CAAiBJ,YAAjB,CAAzC;;AAD+G,sBAElFL,YAAY,CAACM,UAAU,CAACI,WAAZ,EAAyBF,OAAO,CAACG,SAAjC,CAFsE;AAAA,MAEvGC,QAFuG,iBAEvGA,QAFuG;AAAA,MAE7FC,MAF6F,iBAE7FA,MAF6F;;AAG/GD,EAAAA,QAAQ;AAHuG,MAKvGE,SALuG,GAKpDP,KALoD,CAKvGO,SALuG;AAAA,MAK5FC,MAL4F,GAKpDR,KALoD,CAK5FQ,MAL4F;AAAA,MAKpFC,MALoF,GAKpDT,KALoD,CAKpFS,MALoF;AAAA,MAK5EC,SAL4E,GAKpDV,KALoD,CAK5EU,SAL4E;AAAA,MAKjEC,QALiE,GAKpDX,KALoD,CAKjEW,QALiE;AAM/G,MAAMC,WAAW,GAAGjB,cAAc,CAACK,KAAD,CAAlC;AACA,MAAMa,cAAc,GAAGjB,iBAAiB,CAACG,UAAU,CAACe,YAAZ,EAA0Bd,KAA1B,CAAxC;AACA,MAAMe,YAAY,GAAGlB,gBAAgB,CAACG,KAAK,CAACgB,aAAP,EAAsB;AACzDC,IAAAA,SAAS,EAAElB,UAAU,CAACI,WADmC;AAEzDe,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAF4C,GAAtB,CAArC;;AAR+G,mBAa3FxB,SAAS,CAAwBK,UAAU,CAACI,WAAnC,EAAgD;AAC3EI,IAAAA,SAAS,EAAER,UAAU,CAACQ,SADqD;AAE3EY,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BZ,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAFmD;AAQ3EQ,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAR8D,GAAhD,CAbkF;AAAA,MAavGE,OAbuG,cAavGA,OAbuG;;AAwB/G,MAAMC,OAAO,GACX,oBAAC,WAAD,EACMN,YAAY,CAAC,MAAD;AACdR,IAAAA,SAAS,EAAEa,OAAO,CAACE;AADL,KAEXT,cAFW,EADlB,EAMGF,QANH,CADF;AAUAL,EAAAA,MAAM;AACN,SAAOe,OAAP;AACD,CApCD;;AAsCAtB,UAAU,CAACI,WAAX,GAAyB,YAAzB;AACAJ,UAAU,CAACQ,SAAX,GAAuB,iBAAvB;AAEAR,UAAU,CAACwB,SAAX,qBACKhC,eAAe,CAACiC,YAAhB,EADL;AAIAzB,UAAU,CAACe,YAAX,GAA0BW,MAAM,CAACC,IAAP,CAAY3B,UAAU,CAACwB,SAAvB,CAA1B;AAEAxB,UAAU,CAAC4B,MAAX,GAAoBnC,sBAAsB,CAAC;AAAEoC,EAAAA,SAAS,EAAE7B;AAAb,CAAD,CAA1C;AAEA;;;;AAGA,eAAeT,iBAAiB,CAA4CS,UAA5C,CAAhC","sourcesContent":["import * as React from 'react';\nimport { WithAsProp, withSafeTypeForAs, FluentComponentStaticProps, ProviderContextPrepared } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { UIComponentProps, ChildrenComponentProps, commonPropTypes, createShorthandFactory } from '../../utils';\nimport { useTelemetry, useStyles, getElementType, useUnhandledProps, useAccessibility } from '@fluentui/react-bindings';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nexport interface CardColumnProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\n\nexport type CardColumnStylesProps = never;\n\nconst CardColumn: React.FC<WithAsProp<CardColumnProps>> & FluentComponentStaticProps<CardColumnProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(CardColumn.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardColumn.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardColumn.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardColumnStylesProps>(CardColumn.displayName, {\n    className: CardColumn.className,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardColumn.displayName = 'CardColumn';\nCardColumn.className = 'ui-card__column';\n\nCardColumn.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nCardColumn.handledProps = Object.keys(CardColumn.propTypes) as any;\n\nCardColumn.create = createShorthandFactory({ Component: CardColumn });\n\n/**\n * A CardColumn is used to display content in card as column\n */\nexport default withSafeTypeForAs<typeof CardColumn, CardColumnProps, 'div'>(CardColumn);\n"],"file":"CardColumn.js"}