{"version":3,"sources":["components/Card/CardBody.tsx"],"names":["React","withSafeTypeForAs","commonPropTypes","createShorthandFactory","useTelemetry","useStyles","getElementType","useUnhandledProps","useAccessibility","PropTypes","ThemeContext","CardBody","props","context","useContext","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","fitted","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","createCommon","bool","Object","keys","create","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { WithAsProp, withSafeTypeForAs, FluentComponentStaticProps, ProviderContextPrepared } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { UIComponentProps, ChildrenComponentProps, commonPropTypes, createShorthandFactory } from '../../utils';\nimport { useTelemetry, useStyles, getElementType, useUnhandledProps, useAccessibility } from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nexport interface CardBodyProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A body can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardBodyStylesProps = Pick<CardBodyProps, 'fitted'>;\n\nconst CardBody: React.FC<WithAsProp<CardBodyProps>> & FluentComponentStaticProps<CardBodyProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(CardBody.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardBody.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardBody.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardBodyStylesProps>(CardBody.displayName, {\n    className: CardBody.className,\n    mapPropsToStyles: () => ({ fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardBody.displayName = 'CardBody';\nCardBody.className = 'ui-card__body';\n\nCardBody.propTypes = {\n  ...commonPropTypes.createCommon(),\n  fitted: PropTypes.bool,\n};\n\nCardBody.handledProps = Object.keys(CardBody.propTypes) as any;\n\nCardBody.create = createShorthandFactory({ Component: CardBody });\n\n/**\n * A CardBody is used to display data in Card body.\n */\nexport default withSafeTypeForAs<typeof CardBody, CardBodyProps, 'div'>(CardBody);\n"],"file":"CardBody.js"}