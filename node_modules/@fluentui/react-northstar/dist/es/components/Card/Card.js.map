{"version":3,"sources":["components/Card/Card.tsx"],"names":["React","withSafeTypeForAs","cardBehavior","CustomPropTypes","commonPropTypes","createShorthandFactory","useTelemetry","useStyles","getElementType","useUnhandledProps","useAccessibility","PropTypes","ThemeContext","CardHeader","CardBody","CardPreview","CardFooter","CardTopControls","CardColumn","Card","props","context","useContext","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","compact","horizontal","centered","size","fluid","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","performClick","e","handleClick","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","onClick","slotClassNames","header","body","footer","preview","topControls","propTypes","createCommon","func","bool","defaultProps","Object","keys","Header","Body","Footer","Preview","TopControls","Column","create","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  WithAsProp,\n  withSafeTypeForAs,\n  ComponentEventHandler,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport { Accessibility, cardBehavior, CardBehaviorProps } from '@fluentui/accessibility';\nimport * as CustomPropTypes from '@fluentui/react-proptypes';\nimport { UIComponentProps, commonPropTypes, createShorthandFactory, SizeValue } from '../../utils';\nimport { useTelemetry, useStyles, getElementType, useUnhandledProps, useAccessibility } from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport CardHeader from './CardHeader';\nimport CardBody from './CardBody';\nimport CardPreview from './CardPreview';\nimport CardFooter from './CardFooter';\nimport CardTopControls from './CardTopControls';\nimport CardColumn from './CardColumn';\n\nexport interface CardProps extends UIComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<CardBehaviorProps>;\n\n  /** A primary content. */\n  children?: React.ReactNode;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<CardProps>;\n\n  /** A card can be compact, without any padding inside. */\n  compact?: boolean;\n\n  /** A card will used horizontal layout. */\n  horizontal?: boolean;\n\n  /** Centers content in a card. */\n  centered?: boolean;\n\n  /** A card can be sized. */\n  size?: SizeValue;\n\n  /** A card can take up the width and height of its container. */\n  fluid?: boolean;\n}\n\nexport type CardStylesProps = Pick<CardProps, 'compact' | 'horizontal' | 'centered' | 'size' | 'fluid'>;\n\nexport interface CardSlotClassNames {\n  header: string;\n  body: string;\n  footer: string;\n  preview: string;\n  topControls: string;\n}\n\nconst Card: React.FC<WithAsProp<CardProps>> &\n  FluentComponentStaticProps<CardProps> & {\n    Header: typeof CardHeader;\n    Body: typeof CardBody;\n    Footer: typeof CardFooter;\n    Preview: typeof CardPreview;\n    TopControls: typeof CardPreview;\n    Column: typeof CardColumn;\n    slotClassNames: CardSlotClassNames;\n  } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Card.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, compact, horizontal, centered, size, fluid } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Card.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Card.displayName,\n    actionHandlers: {\n      performClick: e => {\n        handleClick(e);\n      },\n    },\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardStylesProps>(Card.displayName, {\n    className: Card.className,\n    mapPropsToStyles: () => ({\n      centered,\n      horizontal,\n      compact,\n      size,\n      fluid,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        onClick: handleClick,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCard.displayName = 'Card';\nCard.className = 'ui-card';\n\nCard.slotClassNames = {\n  header: `${Card.className}__header`,\n  body: `${Card.className}__body`,\n  footer: `${Card.className}__footer`,\n  preview: `${Card.className}__preview`,\n  topControls: `${Card.className}__top-controls`,\n};\n\nCard.propTypes = {\n  ...commonPropTypes.createCommon(),\n  onClick: PropTypes.func,\n  compact: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  centered: PropTypes.bool,\n  size: CustomPropTypes.size,\n  fluid: PropTypes.bool,\n};\n\nCard.defaultProps = {\n  accessibility: cardBehavior,\n  size: 'medium',\n};\n\nCard.handledProps = Object.keys(Card.propTypes) as any;\nCard.Header = CardHeader;\nCard.Body = CardBody;\nCard.Footer = CardFooter;\nCard.Preview = CardPreview;\nCard.TopControls = CardTopControls;\nCard.Column = CardColumn;\n\nCard.create = createShorthandFactory({ Component: Card });\n\n/**\n * A Card is used to display data in sematically grouped way.\n */\nexport default withSafeTypeForAs<typeof Card, CardProps, 'div'>(Card);\n"],"file":"Card.js"}