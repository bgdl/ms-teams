import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import * as React from 'react';
import * as PropTypes from 'prop-types';
import { carouselItemBehavior } from '@fluentui/accessibility';
import { UIComponent, commonPropTypes, applyAccessibilityKeyHandlers, childrenExist, createShorthandFactory } from '../../utils';
import { screenReaderContainerStyles } from '../../utils/accessibility/Styles/accessibilityStyles';
import { withSafeTypeForAs } from '../../types';

var CarouselItem =
/*#__PURE__*/
function (_UIComponent) {
  _inherits(CarouselItem, _UIComponent);

  function CarouselItem() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, CarouselItem);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CarouselItem)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "actionHandlers", {
      arrowKeysNavigationStopPropagation: function arrowKeysNavigationStopPropagation(e) {
        // let event propagate, when it was invoke on the element where arrow keys should rotate carousel
        if (e.currentTarget !== e.target) {
          e.stopPropagation();
        }
      }
    });

    return _this;
  }

  _createClass(CarouselItem, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          styles = _ref.styles,
          accessibility = _ref.accessibility,
          unhandledProps = _ref.unhandledProps;
      var _this$props = this.props,
          children = _this$props.children,
          content = _this$props.content,
          itemPositionText = _this$props.itemPositionText;
      return React.createElement(ElementType, _extends({
        className: classes.root
      }, accessibility.attributes.root, unhandledProps, applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)), childrenExist(children) ? children : content, React.createElement("div", {
        className: CarouselItem.slotClassNames.itemPositionText,
        style: screenReaderContainerStyles
      }, itemPositionText));
    }
  }]);

  return CarouselItem;
}(UIComponent);

_defineProperty(CarouselItem, "create", void 0);

_defineProperty(CarouselItem, "displayName", 'CarouselItem');

_defineProperty(CarouselItem, "className", 'ui-carousel__item');

_defineProperty(CarouselItem, "propTypes", Object.assign({}, commonPropTypes.createCommon(), {
  active: PropTypes.bool,
  navigation: PropTypes.bool,
  itemPositionText: PropTypes.string
}));

_defineProperty(CarouselItem, "defaultProps", {
  accessibility: carouselItemBehavior
});

_defineProperty(CarouselItem, "slotClassNames", {
  itemPositionText: "".concat(CarouselItem.className, "__itemPositionText")
});

CarouselItem.create = createShorthandFactory({
  Component: CarouselItem,
  mappedProp: 'content'
});
/**
 * A Carousel displays data organised as a gallery.
 *
 * @accessibility
 * Implements [ARIA Carousel](https://www.w3.org/WAI/tutorials/carousels/structure/) design pattern.
 */

export default withSafeTypeForAs(CarouselItem);
//# sourceMappingURL=CarouselItem.js.map
