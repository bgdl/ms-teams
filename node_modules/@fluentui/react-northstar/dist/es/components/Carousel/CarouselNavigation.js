import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _map from "lodash/map";
import _invoke from "lodash/invoke";
import { tabListBehavior } from '@fluentui/accessibility';
import { mergeComponentVariables } from '@fluentui/styles';
import * as PropTypes from 'prop-types';
import * as React from 'react';
import * as customPropTypes from '@fluentui/react-proptypes';
import { childrenExist, createShorthandFactory, commonPropTypes, rtlTextContainer, UIComponent } from '../../utils';
import { withSafeTypeForAs } from '../../types';
import CarouselNavigationItem from './CarouselNavigationItem';

var CarouselNavigation =
/*#__PURE__*/
function (_UIComponent) {
  _inherits(CarouselNavigation, _UIComponent);

  function CarouselNavigation() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, CarouselNavigation);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CarouselNavigation)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "handleItemOverrides", function (variables) {
      return function (predefinedProps) {
        return {
          onClick: function onClick(e, itemProps) {
            _invoke(_this.props, 'onItemClick', e, itemProps);

            _invoke(predefinedProps, 'onClick', e, itemProps);
          },
          variables: mergeComponentVariables(variables, predefinedProps.variables)
        };
      };
    });

    _defineProperty(_assertThisInitialized(_this), "renderItems", function (variables, accessibility) {
      var _this$props = _this.props,
          activeIndex = _this$props.activeIndex,
          iconOnly = _this$props.iconOnly,
          items = _this$props.items,
          primary = _this$props.primary,
          secondary = _this$props.secondary,
          vertical = _this$props.vertical;
      return _map(items, function (item, index) {
        return CarouselNavigationItem.create(item, {
          defaultProps: function defaultProps() {
            return {
              active: index === activeIndex,
              iconOnly: iconOnly,
              index: index,
              primary: primary,
              secondary: secondary,
              vertical: vertical,
              accessibility: accessibility.childBehaviors ? accessibility.childBehaviors.item : undefined
            };
          },
          overrideProps: _this.handleItemOverrides(variables)
        });
      });
    });

    return _this;
  }

  _createClass(CarouselNavigation, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          accessibility = _ref.accessibility,
          styles = _ref.styles,
          variables = _ref.variables,
          unhandledProps = _ref.unhandledProps;
      var children = this.props.children;
      return React.createElement(ElementType, _extends({
        className: classes.root
      }, accessibility.attributes.root, rtlTextContainer.getAttributes({
        forElements: [children]
      }), unhandledProps), childrenExist(children) ? children : this.renderItems(variables, accessibility));
    }
  }]);

  return CarouselNavigation;
}(UIComponent);

_defineProperty(CarouselNavigation, "displayName", 'CarouselNavigation');

_defineProperty(CarouselNavigation, "className", 'ui-carousel__navigation');

_defineProperty(CarouselNavigation, "create", void 0);

_defineProperty(CarouselNavigation, "propTypes", Object.assign({}, commonPropTypes.createCommon({
  content: false
}), {
  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  iconOnly: PropTypes.bool,
  items: customPropTypes.collectionShorthand,
  onItemClick: PropTypes.func,
  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),
  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),
  vertical: PropTypes.bool
}));

_defineProperty(CarouselNavigation, "defaultProps", {
  accessibility: tabListBehavior,
  as: 'ul'
});

CarouselNavigation.create = createShorthandFactory({
  Component: CarouselNavigation,
  mappedArrayProp: 'items'
});
/**
 * A Carousel navigation helps switching between Carousel items.
 */

export default withSafeTypeForAs(CarouselNavigation);
//# sourceMappingURL=CarouselNavigation.js.map
