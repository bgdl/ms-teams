{"version":3,"sources":["components/Dialog/Dialog.tsx"],"names":["dialogBehavior","Unstable_NestingAuto","EventListener","Ref","customPropTypes","PropTypes","React","keyboardKey","disableBodyScroll","enableBodyScroll","commonPropTypes","AutoControlledComponent","doesNodeContainClick","applyAccessibilityKeyHandlers","getOrGenerateIdFromShorthand","withSafeTypeForAs","Button","ButtonGroup","Box","Header","Portal","Flex","DialogFooter","dialogsCounterAttribute","Dialog","closeAndFocusTrigger","e","handleDialogCancel","stopPropagation","triggerRef","close","createRef","props","open","setState","predefinedProps","onClick","buttonProps","handleDialogConfirm","isInsideContentClick","contentRef","current","context","target","isInsideOverlayClick","overlayRef","shouldClose","getRefs","lastOverlayRef","pop","isLastOpenedDialog","getCode","Escape","openDialogs","body","getAttribute","setAttribute","removeAttribute","_","prevState","state","unlockBodyScroll","lockBodyScroll","accessibility","classes","ElementType","styles","unhandledProps","rtl","actions","cancelButton","closeOnOutsideClick","confirmButton","content","header","headerAction","overlay","trapFocus","trigger","footer","cancelElement","create","overrideProps","handleCancelButtonOverrides","confirmElement","defaultProps","primary","handleConfirmButtonOverrides","dialogActions","dialogContent","root","attributes","popup","keyHandlers","as","className","slotClassNames","text","iconOnly","triggerAccessibility","handleDialogOpen","nestingRef","contentNode","handleOverlayClick","handleDocumentKeydown","contentId","headerId","createCommon","children","itemShorthand","backdrop","bool","defaultOpen","onCancel","func","onConfirm","onOpen","oneOfType","object","any"],"mappings":"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","sourcesContent":["import { Accessibility, dialogBehavior } from '@fluentui/accessibility';\nimport { FocusTrapZoneProps } from '@fluentui/react-bindings';\nimport { Unstable_NestingAuto } from '@fluentui/react-component-nesting-registry';\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as keyboardKey from 'keyboard-key';\nimport { disableBodyScroll, enableBodyScroll } from './utils';\n\nimport {\n  UIComponentProps,\n  commonPropTypes,\n  ContentComponentProps,\n  AutoControlledComponent,\n  doesNodeContainClick,\n  applyAccessibilityKeyHandlers,\n  getOrGenerateIdFromShorthand,\n} from '../../utils';\nimport { ComponentEventHandler, WithAsProp, ShorthandValue, withSafeTypeForAs } from '../../types';\nimport Button, { ButtonProps } from '../Button/Button';\nimport ButtonGroup from '../Button/ButtonGroup';\nimport Box, { BoxProps } from '../Box/Box';\nimport Header, { HeaderProps } from '../Header/Header';\nimport Portal, { TriggerAccessibility } from '../Portal/Portal';\nimport Flex from '../Flex/Flex';\nimport DialogFooter, { DialogFooterProps } from './DialogFooter';\n\nexport interface DialogSlotClassNames {\n  header: string;\n  headerAction: string;\n  content: string;\n  overlay: string;\n  footer: string;\n}\n\nexport interface DialogProps extends UIComponentProps, ContentComponentProps<ShorthandValue<BoxProps>> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility;\n\n  /** A dialog can contain actions. */\n  actions?: ShorthandValue<BoxProps>;\n\n  /** A dialog can have a backdrop on its overlay. */\n  backdrop?: boolean;\n\n  /** A dialog can contain a cancel button. */\n  cancelButton?: ShorthandValue<ButtonProps>;\n\n  /** A dialog can be closed when a user clicks outside of it. */\n  closeOnOutsideClick?: boolean;\n\n  /** A dialog can contain a confirm button. */\n  confirmButton?: ShorthandValue<ButtonProps>;\n\n  /** A dialog can be open by default. */\n  defaultOpen?: boolean;\n\n  /** A dialog can contain a header. */\n  header?: ShorthandValue<HeaderProps>;\n\n  /** A dialog can contain a button next to the header. */\n  headerAction?: ShorthandValue<ButtonProps>;\n\n  /** A dialog can contain a footer. */\n  footer?: ShorthandValue<DialogFooterProps>;\n\n  /**\n   * Called after a user clicks the cancel button.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onCancel?: ComponentEventHandler<DialogProps>;\n\n  /**\n   * Called after a user clicks the confirm button.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onConfirm?: ComponentEventHandler<DialogProps>;\n\n  /**\n   * Called after a user opens the dialog.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onOpen?: ComponentEventHandler<DialogProps>;\n\n  /** A dialog's open state can be controlled. */\n  open?: boolean;\n\n  /** A dialog can contain a overlay. */\n  overlay?: ShorthandValue<BoxProps>;\n\n  /** Controls whether or not focus trap should be applied, using boolean or FocusTrapZoneProps type value. */\n  trapFocus?: true | FocusTrapZoneProps;\n\n  /** Element to be rendered in-place where the dialog is defined. */\n  trigger?: JSX.Element;\n}\n\nexport interface DialogState {\n  contentId?: string;\n  headerId?: string;\n  open?: boolean;\n}\nconst dialogsCounterAttribute = 'fluent-dialogs-count';\n\nclass Dialog extends AutoControlledComponent<WithAsProp<DialogProps>, DialogState> {\n  static displayName = 'Dialog';\n  static className = 'ui-dialog';\n\n  static slotClassNames: DialogSlotClassNames;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      children: false,\n      content: 'shorthand',\n    }),\n    actions: customPropTypes.itemShorthand,\n    backdrop: PropTypes.bool,\n    headerAction: customPropTypes.itemShorthand,\n    cancelButton: customPropTypes.itemShorthand,\n    closeOnOutsideClick: PropTypes.bool,\n    confirmButton: customPropTypes.itemShorthand,\n    defaultOpen: PropTypes.bool,\n    header: customPropTypes.itemShorthand,\n    onCancel: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onOpen: PropTypes.func,\n    open: PropTypes.bool,\n    overlay: customPropTypes.itemShorthand,\n    trapFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    trigger: PropTypes.any,\n  };\n\n  static defaultProps = {\n    accessibility: dialogBehavior as Accessibility,\n    actions: {},\n    backdrop: true,\n    closeOnOutsideClick: true,\n    overlay: {},\n    footer: {},\n    trapFocus: true,\n  };\n\n  static autoControlledProps = ['open'];\n  static Footer = DialogFooter;\n\n  actionHandlers = {\n    closeAndFocusTrigger: e => {\n      this.handleDialogCancel(e);\n      e.stopPropagation();\n\n      _.invoke(this.triggerRef, 'current.focus');\n    },\n    close: e => this.handleDialogCancel(e),\n  };\n  contentRef = React.createRef<HTMLElement>() as React.MutableRefObject<HTMLElement>;\n  overlayRef = React.createRef<HTMLElement>() as React.MutableRefObject<HTMLElement>;\n  triggerRef = React.createRef<HTMLElement>();\n\n  getInitialAutoControlledState(): DialogState {\n    return {\n      open: false,\n    };\n  }\n\n  static getAutoControlledStateFromProps(props: DialogProps, state: DialogState): Partial<DialogState> {\n    return {\n      contentId: getOrGenerateIdFromShorthand('dialog-content-', props.content, state.contentId),\n      headerId: getOrGenerateIdFromShorthand('dialog-header-', props.header, state.headerId),\n    };\n  }\n\n  handleDialogCancel = (e: Event | React.SyntheticEvent) => {\n    _.invoke(this.props, 'onCancel', e, { ...this.props, open: false });\n    this.setState({ open: false });\n  };\n\n  handleDialogConfirm = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onConfirm', e, { ...this.props, open: false });\n    this.setState({ open: false });\n  };\n\n  handleDialogOpen = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onOpen', e, { ...this.props, open: true });\n    this.setState({ open: true });\n  };\n\n  handleCancelButtonOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n      this.handleDialogCancel(e);\n    },\n  });\n\n  handleConfirmButtonOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n      this.handleDialogConfirm(e);\n    },\n  });\n\n  handleOverlayClick = (e: MouseEvent) => {\n    // Dialog has different conditions to close than Popup, so we don't need to iterate across all\n    // refs\n    const isInsideContentClick = doesNodeContainClick(this.contentRef.current, e, this.context.target);\n    const isInsideOverlayClick = doesNodeContainClick(this.overlayRef.current, e, this.context.target);\n\n    const shouldClose = !isInsideContentClick && isInsideOverlayClick;\n\n    if (shouldClose) {\n      this.handleDialogCancel(e);\n    }\n  };\n\n  handleDocumentKeydown = (getRefs: Function) => (e: KeyboardEvent) => {\n    // if focus was lost from Dialog, for e.g. when click on Dialog's content\n    // and ESC is pressed, the opened Dialog should get closed and the trigger should get focus\n    const lastOverlayRef = getRefs().pop();\n    const isLastOpenedDialog: boolean = lastOverlayRef && lastOverlayRef.current === this.overlayRef.current;\n\n    if (keyboardKey.getCode(e) === keyboardKey.Escape && isLastOpenedDialog) {\n      this.handleDialogCancel(e);\n      _.invoke(this.triggerRef, 'current.focus');\n    }\n  };\n\n  lockBodyScroll() {\n    const openDialogs = (+this.context.target.body.getAttribute(dialogsCounterAttribute) || 0) + 1;\n    this.context.target.body.setAttribute(dialogsCounterAttribute, `${openDialogs}`);\n\n    // Avoid to block scroll in nested dialogs\n    if (openDialogs === 1) {\n      disableBodyScroll(this.context.target.body);\n    }\n  }\n\n  unlockBodyScroll() {\n    const openDialogs = (+this.context.target.body.getAttribute(dialogsCounterAttribute) || 0) - 1;\n    this.context.target.body.setAttribute(dialogsCounterAttribute, `${openDialogs}`);\n\n    // Only enables scroll if all dialogs are closed\n    if (openDialogs === 0) {\n      enableBodyScroll(this.context.target.body);\n      this.context.target.body.removeAttribute(dialogsCounterAttribute);\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    // Open -> Closed\n    if (prevState.open && !this.state.open) {\n      this.unlockBodyScroll();\n    }\n    // Closed -> Open\n    if (!prevState.open && this.state.open) {\n      this.lockBodyScroll();\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.open) {\n      this.lockBodyScroll();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.open) {\n      this.unlockBodyScroll();\n    }\n  }\n\n  renderComponent({ accessibility, classes, ElementType, styles, unhandledProps, rtl }) {\n    const {\n      actions,\n      cancelButton,\n      closeOnOutsideClick,\n      confirmButton,\n      content,\n      header,\n      headerAction,\n      overlay,\n      trapFocus,\n      trigger,\n      footer,\n    } = this.props;\n    const { open } = this.state;\n\n    const cancelElement = Button.create(cancelButton, {\n      overrideProps: this.handleCancelButtonOverrides,\n    });\n    const confirmElement = Button.create(confirmButton, {\n      defaultProps: () => ({\n        primary: true,\n      }),\n      overrideProps: this.handleConfirmButtonOverrides,\n    });\n\n    const dialogActions =\n      (cancelElement || confirmElement) &&\n      ButtonGroup.create(actions, {\n        defaultProps: () => ({\n          styles: styles.actions,\n        }),\n        overrideProps: {\n          content: (\n            <Flex gap=\"gap.smaller\">\n              {cancelElement}\n              {confirmElement}\n            </Flex>\n          ),\n        },\n      });\n\n    const dialogContent = (\n      <Ref innerRef={this.contentRef}>\n        <ElementType\n          className={classes.root}\n          {...accessibility.attributes.popup}\n          {...unhandledProps}\n          {...applyAccessibilityKeyHandlers(accessibility.keyHandlers.popup, unhandledProps)}\n        >\n          {Header.create(header, {\n            defaultProps: () => ({\n              as: 'h2',\n              className: Dialog.slotClassNames.header,\n              styles: styles.header,\n              ...accessibility.attributes.header,\n            }),\n          })}\n          {Button.create(headerAction, {\n            defaultProps: () => ({\n              className: Dialog.slotClassNames.headerAction,\n              styles: styles.headerAction,\n              text: true,\n              iconOnly: true,\n              ...accessibility.attributes.headerAction,\n            }),\n          })}\n          {Box.create(content, {\n            defaultProps: () => ({\n              styles: styles.content,\n              className: Dialog.slotClassNames.content,\n              ...accessibility.attributes.content,\n            }),\n          })}\n          {DialogFooter.create(footer, {\n            overrideProps: {\n              content: dialogActions,\n              className: Dialog.slotClassNames.footer,\n              styles: styles.footer,\n            },\n          })}\n        </ElementType>\n      </Ref>\n    );\n\n    const triggerAccessibility: TriggerAccessibility = {\n      attributes: accessibility.attributes.trigger,\n      keyHandlers: accessibility.keyHandlers.trigger,\n    };\n\n    return (\n      <Portal\n        onTriggerClick={this.handleDialogOpen}\n        open={open}\n        trapFocus={trapFocus}\n        trigger={trigger}\n        triggerAccessibility={triggerAccessibility}\n        triggerRef={this.triggerRef}\n      >\n        <Unstable_NestingAuto>\n          {(getRefs, nestingRef) => (\n            <>\n              <Ref\n                innerRef={(contentNode: HTMLElement) => {\n                  this.overlayRef.current = contentNode;\n                  nestingRef.current = contentNode;\n                }}\n              >\n                {Box.create(overlay, {\n                  defaultProps: () => ({\n                    className: Dialog.slotClassNames.overlay,\n                    styles: styles.overlay,\n                  }),\n                  overrideProps: { content: dialogContent },\n                })}\n              </Ref>\n\n              {closeOnOutsideClick && (\n                <EventListener listener={this.handleOverlayClick} target={this.context.target} type=\"click\" capture />\n              )}\n              <EventListener\n                listener={this.handleDocumentKeydown(getRefs)}\n                target={this.context.target}\n                type=\"keydown\"\n                capture\n              />\n            </>\n          )}\n        </Unstable_NestingAuto>\n      </Portal>\n    );\n  }\n}\n\nDialog.slotClassNames = {\n  header: `${Dialog.className}__header`,\n  headerAction: `${Dialog.className}__headerAction`,\n  content: `${Dialog.className}__content`,\n  overlay: `${Dialog.className}__overlay`,\n  footer: `${Dialog.className}__footer`,\n};\n\n/**\n * A Dialog displays important information on top of a page which requires a user's attention, confirmation, or interaction.\n * Dialogs are purposefully interruptive, so they should be used sparingly.\n *\n * @accessibility\n * Implements [ARIA Dialog (Modal)](https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal) design pattern.\n * @accessibilityIssues\n * [NVDA narrates dialog title and button twice](https://github.com/nvaccess/nvda/issues/10003)\n * [NVDA does not recognize the ARIA 1.1 values of aria-haspopup](https://github.com/nvaccess/nvda/issues/8235)\n * [Jaws does not announce token values of aria-haspopup](https://github.com/FreedomScientific/VFO-standards-support/issues/33)\n * [Issue 989517: VoiceOver narrates dialog content and button twice](https://bugs.chromium.org/p/chromium/issues/detail?id=989517)\n */\nexport default withSafeTypeForAs<typeof Dialog, DialogProps>(Dialog);\n"],"file":"Dialog.js"}