import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _map from "lodash/map";
import _invoke from "lodash/invoke";
import * as customPropTypes from '@fluentui/react-proptypes';
import { Ref } from '@fluentui/react-component-ref';
import * as PropTypes from 'prop-types';
import * as React from 'react';
import TableCell from './TableCell';
import { UIComponent, commonPropTypes, createShorthandFactory, applyAccessibilityKeyHandlers, childrenExist } from '../../utils';
import { withSafeTypeForAs } from '../../types';
import { tableRowBehavior } from '@fluentui/accessibility';
import { mergeComponentVariables } from '@fluentui/styles';

var handleVariablesOverrides = function handleVariablesOverrides(variables) {
  return function (predefinedProps) {
    return {
      variables: mergeComponentVariables(variables, predefinedProps.variables)
    };
  };
};

var TableRow =
/*#__PURE__*/
function (_UIComponent) {
  _inherits(TableRow, _UIComponent);

  function TableRow() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, TableRow);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableRow)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "rowRef", React.createRef());

    _defineProperty(_assertThisInitialized(_this), "actionHandlers", {
      // https://github.com/microsoft/fluent-ui-react/issues/2150
      unsetRowTabbable: function unsetRowTabbable(e) {
        _this.rowRef.current.setAttribute('tabindex', '-1');
      },
      performClick: function performClick(e) {
        _this.handleClick(e);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleClick", function (e) {
      if (e.currentTarget === e.target) {
        _invoke(_this.props, 'onClick', e, _this.props);

        e.preventDefault();
      }
    });

    return _this;
  }

  _createClass(TableRow, [{
    key: "renderCells",
    value: function renderCells(accessibility, variables) {
      var items = this.props.items;
      var cellAccessibility = accessibility.childBehaviors ? accessibility.childBehaviors.cell : undefined;
      return _map(items, function (item, index) {
        var cellProps = {
          accessibility: cellAccessibility
        };
        var overrideProps = handleVariablesOverrides(variables);
        return TableCell.create(item, {
          defaultProps: function defaultProps() {
            return cellProps;
          },
          overrideProps: overrideProps
        });
      });
    }
  }, {
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var accessibility = _ref.accessibility,
          ElementType = _ref.ElementType,
          classes = _ref.classes,
          variables = _ref.variables,
          unhandledProps = _ref.unhandledProps;
      var children = this.props.children;
      var hasChildren = childrenExist(children);
      return React.createElement(Ref, {
        innerRef: this.rowRef
      }, React.createElement(ElementType, _extends({
        className: classes.root,
        onClick: this.handleClick
      }, accessibility.attributes.root, unhandledProps, applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)), hasChildren && children, !hasChildren && this.renderCells(accessibility, variables)));
    }
  }]);

  return TableRow;
}(UIComponent);

_defineProperty(TableRow, "displayName", 'TableRow');

_defineProperty(TableRow, "className", 'ui-table__row');

_defineProperty(TableRow, "create", void 0);

_defineProperty(TableRow, "propTypes", Object.assign({}, commonPropTypes.createCommon({
  content: false
}), {
  content: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.oneOfType([PropTypes.arrayOf(customPropTypes.nodeContent), customPropTypes.nodeContent])]),
  items: customPropTypes.collectionShorthand,
  header: PropTypes.bool,
  compact: PropTypes.bool,
  selected: PropTypes.bool
}));

_defineProperty(TableRow, "defaultProps", {
  accessibility: tableRowBehavior
});

TableRow.create = createShorthandFactory({
  Component: TableRow,
  mappedArrayProp: 'items'
});
/**
 * Component represents a single row in a tabular structure
 */

export default withSafeTypeForAs(TableRow);
//# sourceMappingURL=TableRow.js.map
