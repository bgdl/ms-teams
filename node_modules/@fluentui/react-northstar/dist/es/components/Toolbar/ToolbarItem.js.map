{"version":3,"sources":["components/Toolbar/ToolbarItem.tsx"],"names":["toolbarItemBehavior","getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","Ref","EventListener","Unstable_NestingAuto","customPropTypes","mergeComponentVariables","cx","PropTypes","React","ThemeContext","createShorthandFactory","doesNodeContainClick","commonPropTypes","childrenExist","withSafeTypeForAs","getPopperPropsFromShorthand","Popper","ToolbarMenu","Box","Popup","ToolbarVariablesContext","ToolbarVariablesProvider","ToolbarItem","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","active","className","design","icon","children","disabled","popup","menu","menuOpen","wrapper","styles","variables","itemRef","useRef","menuRef","parentVariables","mergedVariables","getA11yProps","debugName","actionHandlers","performClick","event","preventDefault","handleClick","performWrapperClick","handleWrapperClick","closeMenuAndFocusTrigger","trySetMenuOpen","current","doNotNavigateNextToolbarItem","stopPropagation","mapPropsToBehavior","as","String","hasMenu","hasPopup","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","handleBlur","e","handleFocus","nativeEvent","target","handleOutsideClick","getRefs","isItemClick","isNestedClick","childRef","isInside","newValue","handleMenuOverrides","predefinedProps","onBlur","contains","relatedTarget","onItemClick","itemProps","ElementType","unhandledProps","handledProps","itemElement","root","onFocus","onClick","create","submenuElement","nestingRef","node","preventOverflow","escapeWithReference","overrideProps","popupElement","defaultProps","trapFocus","trigger","undefined","contentElement","wrapperElement","slotClassNames","refElement","propTypes","createCommon","bool","shorthandAllowingChildren","oneOfType","arrayOf","onMenuOpenChange","func","shape","never","string","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, toolbarItemBehavior, ToolbarItemBehaviorProps } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { GetRefs, NodeRef, Unstable_NestingAuto } from '@fluentui/react-component-nesting-registry';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { mergeComponentVariables } from '@fluentui/styles';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  createShorthandFactory,\n  doesNodeContainClick,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  childrenExist,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  ShorthandValue,\n  WithAsProp,\n  withSafeTypeForAs,\n  Omit,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport { getPopperPropsFromShorthand, Popper, PopperShorthandProps } from '../../utils/positioner';\n\nimport ToolbarMenu, { ToolbarMenuProps } from './ToolbarMenu';\nimport Box, { BoxProps } from '../Box/Box';\nimport Popup, { PopupProps } from '../Popup/Popup';\nimport { ToolbarMenuItemProps } from '../Toolbar/ToolbarMenuItem';\nimport { ToolbarItemShorthandKinds } from './Toolbar';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\n\nexport interface ToolbarItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ToolbarItemBehaviorProps>;\n\n  /** A toolbar item can be active. */\n  active?: boolean;\n\n  /** A toolbar item can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** Name or shorthand for Toolbar Item Icon */\n  icon?: ShorthandValue<BoxProps>;\n\n  /**\n   * Shorthand for the submenu.\n   * If submenu is specified, the item is wrapped to group the item and the menu elements together.\n   */\n  menu?:\n    | ShorthandValue<ToolbarMenuProps & { popper?: PopperShorthandProps }>\n    | ShorthandCollection<ToolbarMenuItemProps, ToolbarItemShorthandKinds>;\n\n  /** Indicates if the menu inside the item is open. */\n  menuOpen?: boolean;\n\n  /**\n   * Event for request to change 'menuOpen' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onMenuOpenChange?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Called after item blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Attaches a `Popup` component to the ToolbarItem.\n   * Accepts all props as a `Popup`, except `trigger` and `children`.\n   * Traps focus by default.\n   * @see PopupProps\n   */\n  popup?: Omit<PopupProps, 'trigger' | 'children'> | string;\n\n  /** Shorthand for the wrapper component. The item is wrapped only if it contains a menu! */\n  wrapper?: ShorthandValue<BoxProps>;\n}\n\nexport type ToolbarItemStylesProps = Required<Pick<ToolbarItemProps, 'active' | 'disabled'>>;\n\nexport interface ToolbarItemSlotClassNames {\n  wrapper: string;\n}\n\nconst ToolbarItem: React.FC<WithAsProp<ToolbarItemProps>> &\n  FluentComponentStaticProps<ToolbarItemProps> & { slotClassNames: ToolbarItemSlotClassNames } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(ToolbarItem.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    active,\n    className,\n    design,\n    icon,\n    children,\n    disabled,\n    popup,\n    menu,\n    menuOpen,\n    wrapper,\n    styles,\n    variables,\n  } = props;\n\n  const itemRef = React.useRef<HTMLElement>();\n  const menuRef = React.useRef<HTMLElement>();\n\n  const parentVariables = React.useContext(ToolbarVariablesContext);\n  const mergedVariables = mergeComponentVariables(parentVariables, variables);\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: ToolbarItem.displayName,\n    actionHandlers: {\n      performClick: event => {\n        event.preventDefault();\n        handleClick(event);\n      },\n      performWrapperClick: event => {\n        handleWrapperClick(event);\n      },\n      closeMenuAndFocusTrigger: event => {\n        trySetMenuOpen(false, event);\n        _.invoke(itemRef.current, 'focus');\n      },\n      doNotNavigateNextToolbarItem: event => {\n        event.stopPropagation();\n      },\n    },\n    mapPropsToBehavior: () => ({\n      as: String(props.as),\n      disabled,\n      hasMenu: !!menu,\n      hasPopup: !!popup,\n      menuOpen,\n      active,\n    }),\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<ToolbarItemStylesProps>(ToolbarItem.displayName, {\n    className: ToolbarItem.className,\n    mapPropsToStyles: () => ({ active, disabled }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables: mergedVariables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleBlur = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onBlur', e, props);\n  };\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (menu) {\n      trySetMenuOpen(!menuOpen, e);\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleWrapperClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    if (menu) {\n      if (doesNodeContainClick(menuRef.current, e.nativeEvent as MouseEvent, context.target)) {\n        trySetMenuOpen(false, e);\n      }\n    }\n  };\n\n  const handleOutsideClick = (getRefs: GetRefs) => (e: MouseEvent) => {\n    const isItemClick = doesNodeContainClick(itemRef.current, e, context.target);\n    const isNestedClick = _.some(getRefs(), (childRef: NodeRef) => {\n      return doesNodeContainClick(childRef.current as HTMLElement, e, context.target);\n    });\n    const isInside = isItemClick || isNestedClick;\n\n    if (!isInside) {\n      trySetMenuOpen(false, e);\n    }\n  };\n\n  const trySetMenuOpen = (newValue: boolean, e: Event | React.SyntheticEvent) => {\n    _.invoke(props, 'onMenuOpenChange', e, { ...props, menuOpen: newValue });\n  };\n\n  const handleMenuOverrides = (getRefs: GetRefs) => (predefinedProps: ToolbarMenuProps) => ({\n    onBlur: (e: React.FocusEvent) => {\n      const isInside = _.some(getRefs(), (childRef: NodeRef) => {\n        return childRef.current.contains(e.relatedTarget as HTMLElement);\n      });\n\n      if (!isInside) {\n        trySetMenuOpen(false, e);\n      }\n    },\n    onItemClick: (e, itemProps: ToolbarMenuItemProps) => {\n      const { popup, menuOpen } = itemProps;\n      _.invoke(predefinedProps, 'onItemClick', e, itemProps);\n      if (popup) {\n        return;\n      }\n      // TODO: should we pass toolbarMenuItem to the user callback so he can decide if he wants to close the menu?\n      trySetMenuOpen(menuOpen, e);\n    },\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ToolbarItem.handledProps, props);\n\n  const itemElement = (\n    <ElementType\n      {...getA11yProps('root', {\n        ...unhandledProps,\n        disabled,\n        className: classes.root,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onClick: handleClick,\n      })}\n    >\n      {childrenExist(children) ? children : Box.create(icon)}\n    </ElementType>\n  );\n\n  const submenuElement = menuOpen ? (\n    <Unstable_NestingAuto>\n      {(getRefs, nestingRef) => (\n        <>\n          <Ref\n            innerRef={(node: HTMLElement) => {\n              nestingRef.current = node;\n              menuRef.current = node;\n            }}\n          >\n            <Popper\n              align=\"start\"\n              position=\"above\"\n              modifiers={{\n                preventOverflow: {\n                  escapeWithReference: false, // escapeWithReference breaks positioning of ToolbarMenu in overflow mode because Popper components sets modifiers on scrollable container\n                },\n              }}\n              targetRef={itemRef}\n              {...getPopperPropsFromShorthand(menu)}\n            >\n              <ToolbarVariablesProvider value={mergedVariables}>\n                {ToolbarMenu.create(menu, {\n                  overrideProps: handleMenuOverrides(getRefs),\n                })}\n              </ToolbarVariablesProvider>\n            </Popper>\n          </Ref>\n          <EventListener listener={handleOutsideClick(getRefs)} target={context.target} type=\"click\" capture />\n        </>\n      )}\n    </Unstable_NestingAuto>\n  ) : null;\n\n  if (popup) {\n    const popupElement = Popup.create(popup, {\n      defaultProps: () => ({\n        trapFocus: true,\n      }),\n      overrideProps: {\n        trigger: itemElement,\n        children: undefined, // force-reset `children` defined for `Popup` as it collides with the `trigger`\n      },\n    });\n    setEnd();\n\n    return popupElement;\n  }\n\n  // wrap the item if it has menu (even if it is closed = not rendered)\n  if (menu) {\n    const contentElement = (\n      <>\n        <Ref innerRef={itemRef}>{itemElement}</Ref>\n        {submenuElement}\n      </>\n    );\n\n    if (wrapper) {\n      const wrapperElement = Box.create(wrapper, {\n        defaultProps: () =>\n          getA11yProps('wrapper', {\n            className: cx(ToolbarItem.slotClassNames.wrapper, classes.wrapper),\n          }),\n        overrideProps: predefinedProps => ({\n          children: contentElement,\n          onClick: e => {\n            handleWrapperClick(e);\n            _.invoke(predefinedProps, 'onClick', e);\n          },\n        }),\n      });\n      setEnd();\n\n      return wrapperElement;\n    }\n\n    setEnd();\n    return contentElement;\n  }\n\n  const refElement = <Ref innerRef={itemRef}>{itemElement}</Ref>;\n  setEnd();\n\n  return refElement;\n};\n\nToolbarItem.className = 'ui-toolbar__item';\nToolbarItem.displayName = 'ToolbarItem';\n\nToolbarItem.slotClassNames = {\n  wrapper: `${ToolbarItem.className}__wrapper`,\n};\n\nToolbarItem.defaultProps = {\n  as: 'button',\n  accessibility: toolbarItemBehavior,\n  wrapper: {},\n};\nToolbarItem.propTypes = {\n  ...commonPropTypes.createCommon(),\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  menu: PropTypes.oneOfType([\n    customPropTypes.shorthandAllowingChildren,\n    PropTypes.arrayOf(customPropTypes.shorthandAllowingChildren),\n  ]),\n  menuOpen: PropTypes.bool,\n  onMenuOpenChange: PropTypes.func,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  popup: PropTypes.oneOfType([\n    PropTypes.shape({\n      ...Popup.propTypes,\n      trigger: customPropTypes.never,\n      children: customPropTypes.never,\n    }),\n    PropTypes.string,\n  ]),\n  wrapper: customPropTypes.shorthandAllowingChildren,\n};\nToolbarItem.handledProps = Object.keys(ToolbarItem.propTypes) as any;\n\nToolbarItem.create = createShorthandFactory({ Component: ToolbarItem, mappedProp: 'content' });\n\n/**\n * A ToolbarItem renders Toolbar item as a button with an icon.\n */\nexport default withSafeTypeForAs<typeof ToolbarItem, ToolbarItemProps, 'button'>(ToolbarItem);\n"],"file":"ToolbarItem.js"}