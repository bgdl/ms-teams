{"version":3,"sources":["components/Toolbar/ToolbarMenuRadioGroup.tsx"],"names":["toolbarMenuRadioGroupBehavior","toolbarMenuItemRadioBehavior","mergeComponentVariables","getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","customPropTypes","PropTypes","React","ThemeContext","createShorthandFactory","commonPropTypes","withSafeTypeForAs","ToolbarMenuItem","Box","ToolbarVariablesContext","ToolbarVariablesProvider","ToolbarMenuRadioGroup","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","activeIndex","className","design","items","styles","variables","wrapper","parentVariables","mergedVariables","getA11yProps","debugName","rtl","mapPropsToInlineStyles","classes","resolvedStyles","handleItemOverrides","predefinedProps","onClick","e","itemProps","ElementType","unhandledProps","handledProps","content","root","item","index","create","defaultProps","as","active","overrideProps","element","slotClassNames","children","propTypes","createCommon","number","collectionShorthand","onItemClick","func","itemShorthand","Object","keys","Component"],"mappings":";;AAAA,SAEEA,6BAFF,EAGEC,4BAHF,QAKO,yBALP;AAMA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,SAASC,cAAT,EAAyBC,iBAAzB,EAA4CC,gBAA5C,EAA8DC,SAA9D,EAAyEC,YAAzE,QAA6F,0BAA7F;AACA,OAAO,KAAKC,eAAZ,MAAiC,2BAAjC;AAEA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,SAGEC,sBAHF,EAKEC,eALF,QAMO,aANP;AAOA,SAOEC,iBAPF,QAQO,aARP;AASA,OAAOC,eAAP,MAAsD,mBAAtD;AACA,OAAOC,GAAP,MAA8B,YAA9B;AACA,SAASC,uBAAT,EAAkCC,wBAAlC,QAAkE,2BAAlE;;AAgCA,IAAMC,qBAGH,GAAG,SAHAA,qBAGA,CAAAC,KAAK,EAAI;AACb,MAAMC,OAAgC,GAAGX,KAAK,CAACY,UAAN,CAAiBX,YAAjB,CAAzC;;AADa,sBAEgBJ,YAAY,CAACY,qBAAqB,CAACI,WAAvB,EAAoCF,OAAO,CAACG,SAA5C,CAF5B;AAAA,MAELC,QAFK,iBAELA,QAFK;AAAA,MAEKC,MAFL,iBAEKA,MAFL;;AAGbD,EAAAA,QAAQ;AAHK,MAKLE,aALK,GAKgFP,KALhF,CAKLO,aALK;AAAA,MAKUC,WALV,GAKgFR,KALhF,CAKUQ,WALV;AAAA,MAKuBC,SALvB,GAKgFT,KALhF,CAKuBS,SALvB;AAAA,MAKkCC,MALlC,GAKgFV,KALhF,CAKkCU,MALlC;AAAA,MAK0CC,KAL1C,GAKgFX,KALhF,CAK0CW,KAL1C;AAAA,MAKiDC,MALjD,GAKgFZ,KALhF,CAKiDY,MALjD;AAAA,MAKyDC,SALzD,GAKgFb,KALhF,CAKyDa,SALzD;AAAA,MAKoEC,OALpE,GAKgFd,KALhF,CAKoEc,OALpE;AAOb,MAAMC,eAAe,GAAGzB,KAAK,CAACY,UAAN,CAAiBL,uBAAjB,CAAxB;AACA,MAAMmB,eAAe,GAAGlC,uBAAuB,CAACiC,eAAD,EAAkBF,SAAlB,CAA/C;AAEA,MAAMI,YAAY,GAAGhC,gBAAgB,CAACsB,aAAD,EAAgB;AACnDW,IAAAA,SAAS,EAAEnB,qBAAqB,CAACI,WADkB;AAEnDgB,IAAAA,GAAG,EAAElB,OAAO,CAACkB;AAFsC,GAAhB,CAArC;;AAVa,mBAc+BjC,SAAS,CACnDa,qBAAqB,CAACI,WAD6B,EAEnD;AACEM,IAAAA,SAAS,EAAEV,qBAAqB,CAACU,SADnC;AAEEW,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BX,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BE,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAAEG;AAJkB,OAAP;AAAA,KAF1B;AAQEG,IAAAA,GAAG,EAAElB,OAAO,CAACkB;AARf,GAFmD,CAdxC;AAAA,MAcLE,OAdK,cAcLA,OAdK;AAAA,MAcYC,cAdZ,cAcIV,MAdJ;;AA4Bb,MAAMW,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,eAAD;AAAA,WAAkE;AAC5FC,MAAAA,OAAO,EAAE,iBAACC,CAAD,EAAIC,SAAJ,EAAkB;AACzB,gBAASH,eAAT,EAA0B,SAA1B,EAAqCE,CAArC,EAAwCC,SAAxC;;AACA,gBAAS3B,KAAT,EAAgB,aAAhB,EAA+B0B,CAA/B,EAAkCC,SAAlC;AACD,OAJ2F;AAK5Fb,MAAAA,OAAO,EAAE;AALmF,KAAlE;AAAA,GAA5B;;AAQA,MAAMc,WAAW,GAAG7C,cAAc,CAACiB,KAAD,CAAlC;AACA,MAAM6B,cAAc,GAAG7C,iBAAiB,CAACe,qBAAqB,CAAC+B,YAAvB,EAAqC9B,KAArC,CAAxC;AAEA,MAAM+B,OAAO,GACX,oBAAC,WAAD,EAAiBd,YAAY,CAAC,MAAD,oBAAcY,cAAd;AAA8BpB,IAAAA,SAAS,EAAEY,OAAO,CAACW;AAAjD,KAA7B,EACE,oBAAC,wBAAD;AAA0B,IAAA,KAAK,EAAEhB;AAAjC,KACG,KAAML,KAAN,EAAa,UAACsB,IAAD,EAAOC,KAAP;AAAA,WACZvC,eAAe,CAACwC,MAAhB,CAAuBF,IAAvB,EAA6B;AAC3BG,MAAAA,YAAY,EAAE;AAAA,eAAO;AACnB7B,UAAAA,aAAa,EAAE1B,4BADI;AAEnBwD,UAAAA,EAAE,EAAE,IAFe;AAGnBC,UAAAA,MAAM,EAAE9B,WAAW,KAAK0B,KAHL;AAInBA,UAAAA,KAAK,EAALA;AAJmB,SAAP;AAAA,OADa;AAO3BK,MAAAA,aAAa,EAAEhB;AAPY,KAA7B,CADY;AAAA,GAAb,CADH,CADF,CADF;AAiBA,MAAMiB,OAAO,GAAG5C,GAAG,CAACuC,MAAJ,CAAWrB,OAAX,EAAoB;AAClCsB,IAAAA,YAAY,EAAE;AAAA,aACZnB,YAAY,CAAC,SAAD,EAAY;AACtBoB,QAAAA,EAAE,EAAE,IADkB;AAEtB5B,QAAAA,SAAS,EAAEV,qBAAqB,CAAC0C,cAAtB,CAAqC3B,OAF1B;AAGtBF,QAAAA,MAAM,EAAEU,cAAc,CAACR;AAHD,OAAZ,CADA;AAAA,KADoB;AAOlCyB,IAAAA,aAAa,EAAE;AACbG,MAAAA,QAAQ,EAAEX;AADG;AAPmB,GAApB,CAAhB;AAWAzB,EAAAA,MAAM;AAEN,SAAOkC,OAAP;AACD,CAzED;;AA2EAzC,qBAAqB,CAACU,SAAtB,GAAkC,aAAlC,C,CAAiD;;AACjDV,qBAAqB,CAACI,WAAtB,GAAoC,uBAApC;AACAJ,qBAAqB,CAAC0C,cAAtB,GAAuC;AACrC3B,EAAAA,OAAO,YAAKf,qBAAqB,CAACU,SAA3B;AAD8B,CAAvC;AAIAV,qBAAqB,CAACqC,YAAtB,GAAqC;AACnCC,EAAAA,EAAE,EAAE,IAD+B;AAEnC9B,EAAAA,aAAa,EAAE3B,6BAFoB;AAGnCkC,EAAAA,OAAO,EAAE;AAH0B,CAArC;AAKAf,qBAAqB,CAAC4C,SAAtB,qBACKlD,eAAe,CAACmD,YAAhB,EADL;AAEEpC,EAAAA,WAAW,EAAEnB,SAAS,CAACwD,MAFzB;AAGElC,EAAAA,KAAK,EAAEvB,eAAe,CAAC0D,mBAHzB;AAIEC,EAAAA,WAAW,EAAE1D,SAAS,CAAC2D,IAJzB;AAKElC,EAAAA,OAAO,EAAE1B,eAAe,CAAC6D;AAL3B;AAOAlD,qBAAqB,CAAC+B,YAAtB,GAAqCoB,MAAM,CAACC,IAAP,CAAYpD,qBAAqB,CAAC4C,SAAlC,CAArC;AAEA5C,qBAAqB,CAACoC,MAAtB,GAA+B3C,sBAAsB,CAAC;AACpD4D,EAAAA,SAAS,EAAErD;AADyC,CAAD,CAArD;AAIA;;;;AAGA,eAAeL,iBAAiB,CAAiEK,qBAAjE,CAAhC","sourcesContent":["import {\n  Accessibility,\n  toolbarMenuRadioGroupBehavior,\n  toolbarMenuItemRadioBehavior,\n  ToolbarMenuRadioGroupBehaviorProps,\n} from '@fluentui/accessibility';\nimport { mergeComponentVariables } from '@fluentui/styles';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  ChildrenComponentProps,\n  ContentComponentProps,\n  createShorthandFactory,\n  UIComponentProps,\n  commonPropTypes,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n  ShorthandCollection,\n  ShorthandValue,\n  WithAsProp,\n  withSafeTypeForAs,\n} from '../../types';\nimport ToolbarMenuItem, { ToolbarMenuItemProps } from './ToolbarMenuItem';\nimport Box, { BoxProps } from '../Box/Box';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\n\nexport interface ToolbarMenuRadioGroupProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarMenuRadioGroupBehaviorProps>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number;\n\n  /** Shorthand array of props for ToolbarMenuRadioGroup. */\n  items?: ShorthandCollection<ToolbarMenuItemProps>;\n\n  /**\n   * Called on item click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<BoxProps>;\n}\n\nexport type ToolbarMenuRadioGroupStylesProps = never;\n\nexport interface ToolbarMenuRadioGroupSlotClassNames {\n  wrapper: string;\n}\n\nconst ToolbarMenuRadioGroup: React.FC<WithAsProp<ToolbarMenuRadioGroupProps>> &\n  FluentComponentStaticProps<ToolbarMenuRadioGroupProps> & {\n    slotClassNames: ToolbarMenuRadioGroupSlotClassNames;\n  } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(ToolbarMenuRadioGroup.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, activeIndex, className, design, items, styles, variables, wrapper } = props;\n\n  const parentVariables = React.useContext(ToolbarVariablesContext);\n  const mergedVariables = mergeComponentVariables(parentVariables, variables);\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: ToolbarMenuRadioGroup.displayName,\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ToolbarMenuRadioGroupStylesProps>(\n    ToolbarMenuRadioGroup.displayName,\n    {\n      className: ToolbarMenuRadioGroup.className,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergedVariables,\n      }),\n      rtl: context.rtl,\n    },\n  );\n\n  const handleItemOverrides = (predefinedProps: ToolbarMenuItemProps): ToolbarMenuItemProps => ({\n    onClick: (e, itemProps) => {\n      _.invoke(predefinedProps, 'onClick', e, itemProps);\n      _.invoke(props, 'onItemClick', e, itemProps);\n    },\n    wrapper: null,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ToolbarMenuRadioGroup.handledProps, props);\n\n  const content = (\n    <ElementType {...getA11yProps('root', { ...unhandledProps, className: classes.root })}>\n      <ToolbarVariablesProvider value={mergedVariables}>\n        {_.map(items, (item, index) =>\n          ToolbarMenuItem.create(item, {\n            defaultProps: () => ({\n              accessibility: toolbarMenuItemRadioBehavior,\n              as: 'li',\n              active: activeIndex === index,\n              index,\n            }),\n            overrideProps: handleItemOverrides,\n          }),\n        )}\n      </ToolbarVariablesProvider>\n    </ElementType>\n  );\n  const element = Box.create(wrapper, {\n    defaultProps: () =>\n      getA11yProps('wrapper', {\n        as: 'li',\n        className: ToolbarMenuRadioGroup.slotClassNames.wrapper,\n        styles: resolvedStyles.wrapper,\n      }),\n    overrideProps: {\n      children: content,\n    },\n  });\n  setEnd();\n\n  return element;\n};\n\nToolbarMenuRadioGroup.className = 'ui-toolbars'; // FIXME: required by getComponentInfo/isConformant. But this is group inside a toolbar not a group of toolbars\nToolbarMenuRadioGroup.displayName = 'ToolbarMenuRadioGroup';\nToolbarMenuRadioGroup.slotClassNames = {\n  wrapper: `${ToolbarMenuRadioGroup.className}__wrapper`,\n};\n\nToolbarMenuRadioGroup.defaultProps = {\n  as: 'ul',\n  accessibility: toolbarMenuRadioGroupBehavior,\n  wrapper: {},\n};\nToolbarMenuRadioGroup.propTypes = {\n  ...commonPropTypes.createCommon(),\n  activeIndex: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  onItemClick: PropTypes.func,\n  wrapper: customPropTypes.itemShorthand,\n};\nToolbarMenuRadioGroup.handledProps = Object.keys(ToolbarMenuRadioGroup.propTypes) as any;\n\nToolbarMenuRadioGroup.create = createShorthandFactory({\n  Component: ToolbarMenuRadioGroup,\n});\n\n/**\n * A ToolbarMenuRadioGroup renders ToolbarMenuItem as a group of mutually exclusive options.\n */\nexport default withSafeTypeForAs<typeof ToolbarMenuRadioGroup, ToolbarMenuRadioGroupProps, 'ul'>(ToolbarMenuRadioGroup);\n"],"file":"ToolbarMenuRadioGroup.js"}