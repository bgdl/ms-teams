import { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';
import { mergeComponentVariables } from '@fluentui/styles'; // @ts-ignore

import { ThemeContext } from 'react-fela';
import * as React from 'react';
import { withSafeTypeForAs } from '../../types';
import { createShorthandFactory, commonPropTypes } from '../../utils';
import { ToolbarVariablesContext } from './toolbarVariablesContext';

var ToolbarDivider = function ToolbarDivider(props) {
  var context = React.useContext(ThemeContext);

  var _useTelemetry = useTelemetry(ToolbarDivider.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var accessibility = props.accessibility,
      className = props.className,
      design = props.design,
      styles = props.styles,
      variables = props.variables;
  var parentVariables = React.useContext(ToolbarVariablesContext);
  var getA11yProps = useAccessibility(accessibility, {
    debugName: ToolbarDivider.displayName,
    rtl: context.rtl
  });

  var _useStyles = useStyles(ToolbarDivider.displayName, {
    className: ToolbarDivider.className,
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: mergeComponentVariables(parentVariables, variables)
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes;

  var ElementType = getElementType(props);
  var unhandledProps = useUnhandledProps(ToolbarDivider.handledProps, props);
  var element = React.createElement(ElementType, getA11yProps('root', Object.assign({}, unhandledProps, {
    className: classes.root
  })));
  setEnd();
  return element;
};

ToolbarDivider.className = 'ui-toolbar__divider';
ToolbarDivider.displayName = 'ToolbarDivider';
ToolbarDivider.propTypes = commonPropTypes.createCommon();
ToolbarDivider.handledProps = Object.keys(ToolbarDivider.propTypes);
ToolbarDivider.create = createShorthandFactory({
  Component: ToolbarDivider,
  mappedProp: 'content'
});
/**
 * A ToolbarDivider is a non-actionable element that visually segments Toolbar items.
 */

export default withSafeTypeForAs(ToolbarDivider);
//# sourceMappingURL=ToolbarDivider.js.map
