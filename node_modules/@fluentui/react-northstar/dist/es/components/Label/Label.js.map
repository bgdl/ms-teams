{"version":3,"sources":["components/Label/Label.tsx"],"names":["getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","customPropTypes","PropTypes","React","ThemeContext","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","Image","Box","withSafeTypeForAs","Label","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","children","className","circular","color","content","icon","iconPosition","design","styles","variables","image","imagePosition","getA11Props","debugName","rtl","mapPropsToStyles","hasActionableIcon","hasImage","hasIcon","mapPropsToInlineStyles","classes","resolvedStyles","ElementType","unhandledProps","handledProps","element","root","getAttributes","forElements","imageElement","create","defaultProps","iconElement","contentElement","startImage","startIcon","endIcon","endImage","propTypes","createCommon","bool","shorthandAllowingChildren","oneOf","itemShorthandWithoutJSX","fluid","Object","keys","as","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  ColorComponentProps,\n  rtlTextContainer,\n} from '../../utils';\n\nimport Image, { ImageProps } from '../Image/Image';\nimport Box, { BoxProps } from '../Box/Box';\n\nimport {\n  WithAsProp,\n  ShorthandValue,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\n\nexport interface LabelProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>>,\n    ColorComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A Label can be circular. */\n  circular?: boolean;\n\n  /** A Label can take up the width of its container. */\n  fluid?: boolean;\n\n  /** A Label can have an icon. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** A Label can position its Icon at the start or end of the layout. */\n  iconPosition?: 'start' | 'end';\n\n  /** A Label can contain an image. */\n  image?: ShorthandValue<ImageProps>;\n\n  /** A Label can position its image at the start or end of the layout. */\n  imagePosition?: 'start' | 'end';\n}\n\nexport type LabelStylesProps = Pick<LabelProps, 'circular' | 'color' | 'imagePosition' | 'iconPosition'> & {\n  hasImage: boolean;\n  hasIcon: boolean;\n  hasActionableIcon: boolean;\n};\n\nconst Label: React.FC<WithAsProp<LabelProps>> & FluentComponentStaticProps = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Label.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    circular,\n    color,\n    content,\n    icon,\n    iconPosition,\n    design,\n    styles,\n    variables,\n    image,\n    imagePosition,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Label.displayName,\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<LabelStylesProps>(Label.displayName, {\n    className: Label.className,\n    mapPropsToStyles: () => ({\n      hasActionableIcon: _.has(icon, 'onClick'),\n      hasImage: !!image,\n      hasIcon: !!icon,\n      circular,\n      color,\n      imagePosition,\n      iconPosition,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Label.handledProps, props);\n\n  if (childrenExist(children)) {\n    const element = (\n      <ElementType\n        {...getA11Props('root', {\n          className: classes.root,\n          ...rtlTextContainer.getAttributes({ forElements: [children] }),\n          ...unhandledProps,\n        })}\n      >\n        {children}\n      </ElementType>\n    );\n    setEnd();\n\n    return element;\n  }\n\n  const imageElement = Image.create(image, {\n    defaultProps: () => ({\n      styles: resolvedStyles.image,\n    }),\n  });\n  const iconElement = Box.create(icon, {\n    defaultProps: () => ({\n      styles: resolvedStyles.icon,\n    }),\n  });\n  const contentElement = Box.create(content, {\n    defaultProps: () => ({\n      styles: resolvedStyles.content,\n    }),\n  });\n\n  const startImage = imagePosition === 'start' && imageElement;\n  const startIcon = iconPosition === 'start' && iconElement;\n  const endIcon = iconPosition === 'end' && iconElement;\n  const endImage = imagePosition === 'end' && imageElement;\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {startImage}\n      {startIcon}\n      {contentElement}\n      {endIcon}\n      {endImage}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n};\n\nLabel.displayName = 'Label';\nLabel.className = 'ui-label';\n\nLabel.propTypes = {\n  ...commonPropTypes.createCommon({ color: true, content: 'shorthand' }),\n  circular: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  iconPosition: PropTypes.oneOf(['start', 'end']),\n  image: customPropTypes.itemShorthandWithoutJSX,\n  imagePosition: PropTypes.oneOf(['start', 'end']),\n  fluid: PropTypes.bool,\n};\nLabel.handledProps = Object.keys(Label.propTypes) as any;\n\nLabel.defaultProps = {\n  as: 'span',\n  imagePosition: 'start',\n  iconPosition: 'end',\n};\n\nLabel.create = createShorthandFactory({ Component: Label, mappedProp: 'content' });\n\n/**\n * A Label allows user to classify content.\n */\nexport default withSafeTypeForAs<typeof Label, LabelProps, 'span'>(Label);\n"],"file":"Label.js"}