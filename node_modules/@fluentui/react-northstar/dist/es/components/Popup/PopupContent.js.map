{"version":3,"sources":["components/Popup/PopupContent.tsx"],"names":["AutoFocusZone","FocusTrapZone","getElementType","useAccessibility","useStyles","useTelemetry","useUnhandledProps","customPropTypes","cx","PropTypes","React","ThemeContext","withSafeTypeForAs","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","getBasePlacement","PopupContent","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","autoFocus","children","className","content","design","placement","pointing","pointerRef","styles","trapFocus","variables","getA11yProps","debugName","rtl","mapPropsToStyles","basePlacement","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","handleMouseEnter","e","handleMouseLeave","popupContentProps","root","getAttributes","forElements","onMouseEnter","onMouseLeave","popupContent","pointer","slotClassNames","element","focusTrapZoneProps","length","as","autoFocusZoneProps","propTypes","createCommon","oneOf","bool","func","ref","oneOfType","object","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  AutoFocusZone,\n  AutoFocusZoneProps,\n  FocusTrapZone,\n  FocusTrapZoneProps,\n  getElementType,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport Popper from 'popper.js';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  WithAsProp,\n  ComponentEventHandler,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport { getBasePlacement, PopperChildrenProps } from '../../utils/positioner';\n\nexport interface PopupContentSlotClassNames {\n  content: string;\n}\n\nexport interface PopupContentProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n\n  /**\n   * Called after user's mouse enter.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseEnter?: ComponentEventHandler<PopupContentProps>;\n\n  /**\n   * Called after user's mouse leave.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseLeave?: ComponentEventHandler<PopupContentProps>;\n\n  /** An actual placement value from Popper. */\n  placement?: PopperChildrenProps['placement'];\n\n  /** A popup can show a pointer to trigger. */\n  pointing?: boolean;\n\n  /** A ref to a pointer element. */\n  pointerRef?: React.Ref<HTMLDivElement>;\n\n  /** Controls whether or not focus trap should be applied, using boolean or FocusTrapZoneProps type value. */\n  trapFocus?: boolean | FocusTrapZoneProps;\n\n  /** Controls whether or not auto focus should be applied, using boolean or AutoFocusZoneProps type value. */\n  autoFocus?: boolean | AutoFocusZoneProps;\n}\n\nexport type PopupContentStylesProps = Required<Pick<PopupContentProps, 'pointing'>> & {\n  basePlacement: Popper.Position;\n};\n\nconst PopupContent: React.FC<WithAsProp<PopupContentProps>> &\n  FluentComponentStaticProps<PopupContentProps> & { slotClassNames: PopupContentSlotClassNames } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(PopupContent.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    autoFocus,\n    children,\n    className,\n    content,\n    design,\n    placement,\n    pointing,\n    pointerRef,\n    styles,\n    trapFocus,\n    variables,\n  } = props;\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: PopupContent.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<PopupContentStylesProps>(PopupContent.displayName, {\n    className: PopupContent.className,\n    mapPropsToStyles: () => ({\n      basePlacement: getBasePlacement(placement, context.rtl),\n      pointing,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(PopupContent.handledProps, props);\n\n  const handleMouseEnter = e => {\n    _.invoke(props, 'onMouseEnter', e, props);\n  };\n\n  const handleMouseLeave = e => {\n    _.invoke(props, 'onMouseLeave', e, props);\n  };\n\n  const popupContentProps: PopupContentProps = getA11yProps('root', {\n    className: classes.root,\n    ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n    ...unhandledProps,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n  });\n  const popupContent = (\n    <>\n      {pointing && <div className={classes.pointer} ref={pointerRef} />}\n      <div className={cx(PopupContent.slotClassNames.content, classes.content)}>\n        {childrenExist(children) ? children : content}\n      </div>\n    </>\n  );\n\n  let element: React.ReactElement;\n\n  if (trapFocus) {\n    const focusTrapZoneProps = {\n      ...popupContentProps,\n      ...((_.keys(trapFocus).length && trapFocus) as FocusTrapZoneProps),\n      as: ElementType,\n    };\n    element = <FocusTrapZone {...focusTrapZoneProps}>{popupContent}</FocusTrapZone>;\n  } else if (autoFocus) {\n    const autoFocusZoneProps = {\n      ...popupContentProps,\n      ...((_.keys(autoFocus).length && autoFocus) as AutoFocusZoneProps),\n      as: ElementType,\n    };\n    element = <AutoFocusZone {...autoFocusZoneProps}>{popupContent}</AutoFocusZone>;\n  } else {\n    element = <ElementType {...popupContentProps}>{popupContent}</ElementType>;\n  }\n\n  setEnd();\n\n  return element;\n};\n\nPopupContent.displayName = 'PopupContent';\nPopupContent.className = 'ui-popup__content';\n\nPopupContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  placement: PropTypes.oneOf<Popper.Placement>([\n    'auto-start',\n    'auto',\n    'auto-end',\n    'top-start',\n    'top',\n    'top-end',\n    'right-start',\n    'right',\n    'right-end',\n    'bottom-end',\n    'bottom',\n    'bottom-start',\n    'left-end',\n    'left',\n    'left-start',\n  ]),\n  pointing: PropTypes.bool,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pointerRef: customPropTypes.ref,\n  trapFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  autoFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n};\nPopupContent.handledProps = Object.keys(PopupContent.propTypes) as any;\n\nPopupContent.slotClassNames = {\n  content: `${PopupContent.className}__content`,\n};\n\nPopupContent.create = createShorthandFactory({ Component: PopupContent, mappedProp: 'content' });\n\n/**\n * A PopupContent displays the content of a Popup component.\n */\nexport default withSafeTypeForAs<typeof PopupContent, PopupContentProps>(PopupContent);\n"],"file":"PopupContent.js"}