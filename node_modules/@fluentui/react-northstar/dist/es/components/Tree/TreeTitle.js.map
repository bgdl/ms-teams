{"version":3,"sources":["components/Tree/TreeTitle.tsx"],"names":["treeTitleBehavior","getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","PropTypes","React","ThemeContext","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","withSafeTypeForAs","TreeTitle","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","children","className","content","design","hasSubtree","level","index","styles","treeSize","variables","getA11Props","debugName","actionHandlers","performClick","e","preventDefault","handleClick","mapPropsToBehavior","rtl","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","element","root","onClick","getAttributes","forElements","propTypes","createCommon","bool","number","func","expanded","defaultProps","as","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, treeTitleBehavior, TreeTitleBehaviorProps } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n  WithAsProp,\n  withSafeTypeForAs,\n} from '../../types';\n\nexport interface TreeTitleProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeTitleBehaviorProps>;\n\n  /** Whether or not the title has a subtree. */\n  hasSubtree?: boolean;\n\n  /** The index of the title among its siblings. Count starts at 1. */\n  index?: number;\n\n  /** Level of the tree/subtree that contains this title. */\n  level?: number;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<TreeTitleProps>;\n\n  /** Whether or not the subtree of the title is in the open state. */\n  expanded?: boolean;\n\n  /** Size of the tree containing this title without any children. */\n  treeSize?: number;\n}\n\nexport type TreeTitleStylesProps = never;\n\nconst TreeTitle: React.FC<WithAsProp<TreeTitleProps>> & FluentComponentStaticProps<TreeTitleProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(TreeTitle.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    content,\n    design,\n    hasSubtree,\n    level,\n    index,\n    styles,\n    treeSize,\n    variables,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: TreeTitle.displayName,\n    actionHandlers: {\n      performClick: e => {\n        e.preventDefault();\n        handleClick(e);\n      },\n    },\n    mapPropsToBehavior: () => ({\n      hasSubtree,\n      level,\n      index,\n      treeSize,\n    }),\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<TreeTitleStylesProps>(TreeTitle.displayName, {\n    className: TreeTitle.className,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TreeTitle.handledProps, props);\n\n  const handleClick = e => {\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        onClick: handleClick,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n};\n\nTreeTitle.className = 'ui-tree__title';\nTreeTitle.displayName = 'TreeTitle';\n\nTreeTitle.propTypes = {\n  ...commonPropTypes.createCommon(),\n  hasSubtree: PropTypes.bool,\n  index: PropTypes.number,\n  level: PropTypes.number,\n  onClick: PropTypes.func,\n  expanded: PropTypes.bool,\n  treeSize: PropTypes.number,\n};\nTreeTitle.defaultProps = {\n  as: 'a',\n  accessibility: treeTitleBehavior,\n};\nTreeTitle.handledProps = Object.keys(TreeTitle.propTypes) as any;\n\nTreeTitle.create = createShorthandFactory({\n  Component: TreeTitle,\n  mappedProp: 'content',\n});\n\n/**\n * A TreeTitle renders a title of TreeItem.\n */\nexport default withSafeTypeForAs<typeof TreeTitle, TreeTitleProps, 'a'>(TreeTitle);\n"],"file":"TreeTitle.js"}