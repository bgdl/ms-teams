{"version":3,"sources":["components/Tree/TreeItem.tsx"],"names":["treeItemBehavior","getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","customPropTypes","PropTypes","React","ThemeContext","Ref","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","withSafeTypeForAs","TreeTitle","hasSubtree","TreeContext","TreeItem","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","children","className","contentRef","design","title","renderItemTitle","expanded","level","index","styles","variables","treeSize","hasSubtreeItem","onFocusParent","onSiblingsExpand","onFocusFirstChild","onTitleClick","getA11Props","actionHandlers","performClick","e","preventDefault","stopPropagation","handleTitleClick","focusParent","handleFocusParent","collapse","expand","focusFirstChild","handleFocusFirstChild","expandSiblings","handleSiblingsExpand","debugName","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","id","parent","handleTitleOverrides","predefinedProps","onClick","titleProps","ElementType","unhandledProps","handledProps","element","root","getAttributes","forElements","create","defaultProps","slotClassNames","as","render","overrideProps","elementWithRef","subtree","propTypes","createCommon","content","ref","string","isRequired","number","items","collectionShorthand","func","bool","itemShorthand","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, treeItemBehavior, TreeItemBehaviorProps } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport { Ref } from '@fluentui/react-component-ref';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  WithAsProp,\n  ShorthandRenderFunction,\n  ShorthandValue,\n  withSafeTypeForAs,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport TreeTitle, { TreeTitleProps } from './TreeTitle';\nimport { hasSubtree, TreeContext } from './utils';\n\nexport interface TreeItemSlotClassNames {\n  title: string;\n  subtree: string;\n}\n\nexport interface TreeItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeItemBehaviorProps>;\n\n  /** Ref for the item DOM element. */\n  contentRef?: React.Ref<HTMLElement>;\n\n  /** Id needed to identify this item inside the Tree. */\n  id: string;\n\n  /** The index of the item among its siblings. Count starts at 1. */\n  index?: number;\n\n  /** Array of props for sub tree. */\n  items?: ShorthandCollection<TreeItemProps>;\n\n  /** Level of the tree/subtree that contains this item. */\n  level?: number;\n\n  /** Called when the item's first child is about to be focused. */\n  onFocusFirstChild?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's parent is about to be focused. */\n  onFocusParent?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when a tree title is clicked. */\n  onTitleClick?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's siblings are about to be expanded. */\n  onSiblingsExpand?: ComponentEventHandler<TreeItemProps>;\n\n  /** Whether or not the item is in the expanded state. Only makes sense if item has children items. */\n  expanded?: boolean;\n\n  /** The id of the parent tree item, if any. */\n  parent?: string;\n\n  /**\n   * A custom render iterator for rendering each tree title.\n   * The default component, props, and children are available for each tree title.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItemTitle?: ShorthandRenderFunction<TreeTitleProps>;\n\n  /** Size of the tree/subtree that contains this item. */\n  treeSize?: number;\n\n  /** Properties for TreeTitle. */\n  title?: ShorthandValue<TreeTitleProps>;\n}\n\nexport type TreeItemStylesProps = Required<Pick<TreeItemProps, 'level'>>;\n\nconst TreeItem: React.FC<WithAsProp<TreeItemProps>> &\n  FluentComponentStaticProps<TreeItemProps> & { slotClassNames: TreeItemSlotClassNames } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(TreeItem.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    contentRef,\n    design,\n    title,\n    renderItemTitle,\n    expanded,\n    level,\n    index,\n    styles,\n    variables,\n    treeSize,\n  } = props;\n\n  const hasSubtreeItem = hasSubtree(props);\n  const { onFocusParent, onSiblingsExpand, onFocusFirstChild, onTitleClick } = React.useContext(TreeContext);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      performClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleTitleClick(e);\n      },\n      focusParent: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusParent(e);\n      },\n      collapse: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleTitleClick(e);\n      },\n      expand: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleTitleClick(e);\n      },\n      focusFirstChild: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusFirstChild(e);\n      },\n      expandSiblings: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleSiblingsExpand(e);\n      },\n    },\n    debugName: TreeItem.className,\n    mapPropsToBehavior: () => ({\n      expanded,\n      level,\n      index,\n      hasSubtree: hasSubtreeItem,\n      treeSize,\n    }),\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<TreeItemStylesProps>(TreeItem.displayName, {\n    className: TreeItem.className,\n    mapPropsToStyles: () => ({\n      level,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const handleTitleClick = e => {\n    onTitleClick(e, props);\n    _.invoke(props, 'onTitleClick', e, props);\n  };\n  const handleFocusFirstChild = e => {\n    _.invoke(props, 'onFocusFirstChild', e, props);\n    onFocusFirstChild(props.id);\n  };\n  const handleFocusParent = e => {\n    _.invoke(props, 'onFocusParent', e, props);\n    onFocusParent(props.parent);\n  };\n  const handleSiblingsExpand = e => {\n    _.invoke(props, 'onSiblingsExpand', e, props);\n    onSiblingsExpand(e, props);\n  };\n  const handleTitleOverrides = (predefinedProps: TreeTitleProps) => ({\n    onClick: (e, titleProps) => {\n      handleTitleClick(e);\n      _.invoke(predefinedProps, 'onClick', e, titleProps);\n    },\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TreeItem.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children)\n        ? children\n        : TreeTitle.create(title, {\n            defaultProps: () =>\n              getA11Props('title', {\n                className: TreeItem.slotClassNames.title,\n                expanded,\n                hasSubtree: hasSubtreeItem,\n                as: hasSubtreeItem ? 'span' : 'a',\n                level,\n                treeSize,\n                index,\n              }),\n            render: renderItemTitle,\n            overrideProps: handleTitleOverrides,\n          })}\n    </ElementType>\n  );\n\n  const elementWithRef = contentRef ? <Ref innerRef={contentRef}>{element}</Ref> : element;\n  setEnd();\n\n  return elementWithRef;\n};\n\nTreeItem.className = 'ui-tree__item';\nTreeItem.displayName = 'TreeItem';\n\nTreeItem.slotClassNames = {\n  title: `${TreeItem.className}__title`,\n  subtree: `${TreeItem.className}__subtree`,\n};\n\nTreeItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  contentRef: customPropTypes.ref,\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  level: PropTypes.number,\n  onFocusFirstChild: PropTypes.func,\n  onFocusParent: PropTypes.func,\n  onTitleClick: PropTypes.func,\n  onSiblingsExpand: PropTypes.func,\n  expanded: PropTypes.bool,\n  parent: PropTypes.string,\n  renderItemTitle: PropTypes.func,\n  treeSize: PropTypes.number,\n  title: customPropTypes.itemShorthand,\n};\nTreeItem.defaultProps = {\n  accessibility: treeItemBehavior,\n};\nTreeItem.handledProps = Object.keys(TreeItem.propTypes) as any;\n\nTreeItem.create = createShorthandFactory({\n  Component: TreeItem,\n  mappedProp: 'title',\n});\n\n/**\n * A TreeItem renders an item of a Tree.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n */\nexport default withSafeTypeForAs<typeof TreeItem, TreeItemProps, 'li'>(TreeItem);\n"],"file":"TreeItem.js"}