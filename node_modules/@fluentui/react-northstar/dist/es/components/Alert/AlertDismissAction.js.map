{"version":3,"sources":["components/Alert/AlertDismissAction.tsx"],"names":["buttonBehavior","PropTypes","React","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","withSafeTypeForAs","getElementType","useAccessibility","useStyles","useTelemetry","useUnhandledProps","Box","ThemeContext","AlertDismissAction","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","as","children","className","content","disabled","design","styles","variables","danger","warning","info","success","hasChildren","hasContent","getA11Props","debugName","mapPropsToBehavior","actionHandlers","performClick","event","preventDefault","handleClick","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","unhandledProps","handledProps","ElementType","e","result","getAttributes","forElements","onClick","root","create","defaultProps","slotClassNames","propTypes","createCommon","bool","func","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, buttonBehavior, ButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ContentComponentProps,\n} from '../../utils';\n\nimport {\n  ComponentEventHandler,\n  WithAsProp,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n  ShorthandValue,\n} from '../../types';\nimport { getElementType, useAccessibility, useStyles, useTelemetry, useUnhandledProps } from '@fluentui/react-bindings';\nimport Box, { BoxProps } from '../Box/Box';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nexport interface AlertDismissActionProps\n  extends UIComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>>,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ButtonBehaviorProps>;\n\n  /** A dismiss action can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** An alert may be formatted to display a danger message. */\n  danger?: boolean;\n\n  /** An alert can be formatted to display a warning message. */\n  warning?: boolean;\n\n  /** An alert can be formatted to display a successful message. */\n  success?: boolean;\n\n  /** An alert may be formatted to display information. */\n  info?: boolean;\n\n  /**\n   * Called after a user clicks the paddle.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<AlertDismissActionProps>;\n}\n\nexport type AlertDismissActionSlotClassNames = {\n  content: string;\n};\n\nexport type AlertDismissActionStylesProps = Pick<\n  AlertDismissActionProps,\n  'disabled' | 'danger' | 'warning' | 'info' | 'success'\n> & {\n  hasContent?: boolean;\n};\n\nconst AlertDismissAction: React.FC<WithAsProp<AlertDismissActionProps>> &\n  FluentComponentStaticProps<AlertDismissActionProps> & {\n    slotClassNames: AlertDismissActionSlotClassNames;\n  } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(AlertDismissAction.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    as,\n    children,\n    className,\n    content,\n    disabled,\n    design,\n    styles,\n    variables,\n    danger,\n    warning,\n    info,\n    success,\n  } = props;\n\n  const hasChildren = childrenExist(children);\n  const hasContent = !!content && !_.isEmpty(content);\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: AlertDismissAction.displayName,\n    mapPropsToBehavior: () => ({\n      as,\n      disabled,\n    }),\n    actionHandlers: {\n      performClick: event => {\n        event.preventDefault();\n        handleClick(event);\n      },\n    },\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<AlertDismissActionStylesProps>(AlertDismissAction.displayName, {\n    className: AlertDismissAction.className,\n    mapPropsToStyles: () => ({\n      disabled,\n      danger,\n      warning,\n      info,\n      success,\n      hasContent: hasContent || hasChildren,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const unhandledProps = useUnhandledProps(AlertDismissAction.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const result = (\n    <ElementType\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n      {...getA11Props('root', {\n        onClick: handleClick,\n        disabled,\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {hasChildren\n        ? children\n        : Box.create(content, {\n            defaultProps: () =>\n              getA11Props('content', {\n                as: 'span',\n                className: AlertDismissAction.slotClassNames.content,\n                styles: resolvedStyles.content,\n              }),\n          })}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return result;\n};\n\nAlertDismissAction.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n  content: {},\n};\n\nAlertDismissAction.displayName = 'AlertDismissAction';\nAlertDismissAction.className = 'ui-alert__dismissaction';\n\nAlertDismissAction.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n  }),\n  disabled: PropTypes.bool,\n  danger: PropTypes.bool,\n  warning: PropTypes.bool,\n  info: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nAlertDismissAction.handledProps = Object.keys(AlertDismissAction.propTypes) as any;\n\nAlertDismissAction.create = createShorthandFactory({ Component: AlertDismissAction, mappedProp: 'content' });\n\nAlertDismissAction.slotClassNames = {\n  content: `${AlertDismissAction.className}__content`,\n};\n\n/**\n * A AlertDismissAction allows users to customize the dismissAction slot  inside the Alert component.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\nexport default withSafeTypeForAs<typeof AlertDismissAction, AlertDismissActionProps, 'button'>(AlertDismissAction);\n"],"file":"AlertDismissAction.js"}