{"version":3,"sources":["components/Layout/Layout.tsx"],"names":["React","PropTypes","cx","UIComponent","commonPropTypes","rtlTextContainer","withSafeTypeForAs","Layout","ElementType","classes","unhandledProps","props","reducing","disappearing","start","main","end","renderStartArea","renderMainArea","renderEndArea","renderGap","startArea","mainArea","endArea","root","activeAreas","filter","Boolean","isSingleArea","length","composedClasses","slotClassNames","reducedStart","reducedMain","reducedEnd","createCommon","accessibility","children","content","debug","bool","func","rootCSS","object","any","startCSS","startSize","string","mainCSS","mainSize","endCSS","endSize","justifyItems","alignItems","gap","vertical","getAttributes","forElements","className"],"mappings":"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","sourcesContent":["import { ICSSInJSStyle } from '@fluentui/styles';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { UIComponent, UIComponentProps, commonPropTypes, rtlTextContainer } from '../../utils';\nimport { WithAsProp, withSafeTypeForAs } from '../../types';\n\nexport interface LayoutSlotClassNames {\n  start: string;\n  main: string;\n  end: string;\n  gap: string;\n  reducedStart: string;\n  reducedMain: string;\n  reducedEnd: string;\n}\n\nexport interface LayoutProps extends UIComponentProps {\n  debug?: boolean;\n  renderStartArea?: (params: object) => React.ReactNode;\n  renderMainArea?: (params: object) => React.ReactNode;\n  renderEndArea?: (params: object) => React.ReactNode;\n  renderGap?: (params: object) => React.ReactNode;\n  /** Styled applied to the root element of the rendered component. */\n  rootCSS?: ICSSInJSStyle;\n  start?: any;\n  startCSS?: ICSSInJSStyle;\n  startSize?: string;\n  main?: any;\n  mainCSS?: ICSSInJSStyle;\n  mainSize?: string;\n  end?: any;\n  endCSS?: ICSSInJSStyle;\n  endSize?: string;\n  /** How to align items on-axis within the layout (i.e. vertical or not). */\n  justifyItems?: React.CSSProperties['justifyItems'];\n  /** How to align cross-axis items within the layout (i.e. vertical or not). */\n  alignItems?: React.CSSProperties['alignItems'];\n  /** A layout can have gaps of whitespace between areas. */\n  gap?: string;\n  /** A layout can reduce to the minimum required areas. */\n  reducing?: boolean;\n  /** A layout can render its content directly if only one piece of content exists. */\n  disappearing?: boolean;\n  vertical?: boolean;\n}\n\nclass Layout extends UIComponent<WithAsProp<LayoutProps>, any> {\n  static className = 'ui-layout';\n\n  static displayName = 'Layout';\n\n  static slotClassNames: LayoutSlotClassNames;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      accessibility: false,\n      children: false,\n      content: false,\n    }),\n    debug: PropTypes.bool,\n\n    renderStartArea: PropTypes.func,\n    renderMainArea: PropTypes.func,\n    renderEndArea: PropTypes.func,\n    renderGap: PropTypes.func,\n\n    rootCSS: PropTypes.object,\n\n    start: PropTypes.any,\n    startCSS: PropTypes.object,\n    startSize: PropTypes.string,\n\n    main: PropTypes.any,\n    mainCSS: PropTypes.object,\n    mainSize: PropTypes.string,\n\n    end: PropTypes.any,\n    endCSS: PropTypes.object,\n    endSize: PropTypes.string,\n\n    justifyItems: PropTypes.any,\n\n    alignItems: PropTypes.any,\n\n    gap: PropTypes.string,\n    reducing: PropTypes.bool,\n    disappearing: PropTypes.bool,\n\n    vertical: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    startSize: 'auto',\n    mainSize: '1fr',\n    endSize: 'auto',\n\n    // TODO: when an area is another Layout, do not wrap them in an extra div\n    // TODO: option 1) higher value layouts could use start={Layout.create(start)} to ensure Areas are layout root\n    renderStartArea({ start, classes }) {\n      return (\n        start && (\n          <div\n            className={cx(Layout.slotClassNames.start, classes.start)}\n            {...rtlTextContainer.getAttributes({ forElements: [start] })}\n          >\n            {start}\n          </div>\n        )\n      );\n    },\n\n    renderMainArea({ main, classes }) {\n      return (\n        main && (\n          <div\n            className={cx(Layout.slotClassNames.main, classes.main)}\n            {...rtlTextContainer.getAttributes({ forElements: [main] })}\n          >\n            {main}\n          </div>\n        )\n      );\n    },\n\n    renderEndArea({ end, classes }) {\n      return (\n        end && (\n          <div\n            className={cx(Layout.slotClassNames.end, classes.end)}\n            {...rtlTextContainer.getAttributes({ forElements: [end] })}\n          >\n            {end}\n          </div>\n        )\n      );\n    },\n\n    // Heads up!\n    // IE11 Doesn't support grid-gap, insert virtual columns instead\n    renderGap({ gap, classes }) {\n      return gap && <span className={cx(Layout.slotClassNames.gap, classes.gap)} />;\n    },\n  };\n\n  renderComponent({ ElementType, classes, unhandledProps }) {\n    const {\n      reducing,\n      disappearing,\n      start,\n      main,\n      end,\n      renderStartArea,\n      renderMainArea,\n      renderEndArea,\n      renderGap,\n    } = this.props;\n\n    const startArea = renderStartArea({ ...this.props, classes });\n    const mainArea = renderMainArea({ ...this.props, classes });\n    const endArea = renderEndArea({ ...this.props, classes });\n\n    if (!startArea && !mainArea && !endArea) {\n      return <ElementType {...unhandledProps} className={classes.root} />;\n    }\n\n    const activeAreas = [startArea, mainArea, endArea].filter(Boolean);\n    const isSingleArea = activeAreas.length === 1;\n\n    // disappear: render the content directly without wrapping layout or area elements\n    if (disappearing && isSingleArea) {\n      return start || main || end;\n    }\n\n    if (reducing && isSingleArea) {\n      const composedClasses = cx(\n        classes.root,\n        startArea && Layout.slotClassNames.reducedStart,\n        mainArea && Layout.slotClassNames.reducedMain,\n        endArea && Layout.slotClassNames.reducedEnd,\n      );\n      return (\n        <ElementType {...unhandledProps} className={composedClasses}>\n          {start || main || end}\n        </ElementType>\n      );\n    }\n\n    return (\n      <ElementType {...unhandledProps} className={classes.root}>\n        {startArea}\n        {startArea && mainArea && renderGap({ ...this.props, classes })}\n        {mainArea}\n        {(startArea || mainArea) && endArea && renderGap({ ...this.props, classes })}\n        {endArea}\n      </ElementType>\n    );\n  }\n}\n\nLayout.slotClassNames = {\n  start: `${Layout.className}__start`,\n  main: `${Layout.className}__main`,\n  end: `${Layout.className}__end`,\n  gap: `${Layout.className}__gap`,\n  reducedStart: `${Layout.className}--reduced__start`,\n  reducedMain: `${Layout.className}--reduced__main`,\n  reducedEnd: `${Layout.className}--reduced__end`,\n};\n\n/**\n * (DEPRECATED) A layout is a utility for arranging the content of a component.\n */\nexport default withSafeTypeForAs<typeof Layout, LayoutProps>(Layout);\n"],"file":"Layout.js"}