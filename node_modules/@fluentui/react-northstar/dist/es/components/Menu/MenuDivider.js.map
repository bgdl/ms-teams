{"version":3,"sources":["components/Menu/MenuDivider.tsx"],"names":["menuDividerBehavior","React","PropTypes","createShorthandFactory","UIComponent","commonPropTypes","childrenExist","rtlTextContainer","withSafeTypeForAs","MenuDivider","ElementType","classes","unhandledProps","accessibility","props","children","content","attributes","root","getAttributes","forElements","as","createCommon","primary","bool","secondary","vertical","inSubmenu","create","Component","mappedProp"],"mappings":";;;;;;;AAAA,SAAwBA,mBAAxB,QAAmD,yBAAnD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AAEA,SACEC,sBADF,EAEEC,WAFF,EAIEC,eAJF,EAKEC,aALF,EAQEC,gBARF,QAUO,aAVP;AAWA,SAAqBC,iBAArB,QAA8C,aAA9C;;IAYMC,W;;;;;;;;;;;;;0CAoBqE;AAAA,UAAvDC,WAAuD,QAAvDA,WAAuD;AAAA,UAA1CC,OAA0C,QAA1CA,OAA0C;AAAA,UAAjCC,cAAiC,QAAjCA,cAAiC;AAAA,UAAjBC,aAAiB,QAAjBA,aAAiB;AAAA,wBACzC,KAAKC,KADoC;AAAA,UAC/DC,QAD+D,eAC/DA,QAD+D;AAAA,UACrDC,OADqD,eACrDA,OADqD;AAGvE,aACE,oBAAC,WAAD,eACMH,aAAa,CAACI,UAAd,CAAyBC,IAD/B,EAEMX,gBAAgB,CAACY,aAAjB,CAA+B;AAAEC,QAAAA,WAAW,EAAE,CAACL,QAAD,EAAWC,OAAX;AAAf,OAA/B,CAFN,EAGMJ,cAHN;AAIE,QAAA,SAAS,EAAED,OAAO,CAACO;AAJrB,UAMGZ,aAAa,CAACS,QAAD,CAAb,GAA0BA,QAA1B,GAAqCC,OANxC,CADF;AAUD;;;;EAjCuBZ,W;;gBAApBK,W,iBACiB,a;;gBADjBA,W;;gBAAAA,W,eAKe,kB;;gBALfA,W,kBAOkB;AACpBY,EAAAA,EAAE,EAAE,IADgB;AAEpBR,EAAAA,aAAa,EAAEb;AAFK,C;;gBAPlBS,W,iCAaCJ,eAAe,CAACiB,YAAhB,E;AACHC,EAAAA,OAAO,EAAErB,SAAS,CAACsB,I;AACnBC,EAAAA,SAAS,EAAEvB,SAAS,CAACsB,I;AACrBE,EAAAA,QAAQ,EAAExB,SAAS,CAACsB,I;AACpBG,EAAAA,SAAS,EAAEzB,SAAS,CAACsB;;;AAmBzBf,WAAW,CAACmB,MAAZ,GAAqBzB,sBAAsB,CAAC;AAAE0B,EAAAA,SAAS,EAAEpB,WAAb;AAA0BqB,EAAAA,UAAU,EAAE;AAAtC,CAAD,CAA3C;AAEA;;;;AAGA,eAAetB,iBAAiB,CAA6CC,WAA7C,CAAhC","sourcesContent":["import { Accessibility, menuDividerBehavior } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  createShorthandFactory,\n  UIComponent,\n  UIComponentProps,\n  commonPropTypes,\n  childrenExist,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n  ShorthandFactory,\n} from '../../utils';\nimport { WithAsProp, withSafeTypeForAs } from '../../types';\n\nexport interface MenuDividerProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility;\n\n  vertical?: boolean;\n  primary?: boolean;\n  secondary?: boolean;\n  inSubmenu?: boolean;\n}\n\nclass MenuDivider extends UIComponent<WithAsProp<MenuDividerProps>> {\n  static displayName = 'MenuDivider';\n\n  static create: ShorthandFactory<MenuDividerProps>;\n\n  static className = 'ui-menu__divider';\n\n  static defaultProps = {\n    as: 'li',\n    accessibility: menuDividerBehavior as Accessibility,\n  };\n\n  static propTypes = {\n    ...commonPropTypes.createCommon(),\n    primary: PropTypes.bool,\n    secondary: PropTypes.bool,\n    vertical: PropTypes.bool,\n    inSubmenu: PropTypes.bool,\n  };\n\n  renderComponent({ ElementType, classes, unhandledProps, accessibility }) {\n    const { children, content } = this.props;\n\n    return (\n      <ElementType\n        {...accessibility.attributes.root}\n        {...rtlTextContainer.getAttributes({ forElements: [children, content] })}\n        {...unhandledProps}\n        className={classes.root}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n  }\n}\n\nMenuDivider.create = createShorthandFactory({ Component: MenuDivider, mappedProp: 'content' });\n\n/**\n * A MenuDivider is non-actionable element that visually segments items of Menu.\n */\nexport default withSafeTypeForAs<typeof MenuDivider, MenuDividerProps, 'li'>(MenuDivider);\n"],"file":"MenuDivider.js"}