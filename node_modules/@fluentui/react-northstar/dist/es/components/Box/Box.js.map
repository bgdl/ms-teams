{"version":3,"sources":["components/Box/Box.tsx"],"names":["getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","React","ThemeContext","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","withSafeTypeForAs","Box","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","className","design","styles","variables","children","content","getA11Props","debugName","rtl","mapPropsToInlineStyles","classes","unhandledProps","handledProps","ElementType","result","getAttributes","forElements","root","propTypes","createCommon","Object","keys","create","Component"],"mappings":"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","sourcesContent":["import { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport { Accessibility } from '@fluentui/accessibility';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  UIComponentProps,\n} from '../../utils';\nimport { ProviderContextPrepared, WithAsProp, withSafeTypeForAs, FluentComponentStaticProps } from '../../types';\n\nexport interface BoxProps extends UIComponentProps<BoxProps>, ContentComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n}\n\nexport type BoxStylesProps = never;\n\nconst Box: React.FC<WithAsProp<BoxProps>> & FluentComponentStaticProps<BoxProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Box.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, className, design, styles, variables, children, content } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Box.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<BoxStylesProps>(Box.displayName, {\n    className: Box.className,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const unhandledProps = useUnhandledProps(Box.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const result = (\n    <ElementType\n      {...getA11Props('root', {\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return result;\n};\n\nBox.className = 'ui-box';\nBox.displayName = 'Box';\n\nBox.propTypes = commonPropTypes.createCommon();\nBox.handledProps = Object.keys(Box.propTypes) as any;\n\nBox.create = createShorthandFactory({ Component: Box });\n\n/**\n * A Box is a basic component, commonly used for slots in other Fluent UI components.\n * By default it just renders a `div`.\n */\nexport default withSafeTypeForAs<typeof Box, BoxProps>(Box);\n"],"file":"Box.js"}