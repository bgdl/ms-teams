{"version":3,"sources":["components/Chat/ChatMessage.tsx"],"names":["IS_FOCUSABLE_ATTRIBUTE","chatMessageBehavior","menuAsToolbarBehavior","getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","useContextSelector","Ref","customPropTypes","cx","PropTypes","React","ThemeContext","Popper","getPopperPropsFromShorthand","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","withSafeTypeForAs","Box","Label","Menu","Text","Reaction","ChatItemContext","ChatMessage","props","context","useContext","displayName","telemetry","setStart","setEnd","parentAttached","v","attached","accessibility","actionMenu","author","badge","badgePosition","children","className","content","design","mine","positionActionMenu","reactionGroup","reactionGroupPosition","timestamp","styles","variables","overflow","unstable_overflow","useState","focused","setFocused","messageNode","setMessageNode","menuRef","useRef","updateActionsMenuPosition","getA11Props","actionHandlers","preventDefault","event","currentTarget","target","focus","stopPropagation","mapPropsToStyles","hasBadge","hasReactionGroup","mapPropsToInlineStyles","rtl","classes","resolvedStyles","handleFocus","e","handleBlur","shouldPreserveFocusState","relatedTarget","handleMouseEnter","renderActionMenu","actionMenuElement","create","defaultProps","slotClassNames","messageRect","getBoundingClientRect","overflowPadding","top","Math","round","height","flip","behavior","preventOverflow","escapeWithReference","priority","boundariesElement","padding","scheduleUpdate","current","childrenPropExists","rootClasses","root","ElementType","unhandledProps","handledProps","badgeElement","reactionGroupElement","Group","authorElement","size","timestampElement","messageContent","element","unstable_wrapWithFocusZone","onBlur","onFocus","onMouseEnter","getAttributes","forElements","propTypes","createCommon","oneOfType","itemShorthand","collectionShorthand","bool","oneOf","func","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  IS_FOCUSABLE_ATTRIBUTE,\n  chatMessageBehavior,\n  menuAsToolbarBehavior,\n  ChatMessageBehaviorProps,\n} from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport { useContextSelector } from '@fluentui/react-context-selector';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport PopperJs from 'popper.js';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport { Popper, PopperShorthandProps, getPopperPropsFromShorthand } from '../../utils/positioner';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport {\n  WithAsProp,\n  ShorthandValue,\n  ComponentEventHandler,\n  withSafeTypeForAs,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport Box, { BoxProps } from '../Box/Box';\nimport Label, { LabelProps } from '../Label/Label';\nimport Menu, { MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport Text, { TextProps } from '../Text/Text';\nimport Reaction, { ReactionProps } from '../Reaction/Reaction';\nimport { ReactionGroupProps } from '../Reaction/ReactionGroup';\nimport { ChatItemContext } from './chatItemContext';\n\nexport interface ChatMessageSlotClassNames {\n  actionMenu: string;\n  author: string;\n  timestamp: string;\n  badge: string;\n  content: string;\n  reactionGroup: string;\n}\n\nexport interface ChatMessageProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ChatMessageBehaviorProps>;\n\n  /** Menu with actions of the message. */\n  actionMenu?: ShorthandValue<MenuProps & { popper?: PopperShorthandProps }> | ShorthandCollection<MenuItemProps>;\n\n  /** Controls messages's relation to other chat messages. Is automatically set by the ChatItem. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** Author of the message. */\n  author?: ShorthandValue<TextProps>;\n\n  /** Indicates whether message belongs to the current user. */\n  mine?: boolean;\n\n  /** Timestamp of the message. */\n  timestamp?: ShorthandValue<TextProps>;\n\n  /** Badge attached to the message. */\n  badge?: ShorthandValue<LabelProps>;\n\n  /** A message can format the badge to appear at the start or the end of the message. */\n  badgePosition?: 'start' | 'end';\n\n  /**\n   * Called after user's blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user enters by mouse.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseEnter?: ComponentEventHandler<ChatMessageProps>;\n\n  /** Allows suppression of action menu positioning for performance reasons */\n  positionActionMenu?: boolean;\n\n  /** Reaction group applied to the message. */\n  reactionGroup?: ShorthandValue<ReactionGroupProps> | ShorthandCollection<ReactionProps>;\n\n  /** A message can format the reactions group to appear at the start or the end of the message. */\n  reactionGroupPosition?: 'start' | 'end';\n\n  /** Positions an actionMenu slot in \"fixed\" mode. */\n  unstable_overflow?: boolean;\n}\n\nexport type ChatMessageStylesProps = Pick<ChatMessageProps, 'attached' | 'badgePosition' | 'mine'> & {\n  focused: boolean;\n  hasBadge: boolean;\n  hasReactionGroup: boolean;\n};\n\nconst ChatMessage: React.FC<WithAsProp<ChatMessageProps>> &\n  FluentComponentStaticProps<ChatMessageProps> & {\n    slotClassNames: ChatMessageSlotClassNames;\n  } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(ChatMessage.displayName, context.telemetry);\n  setStart();\n\n  const parentAttached = useContextSelector(ChatItemContext, v => v.attached);\n  const {\n    accessibility,\n    actionMenu,\n    attached = parentAttached,\n    author,\n    badge,\n    badgePosition,\n    children,\n    className,\n    content,\n    design,\n    mine,\n    positionActionMenu,\n    reactionGroup,\n    reactionGroupPosition,\n    timestamp,\n    styles,\n    variables,\n    unstable_overflow: overflow,\n  } = props;\n\n  const [focused, setFocused] = React.useState<boolean>(false);\n  const [messageNode, setMessageNode] = React.useState<HTMLElement | null>(null);\n\n  const menuRef = React.useRef<HTMLElement>();\n  const updateActionsMenuPosition = React.useRef<(() => void) | null>(null);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      // prevents default FocusZone behavior, e.g., in ChatMessageBehavior, it prevents FocusZone from using arrow keys\n      // as navigation (only Tab key should work)\n      preventDefault: event => {\n        // preventDefault only if event coming from inside the message\n        if (event.currentTarget !== event.target) {\n          event.preventDefault();\n        }\n      },\n\n      focus: event => {\n        if (messageNode) {\n          messageNode.focus();\n          event.stopPropagation();\n        }\n      },\n    },\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ChatMessageStylesProps>(ChatMessage.displayName, {\n    className: ChatMessage.className,\n    mapPropsToStyles: () => ({\n      attached,\n      badgePosition,\n      focused,\n      mine,\n      hasBadge: !!badge,\n      hasReactionGroup: !!reactionGroup,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(updateActionsMenuPosition, 'current');\n\n    setFocused(true);\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleBlur = (e: React.SyntheticEvent) => {\n    // `focused` controls is focused the whole `ChatMessage` or any of its children. When we're navigating\n    // with keyboard the focused element will be changed and there is no way to use `:focus` selector\n    const shouldPreserveFocusState = _.invoke(e, 'currentTarget.contains', (e as any).relatedTarget);\n\n    setFocused(shouldPreserveFocusState);\n    _.invoke(props, 'onBlur', e, props);\n  };\n\n  const handleMouseEnter = (e: React.SyntheticEvent) => {\n    _.invoke(updateActionsMenuPosition, 'current');\n    _.invoke(props, 'onMouseEnter', e, props);\n  };\n\n  const renderActionMenu = () => {\n    const actionMenuElement = Menu.create(actionMenu, {\n      defaultProps: () => ({\n        [IS_FOCUSABLE_ATTRIBUTE]: true,\n        accessibility: menuAsToolbarBehavior,\n        className: ChatMessage.slotClassNames.actionMenu,\n        styles: resolvedStyles.actionMenu,\n      }),\n    });\n\n    if (!actionMenuElement) {\n      return actionMenuElement;\n    }\n\n    const messageRect: DOMRect | undefined = positionActionMenu && messageNode?.getBoundingClientRect();\n    const overflowPadding: PopperJs.Padding = { top: Math.round(messageRect?.height || 0) };\n\n    return (\n      <Popper\n        enabled={positionActionMenu}\n        align=\"end\"\n        modifiers={\n          positionActionMenu && {\n            // https://popper.js.org/popper-documentation.html#modifiers..flip.behavior\n            // Forces to flip only in \"top-*\" positions\n            flip: { behavior: ['top'] },\n            preventOverflow: {\n              escapeWithReference: false,\n              // https://popper.js.org/popper-documentation.html#modifiers..preventOverflow.priority\n              // Forces to stop prevent overflow on bottom and bottom\n              priority: ['left', 'right'],\n\n              // Is required to properly position action items\n              ...(overflow && {\n                boundariesElement: 'scrollParent',\n                padding: overflowPadding,\n              }),\n            },\n          }\n        }\n        position=\"above\"\n        positionFixed={overflow}\n        targetRef={messageNode}\n        {...getPopperPropsFromShorthand(actionMenu)}\n      >\n        {({ scheduleUpdate }) => {\n          updateActionsMenuPosition.current = scheduleUpdate;\n\n          return <Ref innerRef={menuRef}>{actionMenuElement}</Ref>;\n        }}\n      </Popper>\n    );\n  };\n\n  const childrenPropExists = childrenExist(children);\n  const rootClasses = childrenPropExists ? cx(classes.root, classes.content) : classes.root;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ChatMessage.handledProps, props);\n\n  const badgeElement = Label.create(badge, {\n    defaultProps: () => ({\n      className: ChatMessage.slotClassNames.badge,\n      styles: resolvedStyles.badge,\n    }),\n  });\n\n  const reactionGroupElement = Reaction.Group.create(reactionGroup, {\n    defaultProps: () => ({\n      className: ChatMessage.slotClassNames.reactionGroup,\n      styles: resolvedStyles.reactionGroup,\n    }),\n  });\n\n  const actionMenuElement = renderActionMenu();\n\n  const authorElement = Text.create(author, {\n    defaultProps: () => ({\n      size: 'small',\n      styles: resolvedStyles.author,\n      className: ChatMessage.slotClassNames.author,\n    }),\n  });\n\n  const timestampElement = Text.create(timestamp, {\n    defaultProps: () => ({\n      size: 'small',\n      styles: resolvedStyles.timestamp,\n      timestamp: true,\n      className: ChatMessage.slotClassNames.timestamp,\n    }),\n  });\n\n  const messageContent = Box.create(content, {\n    defaultProps: () => ({\n      className: ChatMessage.slotClassNames.content,\n      styles: resolvedStyles.content,\n    }),\n  });\n\n  const element = (\n    <Ref innerRef={setMessageNode}>\n      {getA11Props.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11Props('root', {\n            className: rootClasses,\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onMouseEnter: handleMouseEnter,\n            ...rtlTextContainer.getAttributes({ forElements: [children] }),\n            ...unhandledProps,\n          })}\n        >\n          {childrenPropExists ? (\n            children\n          ) : (\n            <>\n              {actionMenuElement}\n              {badgePosition === 'start' && badgeElement}\n              {authorElement}\n              {timestampElement}\n              {reactionGroupPosition === 'start' && reactionGroupElement}\n              {messageContent}\n              {reactionGroupPosition === 'end' && reactionGroupElement}\n              {badgePosition === 'end' && badgeElement}\n            </>\n          )}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n\n  return element;\n};\n\nChatMessage.className = 'ui-chat__message';\nChatMessage.displayName = 'ChatMessage';\n\nChatMessage.defaultProps = {\n  accessibility: chatMessageBehavior,\n  badgePosition: 'end',\n  positionActionMenu: true,\n  reactionGroupPosition: 'start',\n};\nChatMessage.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  actionMenu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'top' | 'bottom'>(['top', 'bottom'])]),\n  author: customPropTypes.itemShorthand,\n  badge: customPropTypes.itemShorthand,\n  badgePosition: PropTypes.oneOf(['start', 'end']),\n  mine: PropTypes.bool,\n  timestamp: customPropTypes.itemShorthand,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  positionActionMenu: PropTypes.bool,\n  reactionGroup: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n  reactionGroupPosition: PropTypes.oneOf(['start', 'end']),\n  unstable_overflow: PropTypes.bool,\n};\nChatMessage.handledProps = Object.keys(ChatMessage.propTypes) as any;\n\nChatMessage.create = createShorthandFactory({ Component: ChatMessage, mappedProp: 'content' });\nChatMessage.slotClassNames = {\n  actionMenu: `${ChatMessage.className}__actions`,\n  author: `${ChatMessage.className}__author`,\n  timestamp: `${ChatMessage.className}__timestamp`,\n  badge: `${ChatMessage.className}__badge`,\n  content: `${ChatMessage.className}__content`,\n  reactionGroup: `${ChatMessage.className}__reactions`,\n};\n\n/**\n * A ChatMessage represents a single message in chat.\n */\nexport default withSafeTypeForAs<typeof ChatMessage, ChatMessageProps>(ChatMessage);\n"],"file":"ChatMessage.js"}