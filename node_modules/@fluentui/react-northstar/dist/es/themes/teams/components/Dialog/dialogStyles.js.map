{"version":3,"sources":["themes/teams/components/Dialog/dialogStyles.ts"],"names":["root","v","variables","background","rootBackground","border","borderRadius","rootBorderRadius","outline","padding","rootPadding","position","width","rootWidth","display","gridTemplateColumns","boxShadow","color","foregroundColor","footer","gridColumn","gridRow","actions","content","margin","contentMargin","justifySelf","header","headerMargin","fontSize","headerFontSize","fontWeight","headerFontWeight","headerAction","headerActionMargin","overlay","p","props","alignItems","bottom","flexDirection","justifyContent","left","overflow","right","top","zIndex","overlayZIndex","backdrop","overlayBackground"],"mappings":"AAMA,eAAe;AACbA,EAAAA,IAAI,EAAE;AAAA,QAAcC,CAAd,QAAGC,SAAH;AAAA,WAAyD;AAC7DC,MAAAA,UAAU,EAAEF,CAAC,CAACG,cAD+C;AAE7DC,MAAAA,MAAM,EAAEJ,CAAC,CAACI,MAFmD;AAG7DC,MAAAA,YAAY,EAAEL,CAAC,CAACM,gBAH6C;AAI7DC,MAAAA,OAAO,EAAE,MAJoD;AAK7DC,MAAAA,OAAO,EAAER,CAAC,CAACS,WALkD;AAM7DC,MAAAA,QAAQ,EAAE,UANmD;AAO7DC,MAAAA,KAAK,EAAEX,CAAC,CAACY,SAPoD;AAQ7DC,MAAAA,OAAO,EAAE,MARoD;AAS7DC,MAAAA,mBAAmB,EAAE,UATwC;AAU7DC,MAAAA,SAAS,EAAEf,CAAC,CAACe,SAVgD;AAW7DC,MAAAA,KAAK,EAAEhB,CAAC,CAACiB;AAXoD,KAAzD;AAAA,GADO;AAebC,EAAAA,MAAM,EAAE;AAAA,WAAsB;AAC5BC,MAAAA,UAAU,EAAE,QADgB;AAE5BC,MAAAA,OAAO,EAAE;AAFmB,KAAtB;AAAA,GAfK;AAoBbC,EAAAA,OAAO,EAAE;AAAA,WAAsB;AAC7BR,MAAAA,OAAO,EAAE;AADoB,KAAtB;AAAA,GApBI;AAwBbS,EAAAA,OAAO,EAAE;AAAA,QAActB,CAAd,SAAGC,SAAH;AAAA,WAAyD;AAChEsB,MAAAA,MAAM,EAAEvB,CAAC,CAACwB,aADsD;AAEhEL,MAAAA,UAAU,EAAE,YAFoD;AAGhEC,MAAAA,OAAO,EAAE,CAHuD;AAIhEK,MAAAA,WAAW,EAAE,MAJmD;AAKhEd,MAAAA,KAAK,EAAE;AALyD,KAAzD;AAAA,GAxBI;AAgCbe,EAAAA,MAAM,EAAE;AAAA,QAAc1B,CAAd,SAAGC,SAAH;AAAA,WAAyD;AAC/DsB,MAAAA,MAAM,EAAEvB,CAAC,CAAC2B,YADqD;AAE/DP,MAAAA,OAAO,EAAE,CAFsD;AAG/DD,MAAAA,UAAU,EAAE,CAHmD;AAI/DM,MAAAA,WAAW,EAAE,MAJkD;AAK/DG,MAAAA,QAAQ,EAAE5B,CAAC,CAAC6B,cALmD;AAM/DC,MAAAA,UAAU,EAAE9B,CAAC,CAAC+B;AANiD,KAAzD;AAAA,GAhCK;AAyCbC,EAAAA,YAAY,EAAE;AAAA,QAAchC,CAAd,SAAGC,SAAH;AAAA,WAA0C;AACtDmB,MAAAA,OAAO,EAAE,CAD6C;AAEtDD,MAAAA,UAAU,EAAE,CAF0C;AAGtDH,MAAAA,KAAK,EAAEhB,CAAC,CAACiB,eAH6C;AAItDM,MAAAA,MAAM,EAAEvB,CAAC,CAACiC;AAJ4C,KAA1C;AAAA,GAzCD;AAgDbC,EAAAA,OAAO,EAAE;AAAA,QAAUC,CAAV,SAAGC,KAAH;AAAA,QAAwBpC,CAAxB,SAAaC,SAAb;AAAA;AACPoC,MAAAA,UAAU,EAAE,QADL;AAEPnC,MAAAA,UAAU,EAAE,aAFL;AAGPoC,MAAAA,MAAM,EAAE,CAHD;AAIPzB,MAAAA,OAAO,EAAE,MAJF;AAKP0B,MAAAA,aAAa,EAAE,QALR;AAMPC,MAAAA,cAAc,EAAE,QANT;AAOPC,MAAAA,IAAI,EAAE,CAPC;AAQPC,MAAAA,QAAQ,EAAE,MARH;AASPhC,MAAAA,QAAQ,EAAE,OATH;AAUPiC,MAAAA,KAAK,EAAE,CAVA;AAWPC,MAAAA,GAAG,EAAE,CAXE;AAYPC,MAAAA,MAAM,EAAE7C,CAAC,CAAC8C;AAZH,OAcHX,CAAC,CAACY,QAAF,IAAc;AAAE7C,MAAAA,UAAU,EAAEF,CAAC,CAACgD;AAAhB,KAdX;AAAA;AAhDI,CAAf","sourcesContent":["import { DialogProps } from '../../../../components/Dialog/Dialog';\nimport { ComponentStyleFunctionParam, ICSSInJSStyle } from '@fluentui/styles';\nimport { DialogVariables } from './dialogVariables';\n\ntype DialogStyleParams = ComponentStyleFunctionParam<DialogProps, DialogVariables>;\n\nexport default {\n  root: ({ variables: v }: DialogStyleParams): ICSSInJSStyle => ({\n    background: v.rootBackground,\n    border: v.border,\n    borderRadius: v.rootBorderRadius,\n    outline: 'none',\n    padding: v.rootPadding,\n    position: 'relative',\n    width: v.rootWidth,\n    display: 'grid',\n    gridTemplateColumns: '1fr auto',\n    boxShadow: v.boxShadow,\n    color: v.foregroundColor,\n  }),\n\n  footer: (): ICSSInJSStyle => ({\n    gridColumn: '1 / -1',\n    gridRow: 3,\n  }),\n\n  actions: (): ICSSInJSStyle => ({\n    display: 'inline-block',\n  }),\n\n  content: ({ variables: v }: DialogStyleParams): ICSSInJSStyle => ({\n    margin: v.contentMargin,\n    gridColumn: '1 / span 2',\n    gridRow: 2,\n    justifySelf: 'left',\n    width: '100%',\n  }),\n\n  header: ({ variables: v }: DialogStyleParams): ICSSInJSStyle => ({\n    margin: v.headerMargin,\n    gridRow: 1,\n    gridColumn: 1,\n    justifySelf: 'left',\n    fontSize: v.headerFontSize,\n    fontWeight: v.headerFontWeight,\n  }),\n\n  headerAction: ({ variables: v }: DialogStyleParams) => ({\n    gridRow: 1,\n    gridColumn: 2,\n    color: v.foregroundColor,\n    margin: v.headerActionMargin,\n  }),\n\n  overlay: ({ props: p, variables: v }: DialogStyleParams): ICSSInJSStyle => ({\n    alignItems: 'center',\n    background: 'transparent',\n    bottom: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    left: 0,\n    overflow: 'auto',\n    position: 'fixed',\n    right: 0,\n    top: 0,\n    zIndex: v.overlayZIndex,\n\n    ...(p.backdrop && { background: v.overlayBackground }),\n  }),\n};\n"],"file":"dialogStyles.js"}