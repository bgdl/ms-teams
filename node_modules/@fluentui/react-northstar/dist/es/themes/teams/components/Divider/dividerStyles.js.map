{"version":3,"sources":["themes/teams/components/Divider/dividerStyles.ts"],"names":["childrenExist","pxToRem","beforeAndAfter","size","variables","colors","props","content","flex","vertical","width","height","background","dividerColor","dividerStyles","root","children","color","fitted","important","colorScheme","textColor","display","alignItems","padding","dividerPadding","fontWeight","importantFontWeight","textAlign","fontSize","lineHeight","textLineHeight","marginRight","marginLeft"],"mappings":";AAGA,SAASA,aAAT,EAAwBC,OAAxB,QAAuC,mBAAvC;;AAKA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CACrBC,IADqB,EAErBC,SAFqB,EAGrBC,MAHqB,EAIrBC,KAJqB;AAAA;AAMrBC,IAAAA,OAAO,EAAE,IANY;AAOrBC,IAAAA,IAAI,EAAE;AAPe,KAQjBF,KAAK,CAACG,QAAN,GAAiB;AAAEC,IAAAA,KAAK,YAAKP,IAAI,GAAG,CAAZ,OAAP;AAA0BQ,IAAAA,MAAM,EAAE;AAAlC,GAAjB,GAA8D;AAAEA,IAAAA,MAAM,YAAKR,IAAI,GAAG,CAAZ;AAAR,GAR7C;AASrBS,IAAAA,UAAU,EAAE,KAAMP,MAAN,EAAc,YAAd,EAA4BD,SAAS,CAACS,YAAtC;AATS;AAAA,CAAvB;;AAYA,IAAMC,aAA0E,GAAG;AACjFC,EAAAA,IAAI,EAAE,oBAAyC;AAAA,QAAtCT,KAAsC,QAAtCA,KAAsC;AAAA,QAA/BF,SAA+B,QAA/BA,SAA+B;AAAA,QACrCY,QADqC,GAC2BV,KAD3B,CACrCU,QADqC;AAAA,QAC3BC,KAD2B,GAC2BX,KAD3B,CAC3BW,KAD2B;AAAA,QACpBC,MADoB,GAC2BZ,KAD3B,CACpBY,MADoB;AAAA,QACZf,IADY,GAC2BG,KAD3B,CACZH,IADY;AAAA,QACNgB,SADM,GAC2Bb,KAD3B,CACNa,SADM;AAAA,QACKZ,OADL,GAC2BD,KAD3B,CACKC,OADL;AAAA,QACcE,QADd,GAC2BH,KAD3B,CACcG,QADd;AAE7C,QAAMJ,MAAM,GAAGD,SAAS,CAACgB,WAAV,CAAsBH,KAAtB,CAAf;AACA;AACEA,MAAAA,KAAK,EAAE,KAAMZ,MAAN,EAAc,YAAd,EAA4BD,SAAS,CAACiB,SAAtC,CADT;AAEEC,MAAAA,OAAO,EAAE,MAFX;AAGEC,MAAAA,UAAU,EAAE;AAHd,OAIM,CAACL,MAAD,IAAW;AACbM,MAAAA,OAAO,EAAEf,QAAQ,eAAQL,SAAS,CAACqB,cAAlB,cAAwCrB,SAAS,CAACqB,cAAlD;AADJ,KAJjB,MAOMN,SAAS,IAAI;AACfO,MAAAA,UAAU,EAAEtB,SAAS,CAACuB;AADP,KAPnB,MAUMlB,QAAQ,IAAI;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAVlB,MAWMX,aAAa,CAACgB,QAAD,CAAb,IAA2BT,OAA3B,GACA;AACEqB,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,QAAQ,EAAE5B,OAAO,CAAC,KAAKE,IAAN,CAFnB;AAGE2B,MAAAA,UAAU,EAAE1B,SAAS,CAAC2B,cAHxB;AAIE,oCACK7B,cAAc,CAACC,IAAD,EAAOC,SAAP,EAAkBC,MAAlB,EAA0BC,KAA1B,CADnB;AAEE0B,QAAAA,WAAW,EAAE/B,OAAO,CAAC,EAAD;AAFtB,QAJF;AAQE,mCACKC,cAAc,CAACC,IAAD,EAAOC,SAAP,EAAkBC,MAAlB,EAA0BC,KAA1B,CADnB;AAEE2B,QAAAA,UAAU,EAAEhC,OAAO,CAAC,EAAD;AAFrB;AARF,KADA,GAcA;AACE,oCACKC,cAAc,CAACC,IAAD,EAAOC,SAAP,EAAkBC,MAAlB,EAA0BC,KAA1B,CADnB;AADF,KAzBN;AA+BD;AAnCgF,CAAnF;AAsCA,eAAeQ,aAAf","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport * as _ from 'lodash';\n\nimport { childrenExist, pxToRem } from '../../../../utils';\nimport { StrictColorScheme, ItemType } from '../../../types';\nimport { DividerVariables, dividerColorAreas } from './dividerVariables';\nimport { DividerProps } from '../../../../components/Divider/Divider';\n\nconst beforeAndAfter = (\n  size: number,\n  variables: DividerVariables,\n  colors: StrictColorScheme<ItemType<typeof dividerColorAreas>>,\n  props: DividerProps,\n): ICSSInJSStyle => ({\n  content: '\"\"',\n  flex: 1,\n  ...(props.vertical ? { width: `${size + 1}px`, height: '100%' } : { height: `${size + 1}px` }),\n  background: _.get(colors, 'foreground', variables.dividerColor),\n});\n\nconst dividerStyles: ComponentSlotStylesPrepared<DividerProps, DividerVariables> = {\n  root: ({ props, variables }): ICSSInJSStyle => {\n    const { children, color, fitted, size, important, content, vertical } = props;\n    const colors = variables.colorScheme[color];\n    return {\n      color: _.get(colors, 'foreground', variables.textColor),\n      display: 'flex',\n      alignItems: 'center',\n      ...(!fitted && {\n        padding: vertical ? `0 ${variables.dividerPadding}` : `${variables.dividerPadding} 0`,\n      }),\n      ...(important && {\n        fontWeight: variables.importantFontWeight,\n      }),\n      ...(vertical && { height: '100%' }),\n      ...(childrenExist(children) || content\n        ? {\n            textAlign: 'center',\n            fontSize: pxToRem(12 + size),\n            lineHeight: variables.textLineHeight,\n            '::before': {\n              ...beforeAndAfter(size, variables, colors, props),\n              marginRight: pxToRem(20),\n            },\n            '::after': {\n              ...beforeAndAfter(size, variables, colors, props),\n              marginLeft: pxToRem(20),\n            },\n          }\n        : {\n            '::before': {\n              ...beforeAndAfter(size, variables, colors, props),\n            },\n          }),\n    };\n  },\n};\n\nexport default dividerStyles;\n"],"file":"dividerStyles.js"}