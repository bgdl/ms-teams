{"version":3,"sources":["themes/teams/components/Carousel/carouselNavigationItemStyles.ts"],"names":["pxToRem","CarouselNavigationItem","getColorScheme","getIconFillOrOutlineStyles","carouselNavigationItemStyles","root","p","props","v","variables","active","iconOnly","primary","vertical","colors","colorScheme","color","display","cursor","whiteSpace","border","padding","verticalItemPadding","horizontalPadding","margin","alignItems","justifyContent","iconOnlyColorActive","outline","borderRadius","borderColor","borderColorActive","borderActive","slotClassNames","indicator","background","indicatorBackgroundColor","content","widthAdjust","lineHeight","marginTop","marginBottom","width","minWidth","maxWidth","marginRight","height","indicatorActiveBackgroundColor","verticalAlign"],"mappings":"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","sourcesContent":["import { pxToRem } from '../../../../utils';\nimport CarouselNavigationItem, {\n  CarouselNavigationItemProps,\n} from '../../../../components/Carousel/CarouselNavigationItem';\nimport { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { CarouselNavigationVariables } from './carouselNavigationVariables';\nimport { getColorScheme } from '../../colors';\nimport getIconFillOrOutlineStyles from '../../getIconFillOrOutlineStyles';\n\nconst carouselNavigationItemStyles: ComponentSlotStylesPrepared<\n  CarouselNavigationItemProps,\n  CarouselNavigationVariables\n> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => {\n    const { active, iconOnly, primary, vertical } = p;\n\n    const colors = getColorScheme(v.colorScheme, null, primary);\n\n    return {\n      color: 'inherit',\n      display: 'block',\n      cursor: 'pointer',\n      whiteSpace: 'nowrap',\n\n      ...(iconOnly && {\n        border: `${pxToRem(2)} solid transparent`,\n      }),\n\n      ...(vertical\n        ? { padding: v.verticalItemPadding }\n        : {\n            padding: v.horizontalPadding,\n          }),\n\n      ...(iconOnly && {\n        margin: pxToRem(1),\n        padding: pxToRem(5), // padding works this way to get the border to only be 30x30px on focus which is the current design\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }),\n\n      // active styles\n      ...(active &&\n        iconOnly && {\n          color: v.iconOnlyColorActive,\n          ...getIconFillOrOutlineStyles({ outline: false }),\n        }),\n\n      // focus styles\n      ':focus-visible': {\n        ...(iconOnly && {\n          borderRadius: '50%',\n          borderColor: v.iconOnlyColorActive,\n          ...getIconFillOrOutlineStyles({ outline: false }),\n        }),\n      },\n\n      ...(iconOnly &&\n        primary && {\n          color: 'inherit',\n          borderColor: v.borderColorActive || colors.borderActive,\n        }),\n\n      ':focus': {\n        outline: 0,\n      },\n\n      // hover styles\n      ':hover': {\n        color: 'inherit',\n\n        [`& .${CarouselNavigationItem.slotClassNames.indicator}`]: {\n          background: v.indicatorBackgroundColor,\n        },\n\n        ...(iconOnly && getIconFillOrOutlineStyles({ outline: false })),\n\n        ...(primary && iconOnly && { color: 'inherit' }),\n      },\n    };\n  },\n\n  content: ({ props: p }): ICSSInJSStyle => {\n    const widthAdjust = p.indicator ? 26 : 0;\n\n    return {\n      whiteSpace: 'normal',\n      lineHeight: 1.5,\n      marginTop: pxToRem(-4),\n      marginBottom: pxToRem(-4),\n      display: 'inline-block',\n      ...(p.vertical && {\n        width: 'max-content',\n        minWidth: pxToRem(46 - widthAdjust),\n        maxWidth: pxToRem(262 - widthAdjust),\n        marginRight: pxToRem(16),\n      }),\n    };\n  },\n\n  indicator: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    borderRadius: '50%',\n    width: pxToRem(7),\n    height: pxToRem(7),\n    background: v.indicatorBackgroundColor,\n\n    ...(p.active && {\n      background: v.indicatorActiveBackgroundColor,\n    }),\n\n    ...(p.content && {\n      marginRight: pxToRem(10),\n    }),\n\n    ...(!p.iconOnly && {\n      // reduce margins so text has the dominant influence on the vertical height\n      marginTop: 0,\n      marginBottom: pxToRem(-8),\n      verticalAlign: 'top',\n    }),\n  }),\n};\n\nexport default carouselNavigationItemStyles;\n"],"file":"carouselNavigationItemStyles.js"}