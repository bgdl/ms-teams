{"version":3,"sources":["utils/factories.ts"],"names":["cx","React","mergeStyles","mappedProps","iframe","img","input","createShorthand","allowsJSX","Component","mappedProp","mappedArrayProp","valueOrRenderCallback","options","valIsRenderFunction","isValidElement","process","env","NODE_ENV","console","warn","join","createShorthandFromRenderCallback","renderCallback","createShorthandFromValue","value","createShorthandFactory","Error","val","valIsNoop","render","valIsPrimitive","valIsPropsObject","valIsArray","valIsReactElement","displayName","error","defaultProps","usersProps","overrideProps","props","mappedHTMLProps","as","className","mergedClassesNames","split","style","styles","generateKey","key","elementKey","isNullKey","kind","children","undefined","createElement","shorthandValue","renderTree"],"mappings":"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","sourcesContent":["import cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport {\n  ShorthandValue,\n  Props,\n  PropsOf,\n  ShorthandRenderCallback,\n  ShorthandRenderFunction,\n  ShorthandRenderer,\n} from '../types';\nimport { mergeStyles } from '@fluentui/styles';\n\ntype HTMLTag = 'iframe' | 'img' | 'input';\ntype ShorthandProp = 'children' | 'src' | 'type';\n\ninterface CreateShorthandOptions<P> {\n  /** Default props object */\n  defaultProps?: () => Partial<Props<P>>;\n\n  /** Override props object or function (called with regular props) */\n  overrideProps?: Partial<Props<P>> | ((props: P) => Partial<Props<P>>);\n\n  /** Whether or not automatic key generation is allowed */\n  generateKey?: boolean;\n\n  /** Override the default render implementation. */\n  render?: ShorthandRenderFunction<P>;\n}\n\n// It's only necessary to map props that don't use 'children' as value ('children' is the default)\nconst mappedProps: { [key in HTMLTag]: ShorthandProp } = {\n  iframe: 'src',\n  img: 'src',\n  input: 'type',\n};\n\n// ============================================================\n// Factories\n// ============================================================\n\n/** A more robust React.createElement. It can create elements from primitive values. */\nexport function createShorthand<P>({\n  allowsJSX,\n  Component,\n  mappedProp,\n  mappedArrayProp,\n  valueOrRenderCallback,\n  options = {},\n}: {\n  Component: React.ElementType;\n  allowsJSX?: boolean;\n  mappedProp?: string;\n  mappedArrayProp?: string;\n  valueOrRenderCallback?: ShorthandValue<P> | ShorthandRenderCallback<P>;\n  options?: CreateShorthandOptions<P>;\n}): React.ReactElement<Props> | null | undefined {\n  const valIsRenderFunction =\n    typeof valueOrRenderCallback === 'function' && !React.isValidElement(valueOrRenderCallback);\n  if (valIsRenderFunction) {\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line no-console\n      console.warn(\n        [\n          '@fluentui/react-northstar:',\n          'The usage of render callback is deprecated and will be removed soon. Please use render props for shorthands instead.',\n          'See: https://microsoft.github.io/fluent-ui-react/shorthand-props',\n        ].join(' '),\n      );\n    }\n\n    return createShorthandFromRenderCallback({\n      allowsJSX,\n      Component,\n      renderCallback: valueOrRenderCallback as ShorthandRenderCallback<P>,\n      mappedProp,\n      mappedArrayProp,\n      options,\n    });\n  }\n\n  return createShorthandFromValue({\n    allowsJSX,\n    Component,\n    mappedProp,\n    mappedArrayProp,\n    value: valueOrRenderCallback as ShorthandValue<Props>,\n    options,\n  });\n}\n\nexport type ShorthandFactory<P> = (\n  value: ShorthandValue<P>,\n  options?: CreateShorthandOptions<P>,\n) => React.ReactElement | null | undefined;\n// ============================================================\n// Factory Creators\n// ============================================================\n/**\n * @param config - Options passed to factory\n * @returns A shorthand factory function waiting for `val` and `defaultProps`.\n */\nexport function createShorthandFactory<TStringElement extends keyof JSX.IntrinsicElements, P>(config: {\n  /** A ReactClass or string */\n  Component: TStringElement;\n  /** A function that maps a primitive value to the Component props */\n  mappedProp?: keyof PropsOf<TStringElement>;\n  /** A function that maps an array value to the Component props */\n  mappedArrayProp?: keyof PropsOf<TStringElement>;\n  /** Indicates if factory supports React Elements */\n  allowsJSX?: boolean;\n}): ShorthandFactory<P>;\nexport function createShorthandFactory<TFunctionComponent extends React.FunctionComponent, P>(config: {\n  Component: TFunctionComponent;\n  mappedProp?: keyof PropsOf<TFunctionComponent>;\n  mappedArrayProp?: keyof PropsOf<TFunctionComponent>;\n  allowsJSX?: boolean;\n}): ShorthandFactory<P>;\nexport function createShorthandFactory<TInstance extends React.Component, P>(config: {\n  Component: { new (...args: any[]): TInstance };\n  mappedProp?: keyof PropsOf<TInstance>;\n  mappedArrayProp?: keyof PropsOf<TInstance>;\n  allowsJSX?: boolean;\n}): ShorthandFactory<P>;\nexport function createShorthandFactory<P>({ Component, mappedProp, mappedArrayProp, allowsJSX }) {\n  if (typeof Component !== 'function' && typeof Component !== 'string') {\n    throw new Error('createShorthandFactory() Component must be a string or function.');\n  }\n\n  return (val, options: CreateShorthandOptions<P>) =>\n    createShorthand({\n      Component,\n      mappedProp,\n      mappedArrayProp,\n      allowsJSX,\n      valueOrRenderCallback: val,\n      options,\n    });\n}\n\n// ============================================================\n// Private Utils\n// ============================================================\n\nfunction createShorthandFromValue<P>({\n  Component,\n  mappedProp,\n  mappedArrayProp,\n  value,\n  options,\n  allowsJSX = true,\n}: {\n  Component: React.ElementType;\n  mappedProp?: string;\n  mappedArrayProp?: string;\n  allowsJSX?: boolean;\n  value?: ShorthandValue<P>;\n  options?: CreateShorthandOptions<P>;\n}) {\n  if (typeof Component !== 'function' && typeof Component !== 'string') {\n    throw new Error('createShorthand() Component must be a string or function.');\n  }\n  // short circuit noop values\n  const valIsNoop = _.isNil(value) || typeof value === 'boolean';\n  if (valIsNoop && !options.render) return null;\n\n  const valIsPrimitive = typeof value === 'string' || typeof value === 'number';\n  const valIsPropsObject = _.isPlainObject(value);\n  const valIsArray = _.isArray(value);\n  const valIsReactElement = React.isValidElement(value);\n\n  // unhandled type warning\n  if (process.env.NODE_ENV !== 'production') {\n    const displayName = typeof Component === 'string' ? Component : Component.displayName;\n\n    if (!valIsPrimitive && !valIsPropsObject && !valIsArray && !valIsReactElement && !valIsNoop) {\n      /* eslint-disable-next-line no-console */\n      console.error(\n        [\n          `The shorthand prop for \"${displayName}\" component was passed a JSX element but this slot only supports string|number|object|array|ReactElements.`,\n          ' Use null|undefined|boolean for none.',\n          ` Received: ${value}`,\n        ].join(''),\n      );\n    }\n\n    if (!allowsJSX && valIsReactElement) {\n      /* eslint-disable-next-line no-console */\n      console.error(\n        [\n          `The shorthand prop for \"${displayName}\" component was passed a JSX element but this slot only supports string|number|object|array.`,\n          ' Use null|undefined|boolean for none.',\n          ` Received: ${value}`,\n        ].join(''),\n      );\n    }\n  }\n\n  // ----------------------------------------\n  // Build up props\n  // ----------------------------------------\n  const defaultProps = options.defaultProps ? options.defaultProps() : ({} as Props<P>);\n\n  // User's props\n  const usersProps =\n    (valIsReactElement && ({} as Props<P>)) || (valIsPropsObject && (value as Props<P>)) || ({} as Props<P>);\n\n  // Override props\n  const overrideProps: Props<P> =\n    typeof options.overrideProps === 'function'\n      ? (options.overrideProps({ ...defaultProps, ...usersProps }) as Props<P>)\n      : (options.overrideProps as Props<P>) || ({} as Props<P>);\n\n  // Merge props\n  const props: Props<P> = { ...defaultProps, ...usersProps, ...overrideProps };\n\n  const mappedHTMLProps = mappedProps[overrideProps.as || defaultProps.as];\n\n  // Map prop for primitive value\n  if (valIsPrimitive || valIsReactElement) {\n    (props as any)[mappedHTMLProps || mappedProp || 'children'] = value;\n  }\n\n  // Map prop for array value\n  if (valIsArray) {\n    (props as any)[mappedHTMLProps || mappedArrayProp || 'children'] = value;\n  }\n\n  // Merge className\n  if (defaultProps.className || overrideProps.className || usersProps.className) {\n    const mergedClassesNames = cx(defaultProps.className, overrideProps.className, usersProps.className);\n    (props as any).className = _.uniq(mergedClassesNames.split(' ')).join(' ');\n  }\n\n  // Merge style\n  if (defaultProps.style || overrideProps.style || usersProps.style) {\n    (props as any).style = { ...defaultProps.style, ...usersProps.style, ...overrideProps.style };\n  }\n\n  // Merge styles\n  if (defaultProps.styles || overrideProps.styles || usersProps.styles) {\n    (props as any).styles = mergeStyles(defaultProps.styles, usersProps.styles, overrideProps.styles);\n  }\n\n  // ----------------------------------------\n  // Get key\n  // ----------------------------------------\n  const { generateKey = true } = options;\n\n  // Use key or generate key\n  if (generateKey && _.isNil(props.key)) {\n    if (valIsPrimitive) {\n      // use string/number shorthand values as the key\n      (props as any).key = value;\n    }\n\n    if (valIsReactElement) {\n      // use the key from React Element\n      const elementKey = (value as React.ReactElement).key;\n      // <div /> - key is not passed as will be `null`\n      // <div key={null} /> - key is passed as `null` and will be stringified\n      const isNullKey = elementKey === null;\n\n      if (!isNullKey) {\n        (props as any).key = elementKey;\n      }\n    }\n  }\n\n  // Remove the kind prop from the props object\n  delete props.kind;\n\n  // ----------------------------------------\n  // Create Element\n  // ----------------------------------------\n  const { render } = options;\n  if (render) {\n    return render(Component, props);\n  }\n\n  if (typeof props.children === 'function') {\n    return props.children(Component, { ...props, children: undefined });\n  }\n\n  if (!allowsJSX && valIsReactElement) {\n    return null;\n  }\n\n  // Create ReactElements from built up props\n  if (valIsPrimitive || valIsPropsObject || valIsArray || valIsReactElement) {\n    return React.createElement(Component, props);\n  }\n\n  return null;\n}\n\nfunction createShorthandFromRenderCallback<P>({\n  Component,\n  renderCallback,\n  mappedProp,\n  mappedArrayProp,\n  allowsJSX,\n  options,\n}: {\n  Component: React.ReactType;\n  renderCallback: ShorthandRenderCallback<P>;\n  mappedProp?: string;\n  mappedArrayProp?: string;\n  allowsJSX?: boolean;\n  options?: CreateShorthandOptions<P>;\n}) {\n  const render: ShorthandRenderer<P> = (shorthandValue, renderTree) => {\n    return createShorthandFromValue({\n      Component,\n      mappedProp,\n      mappedArrayProp,\n      allowsJSX,\n      value: shorthandValue,\n      options: {\n        ...options,\n        ...(renderTree && { render: renderTree }),\n      },\n    });\n  };\n\n  return renderCallback(render);\n}\n"],"file":"factories.js"}