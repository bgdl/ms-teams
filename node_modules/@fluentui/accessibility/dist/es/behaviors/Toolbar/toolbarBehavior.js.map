{"version":3,"sources":["behaviors/Toolbar/toolbarBehavior.ts"],"names":["FocusZoneDirection","toolbarBehavior","props","attributes","root","role","focusZone","shouldFocusInnerElementWhenReceivedFocus","direction","horizontal"],"mappings":"AACA,SAASA,kBAAT,QAAmC,uBAAnC;AAEA;;;;;;;;;;AASA,IAAMC,eAA8B,GAAG,SAAjCA,eAAiC,CAAAC,KAAK;AAAA,SAAK;AAC/CC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KADmC;AAM/CC,IAAAA,SAAS,EAAE;AACTJ,MAAAA,KAAK,EAAE;AACLK,QAAAA,wCAAwC,EAAE,IADrC;AAELC,QAAAA,SAAS,EAAER,kBAAkB,CAACS;AAFzB;AADE;AANoC,GAAL;AAAA,CAA5C;;AAcA,eAAeR,eAAf","sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\n\n/**\n * @description\n * Implements ARIA Toolbar design pattern.\n * Child item components need to have toolbarItemBehavior assigned.\n * @specification\n * Adds role 'toolbar' to 'root' slot.\n * Provides arrow key navigation in horizontal direction.\n * When component's container element receives focus, focus will be set to the default focusable child element of the component.\n */\nconst toolbarBehavior: Accessibility = props => ({\n  attributes: {\n    root: {\n      role: 'toolbar',\n    },\n  },\n  focusZone: {\n    props: {\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      direction: FocusZoneDirection.horizontal,\n    },\n  },\n});\n\nexport default toolbarBehavior;\n"],"file":"toolbarBehavior.js"}