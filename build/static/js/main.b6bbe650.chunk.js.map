{"version":3,"sources":["pages/configure.tsx","components/shared/page-title.tsx","components/shared/vertical-menu.tsx","pages/home.tsx","pages/auth/login.tsx","pages/auth/sign-in-start.tsx","pages/auth/sign-in-end.tsx","config/routes.tsx","config/home-menu-items.tsx","helpers/router-helper.tsx","constants.ts","helpers/teams-theme-helper.ts","helpers/auth-helper.ts","App.tsx","index.tsx"],"names":["Configure","msTeams","registerOnSaveHandler","saveEvent","setSettings","contentUrl","window","location","origin","entityId","notifySuccess","setValidityState","PageTitle","props","Flex","gap","styles","paddingLeft","icon","FlexItem","align","Text","content","title","size","weight","VerticalMenu","menuWidth","state","menuItems","currentKey","length","key","Fragment","Segment","this","renderMenu","gridColumn","renderContent","Menu","defaultActiveIndex","items","formatMenuItems","vertical","pointing","width","onActiveIndexChange","menuItemChanged","bind","currentContent","filter","mi","console","error","pageContent","result","item","push","label","event","menu","currentIndex","activeIndex","setState","React","Component","Home","Grid","columns","HomeMenuItems","Login","onClick","AuthHelper","SignInStart","StartSignIn","SignInEnd","EndSignIn","routes","route","component","authenticated","RouterHelper","RenderRoutes","routeDefinitions","copyOfRoutes","map","path","exact","TeamsThemes","Auth","appId","cacheLocation","signInStartPage","signInEndPage","authenticatedDomains","TeamsThemeHelper","themeStr","themes","teamsDark","teamsHighContrast","teams","authenticationContext","AuthenticationContext","clientId","constants","redirectUri","endpoints","navigateToLoginRequestUrl","cachedUser","getCachedUser","cachedToken","getCachedToken","accessToken","getAccessToken","replace","clearCache","login","isCallback","hash","handleWindowCallback","opener","acquireToken","err","token","notifyFailure","microsoftTeams","authentication","getLoginError","Promise","resolve","reject","authenticate","url","height","successCallback","failureCallback","reason","App","theme","getTheme","loggedIn","IsUserLoggedIn","updateTheme","context","Provider","AuthenticatedRoutes","UnauthenticatedRoutes","themeString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6bbe650.chunk.js","sourcesContent":["import React from 'react';\nimport * as msTeams from '@microsoft/teams-js';\n\nexport default function Configure() {\n  msTeams.settings.registerOnSaveHandler(saveEvent => {\n    msTeams.settings.setSettings({\n      contentUrl: window.location.origin,\n      entityId: window.location.origin\n    });\n\n    saveEvent.notifySuccess();\n  });\n  msTeams.settings.setValidityState(true);\n\n  return (\n    <h1>Configure</h1>\n  );\n}","import React from 'react';\nimport { Flex, FlexItem, Text } from '@fluentui/react-northstar';\n\nexport default function PageTitle(props: PageTitleProps) {\n    return (\n        <Flex gap=\"gap.medium\" styles={{ paddingLeft: '5px' }}>\n            {props.icon && <FlexItem align=\"center\">\n                {props.icon}\n            </FlexItem>}\n            <FlexItem>\n                <Text content={props.title} size=\"large\" weight=\"bold\" />\n            </FlexItem>\n        </Flex>\n    );\n}\n\ninterface PageTitleProps {\n    title: string;\n    icon?: JSX.Element;\n}","import React from 'react';\nimport { Segment, Menu, ShorthandCollection, MenuItemProps, MenuShorthandKinds } from '@fluentui/react-northstar';\nimport { default as MenuItem } from '../../models/menu-item';\n\n/**\n * Default number of columns in a flex box to divide content between\n */\nconst pageWidth = 12;\n\n/**\n * The vertical menu component. This renders a list of items to choose between on\n * the left of the screen and the content of that item on the right hand side.\n */\nexport default class VerticalMenu extends React.Component<VerticalMenuProps, VerticalMenuState> {\n    private menuWidth: number;\n\n    constructor(props: VerticalMenuProps) {\n        super(props);\n\n        this.menuWidth = props.menuWidth;\n\n        this.state = {\n            menuItems: props.menuItems,\n            currentKey: props.menuItems.length > 0 ? props.menuItems[0].key : ''\n        };\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Segment\n                    content={this.renderMenu()}\n                    styles={{ gridColumn: `span ${this.menuWidth}` }}\n                />\n                <Segment\n                    content={this.renderContent()}\n                    styles={{ gridColumn: `span ${pageWidth - this.menuWidth}` }}\n                />\n            </React.Fragment>\n        );\n    }\n\n    private renderMenu() {\n        return (\n            <Menu\n                defaultActiveIndex={0}\n                items={this.formatMenuItems(this.state.menuItems)}\n                vertical\n                pointing\n                styles={{ width: 'auto' }}\n                onActiveIndexChange={this.menuItemChanged.bind(this)}\n            />\n        );\n    }\n\n    private renderContent() {\n        let currentContent = this.state.menuItems.filter(mi => mi.key === this.state.currentKey);\n\n        if (currentContent.length !== 1) {\n            console.error(`A single item was not found for content with key: ${this.state.currentKey}`);\n        }\n\n        return (\n            currentContent[0].pageContent\n        );\n    }\n\n    private formatMenuItems(items: MenuItem[]): ShorthandCollection<MenuItemProps, MenuShorthandKinds> {\n        let result: ShorthandCollection<MenuItemProps, MenuShorthandKinds> = [];\n\n        for (let item of items) {\n            result.push({\n                key: item.key,\n                content: item.label,\n                icon: item.icon\n            });\n        }\n\n        return result;\n    }\n\n    private menuItemChanged(event: React.SyntheticEvent<HTMLElement>, menu: any) {\n        let currentIndex = menu.activeIndex;\n\n        if (menu.items && menu.items[currentIndex]) {\n            this.setState({\n                currentKey: menu.items[currentIndex].key\n            });\n        }\n    }\n}\n\n/**\n * Vertical menu props type\n */\ninterface VerticalMenuProps {\n    /**\n     * The width of the menu bar in css units (container divided by 12)\n     */\n    menuWidth: 1|2|3|4|5|6|7|8|9|10|11|12;\n\n    /**\n     * The menu items to choose between\n     */\n    menuItems: MenuItem[];\n}\n\n/**\n * Vertical menu state type\n */\ninterface VerticalMenuState {\n    /**\n     * THe key of the current component to be shown\n     */\n    currentKey: string;\n\n    /**\n     * The menu items to choose between\n     */\n    menuItems: MenuItem[];\n}","import React from 'react';\nimport { Grid, Segment, TeamsIcon } from '@fluentui/react-northstar';\nimport { PageTitle, VerticalMenu } from '../components/shared';\nimport { HomeMenuItems } from '../config';\n\nexport default function Home() {\n  return (\n    <Grid columns=\"repeat(12, 1fr)\">\n      <Segment content={<PageTitle title=\"Our new Teams app\" icon={<TeamsIcon />} />} styles={{ gridColumn: 'span 2' }} />\n      <Segment styles={{ gridColumn: 'span 10' }} />\n      <VerticalMenu menuWidth={2} menuItems={HomeMenuItems} />\n    </Grid>\n  );\n}","import React from 'react';\nimport { AuthHelper } from '../../helpers';\n\nexport default function Login() {\n    return <button onClick={AuthHelper.Login}>Click to log in</button>\n}","import React from 'react';\nimport { AuthHelper } from '../../helpers';\n\nexport default function SignInStart() {\n    AuthHelper.StartSignIn();\n    return <h1>Starting sign in...</h1>\n}","import React from 'react';\nimport { AuthHelper } from '../../helpers';\n\nexport default function SignInEnd() {\n    AuthHelper.EndSignIn();\n    return <h1>Ending sign in...</h1>\n}","import React from 'react';\nimport { Home, Configure } from '../pages';\nimport { Login, SignInStart, SignInEnd } from '../pages/auth';\nimport { RouteDefinition } from '../models/route-definition';\n\nconst routes: RouteDefinition[] = [\n    {\n        route: '/configure',\n        component: <Configure />,\n        authenticated: false\n    },\n    {\n        route: '/auth/login',\n        component: <Login />,\n        authenticated: false\n    },\n    {\n        route: '/auth/signinstart',\n        component: <SignInStart />,\n        authenticated: false\n    },\n    {\n        route: '/auth/signinend',\n        component: <SignInEnd />,\n        authenticated: false\n    },\n    {\n        route: '/',\n        component: <Home />,\n        authenticated: true\n    }\n];\n\nexport default routes;","import React from 'react';\nimport { default as MenuItem } from '../models/menu-item';\nimport { GalleryIcon, PresenterIcon } from '@fluentui/react-northstar';\n\nconst menuItems: MenuItem[] = [\n    {\n        key: 'home',\n        icon: <GalleryIcon />,\n        label: 'Home',\n        pageContent: <div><h1>Home tab</h1><p>Home tab content</p></div>\n    },\n    {\n        key: 'other-content',\n        icon: <PresenterIcon />,\n        label: 'Other Tab',\n        pageContent: <div><h1>Some other content</h1><p>Something else goes here</p></div>\n    }\n];\n\nexport default menuItems;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { routes as routeDefinitions } from '../config';\nimport { RouteDefinition } from '../models/route-definition';\nimport { Login } from '../pages/auth';\n\nexport default class RouterHelper {\n  public static AuthenticatedRoutes(): JSX.Element {\n    return RouterHelper.RenderRoutes(routeDefinitions);\n  }\n\n  public static UnauthenticatedRoutes(): JSX.Element {\n    let copyOfRoutes = routeDefinitions;\n\n    for (let route of copyOfRoutes) {\n      if (route.authenticated) {\n        route.component = <Login />\n      }\n    }\n\n    return RouterHelper.RenderRoutes(copyOfRoutes);\n  }\n\n  private static RenderRoutes(routes: RouteDefinition[]): JSX.Element {\n    return (\n      <Router>\n        <Switch>\n          {routes.map(route =>\n            <Route path={route.route} exact={route.route === '/'}>\n              {route.component}\n            </Route>\n          )}\n        </Switch>\n      </Router>\n    );\n  }\n}","export const TeamsThemes = {\n    contrast: \"contrast\",\n    dark: \"dark\",\n    default: \"default\"\n};\n\nexport const Auth = {\n    appId: 'ee1a0fd7-06ea-44c0-83d6-b29bbc21e697',\n    cacheLocation: 'localStorage',\n    signInStartPage: 'auth/signinstart',\n    signInEndPage: 'auth/signinend',\n    authenticatedDomains: {\n        \"https://graph.microsoft.com\": \"https://graph.microsoft.com\"\n    }\n};","import { ThemePrepared, themes } from '@fluentui/react-northstar';\nimport { TeamsThemes } from '../constants';\n\nexport default class TeamsThemeHelper {\n    public static getTheme(themeStr: string | undefined): ThemePrepared {\n        themeStr = themeStr || '';\n\n        switch (themeStr) {\n            case TeamsThemes.dark:\n                return themes.teamsDark;\n            case TeamsThemes.contrast:\n                return themes.teamsHighContrast;\n            case TeamsThemes.default:\n            default:\n                return themes.teams;\n        }\n    }\n}","import * as constants from '../constants';\nimport * as msTeams from '@microsoft/teams-js';\nimport AuthenticationContext from 'adal-angular';\n\nconst authenticationContext = new AuthenticationContext({\n    clientId: constants.Auth.appId,\n    redirectUri: `${window.location.origin}/${constants.Auth.signInEndPage}`,\n    cacheLocation: constants.Auth.cacheLocation as 'localStorage' | 'sessionStorage',\n    endpoints: constants.Auth.authenticatedDomains,\n    navigateToLoginRequestUrl: false\n});\n\nexport default class AuthHelper {\n    /**\n     * Uses the current authetication context to check if a user\n     * is logged in. In this case, this is determined by the presence\n     * of a cached user and cached token with length > 0.\n     */\n    public static IsUserLoggedIn(): boolean {\n        let cachedUser = authenticationContext.getCachedUser();\n        let cachedToken = authenticationContext.getCachedToken(constants.Auth.appId);\n\n        return !!cachedUser && cachedToken.length > 0;\n    }\n\n    /**\n     * Attempts to get an access token for the user. If successful,\n     * sends the user to the home page again where they will now\n     * be logged in.\n     */\n    public static async Login(): Promise<void> {\n        let accessToken: string = '';\n\n        try {\n            accessToken = await AuthHelper.getAccessToken();\n        } catch (err) {\n            console.error(err)\n        }\n\n        if (accessToken.length > 0) {\n            window.location.replace(window.location.origin);\n        }\n    }\n\n    /**\n     * Clears any existing user from the cache, then requests\n     * an AD token.\n     */\n    public static StartSignIn(): void {\n        authenticationContext.clearCache();\n        authenticationContext.login();\n    }\n\n    /**\n     * Called from the sign-in-end page. Checks for the presence\n     * of the AD token, and notifies teams of a successful log in\n     * if it is there, or notifies of failure otherwise.\n     */\n    public static EndSignIn(): void {\n        if (authenticationContext.isCallback(window.location.hash)) {\n            authenticationContext.handleWindowCallback(window.location.hash);\n\n            if (window.opener) {\n                if (authenticationContext.getCachedUser()) {\n                    authenticationContext.acquireToken(\"https://graph.microsoft.com\", (err, token) => {\n                        if (token) {\n                            msTeams.authentication.notifySuccess(token);\n                        } else if (err) {\n                            msTeams.authentication.notifyFailure(err);\n                        } else {\n                            msTeams.authentication.notifyFailure(\"UnexpectedFailure\");\n                        }\n                    });\n                } else {\n                    microsoftTeams.authentication.notifyFailure(authenticationContext.getLoginError());\n                }\n            }\n        }\n    }\n\n    /**\n     * Begins the login flow by opening a popup window\n     * at the sign-in-start page.\n     */\n    private static async getAccessToken(): Promise<string> {\n        return new Promise<string>((resolve, reject) => {\n            msTeams.authentication.authenticate({\n                url: `${window.location.origin}/${constants.Auth.signInStartPage}`,\n                width: 600,\n                height: 535,\n                successCallback: (accessToken: string | undefined) => {\n                    resolve(accessToken);\n                },\n                failureCallback: (reason) => {\n                    reject(reason);\n                }\n            })\n        })\n    }\n}","import React from 'react';\nimport { RouterHelper, TeamsThemeHelper, AuthHelper } from './helpers';\nimport { Provider, ThemePrepared } from '@fluentui/react-northstar';\nimport * as msTeams from '@microsoft/teams-js';\n\nexport default class App extends React.Component<IAppProps, IAppState> {  \n  constructor(props: IAppProps) {\n    super(props);\n\n    this.state = {\n      theme: TeamsThemeHelper.getTheme('default'),\n      loggedIn: AuthHelper.IsUserLoggedIn()\n    };\n\n    msTeams.initialize();\n    msTeams.registerOnThemeChangeHandler(this.updateTheme.bind(this));\n    msTeams.getContext(context => { this.updateTheme(context.theme) });\n  }\n  \n  render() {\n    return (\n      <Provider theme={this.state.theme}>\n        { this.state.loggedIn ? <RouterHelper.AuthenticatedRoutes /> : <RouterHelper.UnauthenticatedRoutes />}\n      </Provider>\n    )\n  }\n\n  private updateTheme(themeString: string | undefined): void {\n    this.setState({\n      theme: TeamsThemeHelper.getTheme(themeString)\n    });\n  }\n}\n\ninterface IAppProps { }\n\ninterface IAppState {\n  theme: ThemePrepared;\n  loggedIn: boolean;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}